// <auto-generated /> 
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.
 
// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC
 
using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace livemenu.Areas.CMS.Controllers
{
    public partial class AdminController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AdminController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportTo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportTo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Import()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Import);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CatalogsGridViewBatchUpdatePartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CatalogsGridViewBatchUpdatePartial);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AdminController Actions { get { return MVC.CMS.Admin; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "CMS";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Admin";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ExportTo = "ExportTo";
            public readonly string Import = "Import";
            public readonly string Index = "Index";
            public readonly string GenerateBWPConfigCodes = "GenerateBWPConfigCodes";
            public readonly string Catalogs = "Catalogs";
            public readonly string CatalogsGridViewPartial = "CatalogsGridViewPartial";
            public readonly string CatalogsGridViewBatchUpdatePartial = "CatalogsGridViewBatchUpdatePartial";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ExportTo = "ExportTo";
            public const string Import = "Import";
            public const string Index = "Index";
            public const string GenerateBWPConfigCodes = "GenerateBWPConfigCodes";
            public const string Catalogs = "Catalogs";
            public const string CatalogsGridViewPartial = "CatalogsGridViewPartial";
            public const string CatalogsGridViewBatchUpdatePartial = "CatalogsGridViewBatchUpdatePartial";
        }


        static readonly ActionParamsClass_ExportTo s_params_ExportTo = new ActionParamsClass_ExportTo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportTo ExportToParams { get { return s_params_ExportTo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportTo
        {
            public readonly string filterString = "filterString";
        }
        static readonly ActionParamsClass_Import s_params_Import = new ActionParamsClass_Import();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Import ImportParams { get { return s_params_Import; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Import
        {
            public readonly string file = "file";
        }
        static readonly ActionParamsClass_CatalogsGridViewBatchUpdatePartial s_params_CatalogsGridViewBatchUpdatePartial = new ActionParamsClass_CatalogsGridViewBatchUpdatePartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CatalogsGridViewBatchUpdatePartial CatalogsGridViewBatchUpdatePartialParams { get { return s_params_CatalogsGridViewBatchUpdatePartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CatalogsGridViewBatchUpdatePartial
        {
            public readonly string updateValues = "updateValues";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Catalogs = "Catalogs";
                public readonly string CatalogsGridViewPartial = "CatalogsGridViewPartial";
                public readonly string GenerateBWPConfigCodes = "GenerateBWPConfigCodes";
            }
            public readonly string Catalogs = "~/Areas/CMS/Views/Admin/Catalogs.cshtml";
            public readonly string CatalogsGridViewPartial = "~/Areas/CMS/Views/Admin/CatalogsGridViewPartial.cshtml";
            public readonly string GenerateBWPConfigCodes = "~/Areas/CMS/Views/Admin/GenerateBWPConfigCodes.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AdminController : livemenu.Areas.CMS.Controllers.AdminController
    {
        public T4MVC_AdminController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ExportToOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string filterString);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportTo(string filterString)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterString", filterString);
            ExportToOverride(callInfo, filterString);
            return callInfo;
        }

        [NonAction]
        partial void ImportOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string file);

        [NonAction]
        public override System.Web.Mvc.JsonResult Import(string file)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Import);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            ImportOverride(callInfo, file);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GenerateBWPConfigCodesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GenerateBWPConfigCodes()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GenerateBWPConfigCodes);
            GenerateBWPConfigCodesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CatalogsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Catalogs()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Catalogs);
            CatalogsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CatalogsGridViewPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CatalogsGridViewPartial()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CatalogsGridViewPartial);
            CatalogsGridViewPartialOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CatalogsGridViewBatchUpdatePartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVCxGridViewBatchUpdateValues<CatalogItem, int> updateValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult CatalogsGridViewBatchUpdatePartial(MVCxGridViewBatchUpdateValues<CatalogItem, int> updateValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CatalogsGridViewBatchUpdatePartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "updateValues", updateValues);
            CatalogsGridViewBatchUpdatePartialOverride(callInfo, updateValues);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
