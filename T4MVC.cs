                                                        
  
 
 
// <auto-generated /> 
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.
 
// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC
 
using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly ActionsClass s_Actions = new ActionsClass();
    public static ActionsClass Actions { get { return s_Actions; } }
    static readonly AdsClass s_Ads = new AdsClass();
    public static AdsClass Ads { get { return s_Ads; } }
    static readonly CalendarClass s_Calendar = new CalendarClass();
    public static CalendarClass Calendar { get { return s_Calendar; } }
    static readonly CloudClass s_Cloud = new CloudClass();
    public static CloudClass Cloud { get { return s_Cloud; } }
    static readonly CMSClass s_CMS = new CMSClass();
    public static CMSClass CMS { get { return s_CMS; } }
    static readonly CommunicationsClass s_Communications = new CommunicationsClass();
    public static CommunicationsClass Communications { get { return s_Communications; } }
    static readonly CRMClass s_CRM = new CRMClass();
    public static CRMClass CRM { get { return s_CRM; } }
    static readonly DocsClass s_Docs = new DocsClass();
    public static DocsClass Docs { get { return s_Docs; } }
    static readonly EventsClass s_Events = new EventsClass();
    public static EventsClass Events { get { return s_Events; } }
    static readonly IdeasClass s_Ideas = new IdeasClass();
    public static IdeasClass Ideas { get { return s_Ideas; } }
    static readonly ListsClass s_Lists = new ListsClass();
    public static ListsClass Lists { get { return s_Lists; } }
    static readonly MarketClass s_Market = new MarketClass();
    public static MarketClass Market { get { return s_Market; } }
    static readonly NewsClass s_News = new NewsClass();
    public static NewsClass News { get { return s_News; } }
    static readonly PartnerClass s_Partner = new PartnerClass();
    public static PartnerClass Partner { get { return s_Partner; } }
    static readonly PaymentClass s_Payment = new PaymentClass();
    public static PaymentClass PaymentArea { get { return s_Payment; } }
    static readonly PlacesClass s_Places = new PlacesClass();
    public static PlacesClass Places { get { return s_Places; } }
    static readonly PlansClass s_Plans = new PlansClass();
    public static PlansClass Plans { get { return s_Plans; } }
    static readonly PostcardsClass s_Postcards = new PostcardsClass();
    public static PostcardsClass Postcards { get { return s_Postcards; } }
    static readonly PrintClass s_Print = new PrintClass();
    public static PrintClass Print { get { return s_Print; } }
    static readonly ProjectsClass s_Projects = new ProjectsClass();
    public static ProjectsClass Projects { get { return s_Projects; } }
    static readonly ResearchClass s_Research = new ResearchClass();
    public static ResearchClass Research { get { return s_Research; } }
    static readonly ReserveClass s_Reserve = new ReserveClass();
    public static ReserveClass Reserve { get { return s_Reserve; } }
    static readonly SettingsClass s_Settings = new SettingsClass();
    public static SettingsClass Settings { get { return s_Settings; } }
    static readonly SupportClass s_Support = new SupportClass();
    public static SupportClass Support { get { return s_Support; } }
    static readonly TasksClass s_Tasks = new TasksClass();
    public static TasksClass Tasks { get { return s_Tasks; } }
    static readonly TeamClass s_Team = new TeamClass();
    public static TeamClass Team { get { return s_Team; } }
    static readonly TransitClass s_Transit = new TransitClass();
    public static TransitClass Transit { get { return s_Transit; } }
    static readonly VacanciesClass s_Vacancies = new VacanciesClass();
    public static VacanciesClass Vacancies { get { return s_Vacancies; } }
    static readonly WMSClass s_WMS = new WMSClass();
    public static WMSClass WMS { get { return s_WMS; } }
    public static livemenu.Controllers.AccountController Account = new livemenu.Controllers.T4MVC_AccountController();
    public static livemenu.Controllers.CommonController Common = new livemenu.Controllers.T4MVC_CommonController();
    public static livemenu.Controllers.FileManagerController FileManager = new livemenu.Controllers.T4MVC_FileManagerController();
    public static livemenu.Controllers.UserFontsController UserFonts = new livemenu.Controllers.T4MVC_UserFontsController();
    public static livemenu.Controllers.HomeController Home = new livemenu.Controllers.T4MVC_HomeController();
    public static livemenu.Controllers.InstructionController Instruction = new livemenu.Controllers.T4MVC_InstructionController();
    public static livemenu.Controllers.LMController LM = new livemenu.Controllers.T4MVC_LMController();
    public static livemenu.Controllers.LoginController Login = new livemenu.Controllers.T4MVC_LoginController();
    public static livemenu.Controllers.PositionController Position = new livemenu.Controllers.T4MVC_PositionController();
    public static livemenu.Controllers.ProfileController Profile = new livemenu.Controllers.T4MVC_ProfileController();
    public static livemenu.Controllers.RightsController Rights = new livemenu.Controllers.T4MVC_RightsController();
    public static livemenu.Controllers.UsersController Users = new livemenu.Controllers.T4MVC_UsersController();
    public static T4MVC.ClientController Client = new T4MVC.ClientController();
    public static T4MVC.OrderMailerController OrderMailer = new T4MVC.OrderMailerController();
    public static T4MVC.PaymentController Payment = new T4MVC.PaymentController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ActionsClass
    {
        public readonly string Name = "Actions";
        public livemenu.Areas.Actions.Controllers.ActionsController Actions = new livemenu.Areas.Actions.Controllers.T4MVC_ActionsController();
        public livemenu.Areas.Actions.Controllers.HomeController Home = new livemenu.Areas.Actions.Controllers.T4MVC_HomeController();
        public T4MVC.Actions.SharedController Shared = new T4MVC.Actions.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdsClass
    {
        public readonly string Name = "Ads";
        public livemenu.Areas.Ads.Controllers.AdsController Ads = new livemenu.Areas.Ads.Controllers.T4MVC_AdsController();
        public livemenu.Areas.Ads.Controllers.HomeController Home = new livemenu.Areas.Ads.Controllers.T4MVC_HomeController();
        public T4MVC.Ads.SharedController Shared = new T4MVC.Ads.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CalendarClass
    {
        public readonly string Name = "Calendar";
        public livemenu.Areas.Calendar.Controllers.CalendarController Calendar = new livemenu.Areas.Calendar.Controllers.T4MVC_CalendarController();
        public livemenu.Areas.Calendar.Controllers.HomeController Home = new livemenu.Areas.Calendar.Controllers.T4MVC_HomeController();
        public T4MVC.Calendar.SharedController Shared = new T4MVC.Calendar.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CloudClass
    {
        public readonly string Name = "Cloud";
        public livemenu.Areas.Cloud.Controllers.CloudController Cloud = new livemenu.Areas.Cloud.Controllers.T4MVC_CloudController();
        public livemenu.Areas.Cloud.Controllers.HomeController Home = new livemenu.Areas.Cloud.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Cloud.Controllers.ProjectsController Projects = new livemenu.Areas.Cloud.Controllers.T4MVC_ProjectsController();
        public T4MVC.Cloud.SharedController Shared = new T4MVC.Cloud.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CMSClass
    {
        public readonly string Name = "CMS";
        public livemenu.Areas.CMS.Controllers.WebUniController WebUni = new livemenu.Areas.CMS.Controllers.T4MVC_WebUniController();
        public livemenu.Areas.CMS.Controllers.AdminController Admin = new livemenu.Areas.CMS.Controllers.T4MVC_AdminController();
        public livemenu.Areas.CMS.Controllers.AttributesController Attributes = new livemenu.Areas.CMS.Controllers.T4MVC_AttributesController();
        public livemenu.Areas.CMS.Controllers.CatalogController Catalog = new livemenu.Areas.CMS.Controllers.T4MVC_CatalogController();
        public livemenu.Areas.CMS.Controllers.CatalogItemSelectorController CatalogItemSelector = new livemenu.Areas.CMS.Controllers.T4MVC_CatalogItemSelectorController();
        public livemenu.Areas.CMS.Controllers.CMSController CMS = new livemenu.Areas.CMS.Controllers.T4MVC_CMSController();
        public livemenu.Areas.CMS.Controllers.ExportController Export = new livemenu.Areas.CMS.Controllers.T4MVC_ExportController();
        public livemenu.Areas.CMS.Controllers.FieldListMicroModuleController FieldListMicroModule = new livemenu.Areas.CMS.Controllers.T4MVC_FieldListMicroModuleController();
        public livemenu.Areas.CMS.Controllers.FontController Font = new livemenu.Areas.CMS.Controllers.T4MVC_FontController();
        public livemenu.Areas.CMS.Controllers.TagsGroupController TagsGroup = new livemenu.Areas.CMS.Controllers.T4MVC_TagsGroupController();
        public livemenu.Areas.CMS.Controllers.HomeController Home = new livemenu.Areas.CMS.Controllers.T4MVC_HomeController();
        public livemenu.Areas.CMS.Controllers.MetaController Meta = new livemenu.Areas.CMS.Controllers.T4MVC_MetaController();
        public livemenu.Areas.CMS.Controllers.MicroModuleController MicroModule = new livemenu.Areas.CMS.Controllers.T4MVC_MicroModuleController();
        public livemenu.Areas.CMS.Controllers.PagesController Pages = new livemenu.Areas.CMS.Controllers.T4MVC_PagesController();
        public livemenu.Areas.CMS.Controllers.PropertyController Property = new livemenu.Areas.CMS.Controllers.T4MVC_PropertyController();
        public livemenu.Areas.CMS.Controllers.SearchController Search = new livemenu.Areas.CMS.Controllers.T4MVC_SearchController();
        public livemenu.Areas.CMS.Controllers.SearchFilterController SearchFilter = new livemenu.Areas.CMS.Controllers.T4MVC_SearchFilterController();
        public livemenu.Areas.CMS.Controllers.SEOController SEO = new livemenu.Areas.CMS.Controllers.T4MVC_SEOController();
        public livemenu.Areas.CMS.Controllers.ShortLinkController ShortLink = new livemenu.Areas.CMS.Controllers.T4MVC_ShortLinkController();
        public livemenu.Areas.CMS.Controllers.SocialNetworkController SocialNetwork = new livemenu.Areas.CMS.Controllers.T4MVC_SocialNetworkController();
        public livemenu.Areas.CMS.Controllers.TagsController Tags = new livemenu.Areas.CMS.Controllers.T4MVC_TagsController();
        public livemenu.Areas.CMS.Controllers.VerticalListMicroModuleController VerticalListMicroModule = new livemenu.Areas.CMS.Controllers.T4MVC_VerticalListMicroModuleController();
        public livemenu.Areas.CMS.Controllers.WebCountersController WebCounters = new livemenu.Areas.CMS.Controllers.T4MVC_WebCountersController();
        public T4MVC.CMS.PaymentController Payment = new T4MVC.CMS.PaymentController();
        public T4MVC.CMS.SharedController Shared = new T4MVC.CMS.SharedController();
        public T4MVC.CMS.WebinarController Webinar = new T4MVC.CMS.WebinarController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CommunicationsClass
    {
        public readonly string Name = "Communications";
        public livemenu.Areas.Communications.Controllers.CommunicationsController Communications = new livemenu.Areas.Communications.Controllers.T4MVC_CommunicationsController();
        public livemenu.Areas.Communications.Controllers.HomeController Home = new livemenu.Areas.Communications.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Communications.Controllers.NotificationController Notification = new livemenu.Areas.Communications.Controllers.T4MVC_NotificationController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CRMClass
    {
        public readonly string Name = "CRM";
        public livemenu.Areas.CRM.Controllers.BalanceController Balance = new livemenu.Areas.CRM.Controllers.T4MVC_BalanceController();
        public livemenu.Areas.CRM.Controllers.ClientsController Clients = new livemenu.Areas.CRM.Controllers.T4MVC_ClientsController();
        public livemenu.Areas.CRM.Controllers.CRMController CRM = new livemenu.Areas.CRM.Controllers.T4MVC_CRMController();
        public livemenu.Areas.CRM.Controllers.HomeController Home = new livemenu.Areas.CRM.Controllers.T4MVC_HomeController();
        public livemenu.Areas.CRM.Controllers.OrderController Order = new livemenu.Areas.CRM.Controllers.T4MVC_OrderController();
        public livemenu.Areas.CRM.Controllers.OrderStatusController OrderStatus = new livemenu.Areas.CRM.Controllers.T4MVC_OrderStatusController();
        public livemenu.Areas.CRM.Controllers.PaymentController Payment = new livemenu.Areas.CRM.Controllers.T4MVC_PaymentController();
        public livemenu.Areas.CRM.Controllers.PriceListController PriceList = new livemenu.Areas.CRM.Controllers.T4MVC_PriceListController();
        public livemenu.Areas.CRM.Controllers.PropertiesController Properties = new livemenu.Areas.CRM.Controllers.T4MVC_PropertiesController();
        public livemenu.Areas.CRM.Controllers.SettingsController Settings = new livemenu.Areas.CRM.Controllers.T4MVC_SettingsController();
        public T4MVC.CRM.SharedController Shared = new T4MVC.CRM.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class DocsClass
    {
        public readonly string Name = "Docs";
        public livemenu.Areas.Docs.Controllers.DocsController Docs = new livemenu.Areas.Docs.Controllers.T4MVC_DocsController();
        public livemenu.Areas.Docs.Controllers.HomeController Home = new livemenu.Areas.Docs.Controllers.T4MVC_HomeController();
        public T4MVC.Docs.SharedController Shared = new T4MVC.Docs.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class EventsClass
    {
        public readonly string Name = "Events";
        public livemenu.Areas.Events.Controllers.EventsController Events = new livemenu.Areas.Events.Controllers.T4MVC_EventsController();
        public livemenu.Areas.Events.Controllers.HomeController Home = new livemenu.Areas.Events.Controllers.T4MVC_HomeController();
        public T4MVC.Events.SharedController Shared = new T4MVC.Events.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class IdeasClass
    {
        public readonly string Name = "Ideas";
        public livemenu.Areas.Ideas.Controllers.HomeController Home = new livemenu.Areas.Ideas.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Ideas.Controllers.IdeasController Ideas = new livemenu.Areas.Ideas.Controllers.T4MVC_IdeasController();
        public T4MVC.Ideas.SharedController Shared = new T4MVC.Ideas.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ListsClass
    {
        public readonly string Name = "Lists";
        public livemenu.Areas.Lists.Controllers.HomeController Home = new livemenu.Areas.Lists.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Lists.Controllers.ListsController Lists = new livemenu.Areas.Lists.Controllers.T4MVC_ListsController();
        public T4MVC.Lists.SharedController Shared = new T4MVC.Lists.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class MarketClass
    {
        public readonly string Name = "Market";
        public livemenu.Areas.Market.Controllers.HomeController Home = new livemenu.Areas.Market.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Market.Controllers.MarketController Market = new livemenu.Areas.Market.Controllers.T4MVC_MarketController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class NewsClass
    {
        public readonly string Name = "News";
        public livemenu.Areas.News.Controllers.HomeController Home = new livemenu.Areas.News.Controllers.T4MVC_HomeController();
        public livemenu.Areas.News.Controllers.NewsController News = new livemenu.Areas.News.Controllers.T4MVC_NewsController();
        public T4MVC.News.SharedController Shared = new T4MVC.News.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PartnerClass
    {
        public readonly string Name = "Partner";
        public livemenu.Areas.Partner.Controllers.HomeController Home = new livemenu.Areas.Partner.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Partner.Controllers.PartnerController Partner = new livemenu.Areas.Partner.Controllers.T4MVC_PartnerController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PaymentClass
    {
        public readonly string Name = "Payment";
        public livemenu.Areas.Payment.Controllers.RobokassaController Robokassa = new livemenu.Areas.Payment.Controllers.T4MVC_RobokassaController();
        public T4MVC.Payment.PaymentController Payment = new T4MVC.Payment.PaymentController();
        public T4MVC.Payment.SharedController Shared = new T4MVC.Payment.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PlacesClass
    {
        public readonly string Name = "Places";
        public livemenu.Areas.Places.Controllers.HomeController Home = new livemenu.Areas.Places.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Places.Controllers.PlacesController Places = new livemenu.Areas.Places.Controllers.T4MVC_PlacesController();
        public T4MVC.Places.SharedController Shared = new T4MVC.Places.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PlansClass
    {
        public readonly string Name = "Plans";
        public livemenu.Areas.Plans.Controllers.HomeController Home = new livemenu.Areas.Plans.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Plans.Controllers.PlansController Plans = new livemenu.Areas.Plans.Controllers.T4MVC_PlansController();
        public T4MVC.Plans.SharedController Shared = new T4MVC.Plans.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PostcardsClass
    {
        public readonly string Name = "Postcards";
        public livemenu.Areas.Postcards.Controllers.HomeController Home = new livemenu.Areas.Postcards.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Postcards.Controllers.PostcardsController Postcards = new livemenu.Areas.Postcards.Controllers.T4MVC_PostcardsController();
        public T4MVC.Postcards.SharedController Shared = new T4MVC.Postcards.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PrintClass
    {
        public readonly string Name = "Print";
        public livemenu.Areas.Print.Controllers.HomeController Home = new livemenu.Areas.Print.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Print.Controllers.PrintController Print = new livemenu.Areas.Print.Controllers.T4MVC_PrintController();
        public T4MVC.Print.SharedController Shared = new T4MVC.Print.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ProjectsClass
    {
        public readonly string Name = "Projects";
        public livemenu.Areas.Projects.Controllers.DynamicColumnCodeController DynamicColumnCode = new livemenu.Areas.Projects.Controllers.T4MVC_DynamicColumnCodeController();
        public livemenu.Areas.Projects.Controllers.DynamicTablesController DynamicTables = new livemenu.Areas.Projects.Controllers.T4MVC_DynamicTablesController();
        public livemenu.Areas.Projects.Controllers.HomeController Home = new livemenu.Areas.Projects.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Projects.Controllers.ProjectsController Projects = new livemenu.Areas.Projects.Controllers.T4MVC_ProjectsController();
        public livemenu.Areas.Projects.Controllers.UsersController Users = new livemenu.Areas.Projects.Controllers.T4MVC_UsersController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ResearchClass
    {
        public readonly string Name = "Research";
        public livemenu.Areas.Research.Controllers.HomeController Home = new livemenu.Areas.Research.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Research.Controllers.ResearchController Research = new livemenu.Areas.Research.Controllers.T4MVC_ResearchController();
        public T4MVC.Research.SharedController Shared = new T4MVC.Research.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ReserveClass
    {
        public readonly string Name = "Reserve";
        public livemenu.Areas.Reserve.Controllers.HomeController Home = new livemenu.Areas.Reserve.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Reserve.Controllers.ReserveController Reserve = new livemenu.Areas.Reserve.Controllers.T4MVC_ReserveController();
        public T4MVC.Reserve.SharedController Shared = new T4MVC.Reserve.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class SettingsClass
    {
        public readonly string Name = "Settings";
        public livemenu.Areas.Settings.Controllers.HomeController Home = new livemenu.Areas.Settings.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Settings.Controllers.SettingsController Settings = new livemenu.Areas.Settings.Controllers.T4MVC_SettingsController();
        public livemenu.Areas.Settings.Controllers.VersionController Version = new livemenu.Areas.Settings.Controllers.T4MVC_VersionController();
        public T4MVC.Settings.SharedController Shared = new T4MVC.Settings.SharedController();
        public T4MVC.Settings.SystemController System = new T4MVC.Settings.SystemController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class SupportClass
    {
        public readonly string Name = "Support";
        public livemenu.Areas.Support.Controllers.HomeController Home = new livemenu.Areas.Support.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Support.Controllers.SupportController Support = new livemenu.Areas.Support.Controllers.T4MVC_SupportController();
        public T4MVC.Support.SharedController Shared = new T4MVC.Support.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class TasksClass
    {
        public readonly string Name = "Tasks";
        public livemenu.Areas.Tasks.Controllers.HomeController Home = new livemenu.Areas.Tasks.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Tasks.Controllers.TasksController Tasks = new livemenu.Areas.Tasks.Controllers.T4MVC_TasksController();
        public T4MVC.Tasks.SharedController Shared = new T4MVC.Tasks.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class TeamClass
    {
        public readonly string Name = "Team";
        public livemenu.Areas.Team.Controllers.HomeController Home = new livemenu.Areas.Team.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Team.Controllers.TeamController Team = new livemenu.Areas.Team.Controllers.T4MVC_TeamController();
        public T4MVC.Team.SharedController Shared = new T4MVC.Team.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class TransitClass
    {
        public readonly string Name = "Transit";
        public livemenu.Areas.Transit.Controllers.HomeController Home = new livemenu.Areas.Transit.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Transit.Controllers.TransitController Transit = new livemenu.Areas.Transit.Controllers.T4MVC_TransitController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class VacanciesClass
    {
        public readonly string Name = "Vacancies";
        public livemenu.Areas.Vacancies.Controllers.HomeController Home = new livemenu.Areas.Vacancies.Controllers.T4MVC_HomeController();
        public livemenu.Areas.Vacancies.Controllers.VacanciesController Vacancies = new livemenu.Areas.Vacancies.Controllers.T4MVC_VacanciesController();
        public T4MVC.Vacancies.SharedController Shared = new T4MVC.Vacancies.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class WMSClass
    {
        public readonly string Name = "WMS";
        public livemenu.Areas.WMS.Controllers.AddressesController Addresses = new livemenu.Areas.WMS.Controllers.T4MVC_AddressesController();
        public livemenu.Areas.WMS.Controllers.AvailabilityController Availability = new livemenu.Areas.WMS.Controllers.T4MVC_AvailabilityController();
        public livemenu.Areas.WMS.Controllers.CitiesController Cities = new livemenu.Areas.WMS.Controllers.T4MVC_CitiesController();
        public livemenu.Areas.WMS.Controllers.CountriesController Countries = new livemenu.Areas.WMS.Controllers.T4MVC_CountriesController();
        public livemenu.Areas.WMS.Controllers.HomeController Home = new livemenu.Areas.WMS.Controllers.T4MVC_HomeController();
        public livemenu.Areas.WMS.Controllers.StoragesController Storages = new livemenu.Areas.WMS.Controllers.T4MVC_StoragesController();
        public livemenu.Areas.WMS.Controllers.WMSController WMS = new livemenu.Areas.WMS.Controllers.T4MVC_WMSController();
        public T4MVC.WMS.SharedController Shared = new T4MVC.WMS.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext ) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string jquery_1_10_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.intellisense.min.js") ? Url("jquery-1.10.2.intellisense.min.js") : Url("jquery-1.10.2.intellisense.js");
        public static readonly string jquery_1_10_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.min.js") ? Url("jquery-1.10.2.min.js") : Url("jquery-1.10.2.js");
        public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
        public static readonly string jquery_1_10_2_min_map = Url("jquery-1.10.2.min.map");
        public static readonly string jquery_signalR_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.signalR-2.2.0.min.js") ? Url("jquery.signalR-2.2.0.min.js") : Url("jquery.signalR-2.2.0.js");
        public static readonly string jquery_signalR_2_2_0_min_js = Url("jquery.signalR-2.2.0.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_min_js = Url("respond.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
             
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ckeditor {
            private const string URLPATH = "~/Content/ckeditor";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class adapters {
                private const string URLPATH = "~/Content/ckeditor/adapters";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            }
        
            public static readonly string build_config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/build-config.min.js") ? Url("build-config.min.js") : Url("build-config.js");
            public static readonly string CHANGES_md = Url("CHANGES.md");
            public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
            public static readonly string config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/config.min.js") ? Url("config.min.js") : Url("config.js");
            public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
                 
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lang {
                private const string URLPATH = "~/Content/ckeditor/lang";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
            }
        
            public static readonly string LICENSE_md = Url("LICENSE.md");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Content/ckeditor/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class a11yhelp {
                    private const string URLPATH = "~/Content/ckeditor/plugins/a11yhelp";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/a11yhelp/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string a11yhelp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/a11yhelp.min.js") ? Url("a11yhelp.min.js") : Url("a11yhelp.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                            public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                            public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                            public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                            public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                            public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                            public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                            public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                            public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                            public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                            public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                            public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                            public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                            public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                            public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                            public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                            public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                            public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                            public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                            public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                            public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                            public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                            public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                            public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                            public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                            public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                            public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                            public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                            public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                            public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                            public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                            public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                            public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                            public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                            public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                            public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                            public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                            public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                            public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                            public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                            public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                            public static readonly string si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/si.min.js") ? Url("si.min.js") : Url("si.js");
                            public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                            public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                            public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                            public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                            public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                            public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                            public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                            public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                            public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                            public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                            public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                            public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                            public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                            public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class about {
                    private const string URLPATH = "~/Content/ckeditor/plugins/about";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/about/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Content/ckeditor/plugins/about/dialogs/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                        }
                    
                        public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ckeditor_gwf_plugin {
                    private const string URLPATH = "~/Content/ckeditor/plugins/ckeditor-gwf-plugin";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
                         
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class clipboard {
                    private const string URLPATH = "~/Content/ckeditor/plugins/clipboard";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dev {
                        private const string URLPATH = "~/Content/ckeditor/plugins/clipboard/dev";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string clipboard_html = Url("clipboard.html");
                        public static readonly string console_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/console.min.js") ? Url("console.min.js") : Url("console.js");
                        public static readonly string dnd_html = Url("dnd.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/clipboard/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string paste_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paste.min.js") ? Url("paste.min.js") : Url("paste.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class icons {
                        private const string URLPATH = "~/Content/ckeditor/plugins/clipboard/icons";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string copy_rtl_png = Url("copy-rtl.png");
                        public static readonly string copy_png = Url("copy.png");
                        public static readonly string cut_rtl_png = Url("cut-rtl.png");
                        public static readonly string cut_png = Url("cut.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Content/ckeditor/plugins/clipboard/icons/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string copy_rtl_png = Url("copy-rtl.png");
                            public static readonly string copy_png = Url("copy.png");
                            public static readonly string cut_rtl_png = Url("cut-rtl.png");
                            public static readonly string cut_png = Url("cut.png");
                            public static readonly string paste_rtl_png = Url("paste-rtl.png");
                            public static readonly string paste_png = Url("paste.png");
                        }
                    
                        public static readonly string paste_rtl_png = Url("paste-rtl.png");
                        public static readonly string paste_png = Url("paste.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Content/ckeditor/plugins/clipboard/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                        public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                        public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                        public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_ch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de-ch.min.js") ? Url("de-ch.min.js") : Url("de-ch.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                        public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                        public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                        public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                        public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                        public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                        public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                        public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                        public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                        public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                        public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                        public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                        public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                        public static readonly string si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/si.min.js") ? Url("si.min.js") : Url("si.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                        public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                        public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                        public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                        public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                        public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                        public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class codemirror {
                    private const string URLPATH = "~/Content/ckeditor/plugins/codemirror";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Content/ckeditor/plugins/codemirror/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string codemirror_min_css = Url("codemirror.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class icons {
                        private const string URLPATH = "~/Content/ckeditor/plugins/codemirror/icons";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string autocomplete_png = Url("autocomplete.png");
                        public static readonly string autoformat_png = Url("autoformat.png");
                        public static readonly string commentselectedrange_png = Url("commentselectedrange.png");
                        public static readonly string searchcode_png = Url("searchcode.png");
                        public static readonly string uncommentselectedrange_png = Url("uncommentselectedrange.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/Content/ckeditor/plugins/codemirror/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string beautify_min_js = Url("beautify.min.js");
                        public static readonly string codemirror_addons_min_js = Url("codemirror.addons.min.js");
                        public static readonly string codemirror_addons_search_min_js = Url("codemirror.addons.search.min.js");
                        public static readonly string codemirror_min_js = Url("codemirror.min.js");
                        public static readonly string codemirror_min_js_map = Url("codemirror.min.js.map");
                        public static readonly string codemirror_mode_bbcode_min_js = Url("codemirror.mode.bbcode.min.js");
                        public static readonly string codemirror_mode_bbcodemixed_min_js = Url("codemirror.mode.bbcodemixed.min.js");
                        public static readonly string codemirror_mode_htmlmixed_min_js = Url("codemirror.mode.htmlmixed.min.js");
                        public static readonly string codemirror_mode_javascript_min_js = Url("codemirror.mode.javascript.min.js");
                        public static readonly string codemirror_mode_php_min_js = Url("codemirror.mode.php.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Content/ckeditor/plugins/codemirror/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                        public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                        public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                        public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                        public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                        public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                        public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                        public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                        public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                        public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                        public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                        public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                        public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                        public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                        public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                        public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                        public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                        public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                        public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                        public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class theme {
                        private const string URLPATH = "~/Content/ckeditor/plugins/codemirror/theme";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _3024_day_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/3024-day.min.css") ? Url("3024-day.min.css") : Url("3024-day.css");
                             
                        public static readonly string _3024_night_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/3024-night.min.css") ? Url("3024-night.min.css") : Url("3024-night.css");
                             
                        public static readonly string ambiance_mobile_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ambiance-mobile.min.css") ? Url("ambiance-mobile.min.css") : Url("ambiance-mobile.css");
                             
                        public static readonly string ambiance_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ambiance.min.css") ? Url("ambiance.min.css") : Url("ambiance.css");
                             
                        public static readonly string base16_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base16-dark.min.css") ? Url("base16-dark.min.css") : Url("base16-dark.css");
                             
                        public static readonly string base16_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base16-light.min.css") ? Url("base16-light.min.css") : Url("base16-light.css");
                             
                        public static readonly string blackboard_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/blackboard.min.css") ? Url("blackboard.min.css") : Url("blackboard.css");
                             
                        public static readonly string cobalt_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cobalt.min.css") ? Url("cobalt.min.css") : Url("cobalt.css");
                             
                        public static readonly string eclipse_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eclipse.min.css") ? Url("eclipse.min.css") : Url("eclipse.css");
                             
                        public static readonly string elegant_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elegant.min.css") ? Url("elegant.min.css") : Url("elegant.css");
                             
                        public static readonly string erlang_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/erlang-dark.min.css") ? Url("erlang-dark.min.css") : Url("erlang-dark.css");
                             
                        public static readonly string lesser_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lesser-dark.min.css") ? Url("lesser-dark.min.css") : Url("lesser-dark.css");
                             
                        public static readonly string mbo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mbo.min.css") ? Url("mbo.min.css") : Url("mbo.css");
                             
                        public static readonly string mdn_like_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mdn-like.min.css") ? Url("mdn-like.min.css") : Url("mdn-like.css");
                             
                        public static readonly string midnight_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/midnight.min.css") ? Url("midnight.min.css") : Url("midnight.css");
                             
                        public static readonly string monokai_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/monokai.min.css") ? Url("monokai.min.css") : Url("monokai.css");
                             
                        public static readonly string neat_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/neat.min.css") ? Url("neat.min.css") : Url("neat.css");
                             
                        public static readonly string neo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/neo.min.css") ? Url("neo.min.css") : Url("neo.css");
                             
                        public static readonly string night_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/night.min.css") ? Url("night.min.css") : Url("night.css");
                             
                        public static readonly string paraiso_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paraiso-dark.min.css") ? Url("paraiso-dark.min.css") : Url("paraiso-dark.css");
                             
                        public static readonly string paraiso_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paraiso-light.min.css") ? Url("paraiso-light.min.css") : Url("paraiso-light.css");
                             
                        public static readonly string pastel_on_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pastel-on-dark.min.css") ? Url("pastel-on-dark.min.css") : Url("pastel-on-dark.css");
                             
                        public static readonly string rubyblue_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rubyblue.min.css") ? Url("rubyblue.min.css") : Url("rubyblue.css");
                             
                        public static readonly string solarized_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/solarized.min.css") ? Url("solarized.min.css") : Url("solarized.css");
                             
                        public static readonly string the_matrix_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/the-matrix.min.css") ? Url("the-matrix.min.css") : Url("the-matrix.css");
                             
                        public static readonly string tomorrow_night_eighties_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tomorrow-night-eighties.min.css") ? Url("tomorrow-night-eighties.min.css") : Url("tomorrow-night-eighties.css");
                             
                        public static readonly string twilight_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/twilight.min.css") ? Url("twilight.min.css") : Url("twilight.css");
                             
                        public static readonly string vibrant_ink_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vibrant-ink.min.css") ? Url("vibrant-ink.min.css") : Url("vibrant-ink.css");
                             
                        public static readonly string xq_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/xq-dark.min.css") ? Url("xq-dark.min.css") : Url("xq-dark.css");
                             
                        public static readonly string xq_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/xq-light.min.css") ? Url("xq-light.min.css") : Url("xq-light.css");
                             
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colordialog {
                    private const string URLPATH = "~/Content/ckeditor/plugins/colordialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/colordialog/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string colordialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colordialog.min.js") ? Url("colordialog.min.js") : Url("colordialog.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dialog {
                    private const string URLPATH = "~/Content/ckeditor/plugins/dialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialogDefinition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialogDefinition.min.js") ? Url("dialogDefinition.min.js") : Url("dialogDefinition.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class div {
                    private const string URLPATH = "~/Content/ckeditor/plugins/div";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/div/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string div_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/div.min.js") ? Url("div.min.js") : Url("div.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class find {
                    private const string URLPATH = "~/Content/ckeditor/plugins/find";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/find/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string find_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/find.min.js") ? Url("find.min.js") : Url("find.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class flash {
                    private const string URLPATH = "~/Content/ckeditor/plugins/flash";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/flash/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flash.min.js") ? Url("flash.min.js") : Url("flash.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/flash/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    private const string URLPATH = "~/Content/ckeditor/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/forms/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.js") ? Url("button.min.js") : Url("button.js");
                        public static readonly string checkbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/checkbox.min.js") ? Url("checkbox.min.js") : Url("checkbox.js");
                        public static readonly string form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form.min.js") ? Url("form.min.js") : Url("form.js");
                        public static readonly string hiddenfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hiddenfield.min.js") ? Url("hiddenfield.min.js") : Url("hiddenfield.js");
                        public static readonly string radio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radio.min.js") ? Url("radio.min.js") : Url("radio.js");
                        public static readonly string select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.min.js") ? Url("select.min.js") : Url("select.js");
                        public static readonly string textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textarea.min.js") ? Url("textarea.min.js") : Url("textarea.js");
                        public static readonly string textfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textfield.min.js") ? Url("textfield.min.js") : Url("textfield.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/forms/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string hiddenfield_gif = Url("hiddenfield.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class htmlwriter {
                    private const string URLPATH = "~/Content/ckeditor/plugins/htmlwriter";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class samples {
                        private const string URLPATH = "~/Content/ckeditor/plugins/htmlwriter/samples";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Content/ckeditor/plugins/htmlwriter/samples/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class outputforflash {
                                private const string URLPATH = "~/Content/ckeditor/plugins/htmlwriter/samples/assets/outputforflash";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string outputforflash_fla = Url("outputforflash.fla");
                                public static readonly string outputforflash_swf = Url("outputforflash.swf");
                                public static readonly string swfobject_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/swfobject.min.js") ? Url("swfobject.min.js") : Url("swfobject.js");
                            }
                        
                        }
                    
                        public static readonly string outputforflash_html = Url("outputforflash.html");
                        public static readonly string outputhtml_html = Url("outputhtml.html");
                    }
                
                }
            
                public static readonly string icons_png = Url("icons.png");
                public static readonly string icons_hidpi_png = Url("icons_hidpi.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframe {
                    private const string URLPATH = "~/Content/ckeditor/plugins/iframe";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/iframe/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string iframe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/iframe.min.js") ? Url("iframe.min.js") : Url("iframe.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/iframe/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class image {
                    private const string URLPATH = "~/Content/ckeditor/plugins/image";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/image/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/image/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string noimage_png = Url("noimage.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lineutils {
                    private const string URLPATH = "~/Content/ckeditor/plugins/lineutils";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dev {
                        private const string URLPATH = "~/Content/ckeditor/plugins/lineutils/dev";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dnd_html = Url("dnd.html");
                        public static readonly string magicfinger_html = Url("magicfinger.html");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    private const string URLPATH = "~/Content/ckeditor/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/link/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                        public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/link/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_png = Url("anchor.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Content/ckeditor/plugins/link/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string anchor_png = Url("anchor.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class liststyle {
                    private const string URLPATH = "~/Content/ckeditor/plugins/liststyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/liststyle/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string liststyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/liststyle.min.js") ? Url("liststyle.min.js") : Url("liststyle.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class magicline {
                    private const string URLPATH = "~/Content/ckeditor/plugins/magicline";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/magicline/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Content/ckeditor/plugins/magicline/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string icon_rtl_png = Url("icon-rtl.png");
                            public static readonly string icon_png = Url("icon.png");
                        }
                    
                        public static readonly string icon_rtl_png = Url("icon-rtl.png");
                        public static readonly string icon_png = Url("icon.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/Content/ckeditor/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/pagebreak/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pagebreak_gif = Url("pagebreak.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastefromword {
                    private const string URLPATH = "~/Content/ckeditor/plugins/pastefromword";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class filter {
                        private const string URLPATH = "~/Content/ckeditor/plugins/pastefromword/filter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class placeholder {
                    private const string URLPATH = "~/Content/ckeditor/plugins/placeholder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/placeholder/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/placeholder.min.js") ? Url("placeholder.min.js") : Url("placeholder.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class icons {
                        private const string URLPATH = "~/Content/ckeditor/plugins/placeholder/icons";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Content/ckeditor/plugins/placeholder/icons/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string placeholder_png = Url("placeholder.png");
                        }
                    
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Content/ckeditor/plugins/placeholder/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/Content/ckeditor/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string preview_html = Url("preview.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class removeformat {
                    private const string URLPATH = "~/Content/ckeditor/plugins/removeformat";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class icons {
                        private const string URLPATH = "~/Content/ckeditor/plugins/removeformat/icons";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Content/ckeditor/plugins/removeformat/icons/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string removeformat_png = Url("removeformat.png");
                        }
                    
                        public static readonly string removeformat_png = Url("removeformat.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Content/ckeditor/plugins/removeformat/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                        public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                        public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                        public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                        public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                        public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                        public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                        public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                        public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                        public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                        public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                        public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                        public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                        public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                        public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                        public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                        public static readonly string si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/si.min.js") ? Url("si.min.js") : Url("si.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                        public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                        public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                        public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                        public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                        public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                        public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scayt {
                    private const string URLPATH = "~/Content/ckeditor/plugins/scayt";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/scayt/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/options.min.js") ? Url("options.min.js") : Url("options.js");
                        public static readonly string toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbar.min.css") ? Url("toolbar.min.css") : Url("toolbar.css");
                             
                    }
                
                    public static readonly string LICENSE_md = Url("LICENSE.md");
                    public static readonly string README_md = Url("README.md");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class showblocks {
                    private const string URLPATH = "~/Content/ckeditor/plugins/showblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/showblocks/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string block_address_png = Url("block_address.png");
                        public static readonly string block_blockquote_png = Url("block_blockquote.png");
                        public static readonly string block_div_png = Url("block_div.png");
                        public static readonly string block_h1_png = Url("block_h1.png");
                        public static readonly string block_h2_png = Url("block_h2.png");
                        public static readonly string block_h3_png = Url("block_h3.png");
                        public static readonly string block_h4_png = Url("block_h4.png");
                        public static readonly string block_h5_png = Url("block_h5.png");
                        public static readonly string block_h6_png = Url("block_h6.png");
                        public static readonly string block_p_png = Url("block_p.png");
                        public static readonly string block_pre_png = Url("block_pre.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class smiley {
                    private const string URLPATH = "~/Content/ckeditor/plugins/smiley";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/smiley/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/smiley.min.js") ? Url("smiley.min.js") : Url("smiley.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/smiley/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string angel_smile_gif = Url("angel_smile.gif");
                        public static readonly string angel_smile_png = Url("angel_smile.png");
                        public static readonly string angry_smile_gif = Url("angry_smile.gif");
                        public static readonly string angry_smile_png = Url("angry_smile.png");
                        public static readonly string broken_heart_gif = Url("broken_heart.gif");
                        public static readonly string broken_heart_png = Url("broken_heart.png");
                        public static readonly string confused_smile_gif = Url("confused_smile.gif");
                        public static readonly string confused_smile_png = Url("confused_smile.png");
                        public static readonly string cry_smile_gif = Url("cry_smile.gif");
                        public static readonly string cry_smile_png = Url("cry_smile.png");
                        public static readonly string devil_smile_gif = Url("devil_smile.gif");
                        public static readonly string devil_smile_png = Url("devil_smile.png");
                        public static readonly string embaressed_smile_gif = Url("embaressed_smile.gif");
                        public static readonly string embarrassed_smile_gif = Url("embarrassed_smile.gif");
                        public static readonly string embarrassed_smile_png = Url("embarrassed_smile.png");
                        public static readonly string envelope_gif = Url("envelope.gif");
                        public static readonly string envelope_png = Url("envelope.png");
                        public static readonly string heart_gif = Url("heart.gif");
                        public static readonly string heart_png = Url("heart.png");
                        public static readonly string kiss_gif = Url("kiss.gif");
                        public static readonly string kiss_png = Url("kiss.png");
                        public static readonly string lightbulb_gif = Url("lightbulb.gif");
                        public static readonly string lightbulb_png = Url("lightbulb.png");
                        public static readonly string omg_smile_gif = Url("omg_smile.gif");
                        public static readonly string omg_smile_png = Url("omg_smile.png");
                        public static readonly string regular_smile_gif = Url("regular_smile.gif");
                        public static readonly string regular_smile_png = Url("regular_smile.png");
                        public static readonly string sad_smile_gif = Url("sad_smile.gif");
                        public static readonly string sad_smile_png = Url("sad_smile.png");
                        public static readonly string shades_smile_gif = Url("shades_smile.gif");
                        public static readonly string shades_smile_png = Url("shades_smile.png");
                        public static readonly string teeth_smile_gif = Url("teeth_smile.gif");
                        public static readonly string teeth_smile_png = Url("teeth_smile.png");
                        public static readonly string thumbs_down_gif = Url("thumbs_down.gif");
                        public static readonly string thumbs_down_png = Url("thumbs_down.png");
                        public static readonly string thumbs_up_gif = Url("thumbs_up.gif");
                        public static readonly string thumbs_up_png = Url("thumbs_up.png");
                        public static readonly string tongue_smile_gif = Url("tongue_smile.gif");
                        public static readonly string tongue_smile_png = Url("tongue_smile.png");
                        public static readonly string tounge_smile_gif = Url("tounge_smile.gif");
                        public static readonly string whatchutalkingabout_smile_gif = Url("whatchutalkingabout_smile.gif");
                        public static readonly string whatchutalkingabout_smile_png = Url("whatchutalkingabout_smile.png");
                        public static readonly string wink_smile_gif = Url("wink_smile.gif");
                        public static readonly string wink_smile_png = Url("wink_smile.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class specialchar {
                    private const string URLPATH = "~/Content/ckeditor/plugins/specialchar";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/specialchar/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Content/ckeditor/plugins/specialchar/dialogs/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                            public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                            public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                            public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                            public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                            public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                            public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                            public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                            public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                            public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                            public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                            public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                            public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                            public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                            public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                            public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                            public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                            public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                            public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                            public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                            public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                            public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                            public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                            public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                            public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                            public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                            public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                            public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                            public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                            public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                            public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                            public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                            public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                            public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                            public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                            public static readonly string si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/si.min.js") ? Url("si.min.js") : Url("si.js");
                            public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                            public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                            public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                            public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                            public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                            public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                            public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                            public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                            public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                            public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                            public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                            public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                        }
                    
                        public static readonly string specialchar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/specialchar.min.js") ? Url("specialchar.min.js") : Url("specialchar.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/Content/ckeditor/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/table/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabletools {
                    private const string URLPATH = "~/Content/ckeditor/plugins/tabletools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/tabletools/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tableCell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tableCell.min.js") ? Url("tableCell.min.js") : Url("tableCell.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class templates {
                    private const string URLPATH = "~/Content/ckeditor/plugins/templates";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/templates/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                             
                        public static readonly string templates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.js") ? Url("templates.min.js") : Url("templates.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class templates_ {
                        private const string URLPATH = "~/Content/ckeditor/plugins/templates/templates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/ckeditor/plugins/templates/templates/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string template1_gif = Url("template1.gif");
                            public static readonly string template2_gif = Url("template2.gif");
                            public static readonly string template3_gif = Url("template3.gif");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class webkit_span_fix {
                    private const string URLPATH = "~/Content/ckeditor/plugins/webkit-span-fix";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string README_md = Url("README.md");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class widget {
                    private const string URLPATH = "~/Content/ckeditor/plugins/widget";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dev {
                        private const string URLPATH = "~/Content/ckeditor/plugins/widget/dev";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Content/ckeditor/plugins/widget/dev/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
                                 
                            public static readonly string sample_jpg = Url("sample.jpg");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class simplebox {
                                private const string URLPATH = "~/Content/ckeditor/plugins/widget/dev/assets/simplebox";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
                                     
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class dialogs {
                                    private const string URLPATH = "~/Content/ckeditor/plugins/widget/dev/assets/simplebox/dialogs";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string simplebox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/simplebox.min.js") ? Url("simplebox.min.js") : Url("simplebox.js");
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class icons {
                                    private const string URLPATH = "~/Content/ckeditor/plugins/widget/dev/assets/simplebox/icons";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string simplebox_png = Url("simplebox.png");
                                }
                            
                                public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                            }
                        
                        }
                    
                        public static readonly string console_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/console.min.js") ? Url("console.min.js") : Url("console.js");
                        public static readonly string nestedwidgets_html = Url("nestedwidgets.html");
                        public static readonly string widgetstyles_html = Url("widgetstyles.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/plugins/widget/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string handle_png = Url("handle.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Content/ckeditor/plugins/widget/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                        public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_ch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de-ch.min.js") ? Url("de-ch.min.js") : Url("de-ch.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                        public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                        public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                        public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                        public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                        public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                        public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                        public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                        public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wsc {
                    private const string URLPATH = "~/Content/ckeditor/plugins/wsc";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Content/ckeditor/plugins/wsc/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ciframe_html = Url("ciframe.html");
                        public static readonly string tmpFrameset_html = Url("tmpFrameset.html");
                        public static readonly string wsc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.css") ? Url("wsc.min.css") : Url("wsc.css");
                             
                        public static readonly string wsc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.js") ? Url("wsc.min.js") : Url("wsc.js");
                        public static readonly string wsc_ie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc_ie.min.js") ? Url("wsc_ie.min.js") : Url("wsc_ie.js");
                    }
                
                    public static readonly string LICENSE_md = Url("LICENSE.md");
                    public static readonly string README_md = Url("README.md");
                }
            
            }
        
            public static readonly string README_md = Url("README.md");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class samples {
                private const string URLPATH = "~/Content/ckeditor/samples";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ajax_html = Url("ajax.html");
                public static readonly string api_html = Url("api.html");
                public static readonly string appendto_html = Url("appendto.html");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class assets {
                    private const string URLPATH = "~/Content/ckeditor/samples/assets";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class inlineall {
                        private const string URLPATH = "~/Content/ckeditor/samples/assets/inlineall";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string logo_png = Url("logo.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class outputxhtml {
                        private const string URLPATH = "~/Content/ckeditor/samples/assets/outputxhtml";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string outputxhtml_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/outputxhtml.min.css") ? Url("outputxhtml.min.css") : Url("outputxhtml.css");
                             
                    }
                
                    public static readonly string posteddata_php = Url("posteddata.php");
                    public static readonly string sample_jpg = Url("sample.jpg");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class uilanguages {
                        private const string URLPATH = "~/Content/ckeditor/samples/assets/uilanguages";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/languages.min.js") ? Url("languages.min.js") : Url("languages.js");
                    }
                
                }
            
                public static readonly string datafiltering_html = Url("datafiltering.html");
                public static readonly string divreplace_html = Url("divreplace.html");
                public static readonly string index_html = Url("index.html");
                public static readonly string inlineall_html = Url("inlineall.html");
                public static readonly string inlinebycode_html = Url("inlinebycode.html");
                public static readonly string inlinetextarea_html = Url("inlinetextarea.html");
                public static readonly string jquery_html = Url("jquery.html");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class plugins {
                    private const string URLPATH = "~/Content/ckeditor/samples/plugins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialog {
                        private const string URLPATH = "~/Content/ckeditor/samples/plugins/dialog";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Content/ckeditor/samples/plugins/dialog/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string my_dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/my_dialog.min.js") ? Url("my_dialog.min.js") : Url("my_dialog.js");
                        }
                    
                        public static readonly string dialog_html = Url("dialog.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class enterkey {
                        private const string URLPATH = "~/Content/ckeditor/samples/plugins/enterkey";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string enterkey_html = Url("enterkey.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class htmlwriter {
                        private const string URLPATH = "~/Content/ckeditor/samples/plugins/htmlwriter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Content/ckeditor/samples/plugins/htmlwriter/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class outputforflash {
                                private const string URLPATH = "~/Content/ckeditor/samples/plugins/htmlwriter/assets/outputforflash";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string outputforflash_fla = Url("outputforflash.fla");
                                public static readonly string outputforflash_swf = Url("outputforflash.swf");
                                public static readonly string swfobject_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/swfobject.min.js") ? Url("swfobject.min.js") : Url("swfobject.js");
                            }
                        
                        }
                    
                        public static readonly string outputforflash_html = Url("outputforflash.html");
                        public static readonly string outputhtml_html = Url("outputhtml.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class magicline {
                        private const string URLPATH = "~/Content/ckeditor/samples/plugins/magicline";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string magicline_html = Url("magicline.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class toolbar {
                        private const string URLPATH = "~/Content/ckeditor/samples/plugins/toolbar";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string toolbar_html = Url("toolbar.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class wysiwygarea {
                        private const string URLPATH = "~/Content/ckeditor/samples/plugins/wysiwygarea";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullpage_html = Url("fullpage.html");
                    }
                
                }
            
                public static readonly string readonly_html = Url("readonly.html");
                public static readonly string replacebyclass_html = Url("replacebyclass.html");
                public static readonly string replacebycode_html = Url("replacebycode.html");
                public static readonly string sample_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sample.min.css") ? Url("sample.min.css") : Url("sample.css");
                     
                public static readonly string sample_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sample.min.js") ? Url("sample.min.js") : Url("sample.js");
                public static readonly string sample_posteddata_php = Url("sample_posteddata.php");
                public static readonly string tabindex_html = Url("tabindex.html");
                public static readonly string uicolor_html = Url("uicolor.html");
                public static readonly string uilanguages_html = Url("uilanguages.html");
                public static readonly string xhtmlstyle_html = Url("xhtmlstyle.html");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                private const string URLPATH = "~/Content/ckeditor/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class office2013 {
                    private const string URLPATH = "~/Content/ckeditor/skins/office2013";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                         
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                         
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_hidpi_png = Url("icons_hidpi.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/ckeditor/skins/office2013/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string arrow_png = Url("arrow.png");
                        public static readonly string close_png = Url("close.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Content/ckeditor/skins/office2013/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string close_png = Url("close.png");
                            public static readonly string lock_open_png = Url("lock-open.png");
                            public static readonly string lock_png = Url("lock.png");
                            public static readonly string refresh_png = Url("refresh.png");
                        }
                    
                        public static readonly string lock_open_png = Url("lock-open.png");
                        public static readonly string lock_png = Url("lock.png");
                        public static readonly string refresh_png = Url("refresh.png");
                    }
                
                }
            
            }
        
            public static readonly string styles_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/styles.min.js") ? Url("styles.min.js") : Url("styles.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class elfinder {
            private const string URLPATH = "~/Content/elfinder";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/elfinder/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string elfinder_full_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.full.min.css") ? Url("elfinder.full.min.css") : Url("elfinder.full.css");
                     
                public static readonly string elfinder_min_css = Url("elfinder.min.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class smoothness_1_8_23 {
                    private const string URLPATH = "~/Content/elfinder/css/smoothness-1.8.23";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/elfinder/css/smoothness-1.8.23/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                        public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                        public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                        public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                        public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                        public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                        public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                        public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                        public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                        public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                        public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                        public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                        public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    }
                
                    public static readonly string jquery_ui_1_8_23_custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.23.custom.min.css") ? Url("jquery-ui-1.8.23.custom.min.css") : Url("jquery-ui-1.8.23.custom.css");
                         
                }
            
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Content/elfinder/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string arrows_active_png = Url("arrows-active.png");
                public static readonly string arrows_normal_png = Url("arrows-normal.png");
                public static readonly string crop_gif = Url("crop.gif");
                public static readonly string dialogs_png = Url("dialogs.png");
                public static readonly string icons_big_png = Url("icons-big.png");
                public static readonly string icons_small_png = Url("icons-small.png");
                public static readonly string logo_png = Url("logo.png");
                public static readonly string progress_gif = Url("progress.gif");
                public static readonly string quicklook_bg_png = Url("quicklook-bg.png");
                public static readonly string quicklook_icons_png = Url("quicklook-icons.png");
                public static readonly string resize_png = Url("resize.png");
                public static readonly string spinner_mini_gif = Url("spinner-mini.gif");
                public static readonly string toolbar_png = Url("toolbar.png");
                public static readonly string volume_icon_dropbox_png = Url("volume_icon_dropbox.png");
                public static readonly string volume_icon_ftp_png = Url("volume_icon_ftp.png");
                public static readonly string volume_icon_local_png = Url("volume_icon_local.png");
                public static readonly string volume_icon_sql_png = Url("volume_icon_sql.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Content/elfinder/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string elfinder_full_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.full.min.js") ? Url("elfinder.full.min.js") : Url("elfinder.full.js");
                public static readonly string elfinder_min_js = Url("elfinder.min.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class i18n {
                    private const string URLPATH = "~/Content/elfinder/js/i18n";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string elfinder_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.ar.min.js") ? Url("elfinder.ar.min.js") : Url("elfinder.ar.js");
                    public static readonly string elfinder_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.bg.min.js") ? Url("elfinder.bg.min.js") : Url("elfinder.bg.js");
                    public static readonly string elfinder_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.ca.min.js") ? Url("elfinder.ca.min.js") : Url("elfinder.ca.js");
                    public static readonly string elfinder_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.cs.min.js") ? Url("elfinder.cs.min.js") : Url("elfinder.cs.js");
                    public static readonly string elfinder_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.da.min.js") ? Url("elfinder.da.min.js") : Url("elfinder.da.js");
                    public static readonly string elfinder_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.de.min.js") ? Url("elfinder.de.min.js") : Url("elfinder.de.js");
                    public static readonly string elfinder_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.el.min.js") ? Url("elfinder.el.min.js") : Url("elfinder.el.js");
                    public static readonly string elfinder_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.en.min.js") ? Url("elfinder.en.min.js") : Url("elfinder.en.js");
                    public static readonly string elfinder_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.es.min.js") ? Url("elfinder.es.min.js") : Url("elfinder.es.js");
                    public static readonly string elfinder_fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.fa.min.js") ? Url("elfinder.fa.min.js") : Url("elfinder.fa.js");
                    public static readonly string elfinder_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.fr.min.js") ? Url("elfinder.fr.min.js") : Url("elfinder.fr.js");
                    public static readonly string elfinder_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.hu.min.js") ? Url("elfinder.hu.min.js") : Url("elfinder.hu.js");
                    public static readonly string elfinder_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.it.min.js") ? Url("elfinder.it.min.js") : Url("elfinder.it.js");
                    public static readonly string elfinder_jp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.jp.min.js") ? Url("elfinder.jp.min.js") : Url("elfinder.jp.js");
                    public static readonly string elfinder_ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.ko.min.js") ? Url("elfinder.ko.min.js") : Url("elfinder.ko.js");
                    public static readonly string elfinder_LANG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.LANG.min.js") ? Url("elfinder.LANG.min.js") : Url("elfinder.LANG.js");
                    public static readonly string elfinder_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.nl.min.js") ? Url("elfinder.nl.min.js") : Url("elfinder.nl.js");
                    public static readonly string elfinder_no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.no.min.js") ? Url("elfinder.no.min.js") : Url("elfinder.no.js");
                    public static readonly string elfinder_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.pl.min.js") ? Url("elfinder.pl.min.js") : Url("elfinder.pl.js");
                    public static readonly string elfinder_pt_BR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.pt_BR.min.js") ? Url("elfinder.pt_BR.min.js") : Url("elfinder.pt_BR.js");
                    public static readonly string elfinder_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.ru.min.js") ? Url("elfinder.ru.min.js") : Url("elfinder.ru.js");
                    public static readonly string elfinder_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.sk.min.js") ? Url("elfinder.sk.min.js") : Url("elfinder.sk.js");
                    public static readonly string elfinder_sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.sl.min.js") ? Url("elfinder.sl.min.js") : Url("elfinder.sl.js");
                    public static readonly string elfinder_sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.sr.min.js") ? Url("elfinder.sr.min.js") : Url("elfinder.sr.js");
                    public static readonly string elfinder_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.sv.min.js") ? Url("elfinder.sv.min.js") : Url("elfinder.sv.js");
                    public static readonly string elfinder_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.tr.min.js") ? Url("elfinder.tr.min.js") : Url("elfinder.tr.js");
                    public static readonly string elfinder_vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.vi.min.js") ? Url("elfinder.vi.min.js") : Url("elfinder.vi.js");
                    public static readonly string elfinder_zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.zh_CN.min.js") ? Url("elfinder.zh_CN.min.js") : Url("elfinder.zh_CN.js");
                    public static readonly string elfinder_zh_TW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/elfinder.zh_TW.min.js") ? Url("elfinder.zh_TW.min.js") : Url("elfinder.zh_TW.js");
                }
            
                public static readonly string jquery_1_7_1_min_js = Url("jquery-1.7.1.min.js");
                public static readonly string jquery_ui_1_8_11_min_js = Url("jquery-ui-1.8.11.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class sounds {
                private const string URLPATH = "~/Content/elfinder/sounds";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fancytree {
            private const string URLPATH = "~/Content/fancytree";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_fancytree_all_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree-all.min.js") ? Url("jquery.fancytree-all.min.js") : Url("jquery.fancytree-all.js");
            public static readonly string jquery_fancytree_all_min_js = Url("jquery.fancytree-all.min.js");
            public static readonly string jquery_fancytree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.min.js") ? Url("jquery.fancytree.min.js") : Url("jquery.fancytree.js");
            public static readonly string jquery_fancytree_min_js = Url("jquery.fancytree.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_awesome {
                private const string URLPATH = "~/Content/fancytree/skin-awesome";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_bootstrap {
                private const string URLPATH = "~/Content/fancytree/skin-bootstrap";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_bootstrap_n {
                private const string URLPATH = "~/Content/fancytree/skin-bootstrap-n";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_lion {
                private const string URLPATH = "~/Content/fancytree/skin-lion";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_themeroller {
                private const string URLPATH = "~/Content/fancytree/skin-themeroller";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_vista {
                private const string URLPATH = "~/Content/fancytree/skin-vista";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_win7 {
                private const string URLPATH = "~/Content/fancytree/skin-win7";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_win8 {
                private const string URLPATH = "~/Content/fancytree/skin-win8";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_win8_n {
                private const string URLPATH = "~/Content/fancytree/skin-win8-n";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_win8_xxl {
                private const string URLPATH = "~/Content/fancytree/skin-win8-xxl";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skin_xp {
                private const string URLPATH = "~/Content/fancytree/skin-xp";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icons_rtl_gif = Url("icons-rtl.gif");
                public static readonly string icons_gif = Url("icons.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string ui_fancytree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.fancytree.min.css") ? Url("ui.fancytree.min.css") : Url("ui.fancytree.css");
                     
                public static readonly string ui_fancytree_less = Url("ui.fancytree.less");
                public static readonly string ui_fancytree_min_css = Url("ui.fancytree.min.css");
                public static readonly string vline_rtl_gif = Url("vline-rtl.gif");
                public static readonly string vline_gif = Url("vline.gif");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class src {
                private const string URLPATH = "~/Content/fancytree/src";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_fancytree_childcounter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.childcounter.min.js") ? Url("jquery.fancytree.childcounter.min.js") : Url("jquery.fancytree.childcounter.js");
                public static readonly string jquery_fancytree_clones_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.clones.min.js") ? Url("jquery.fancytree.clones.min.js") : Url("jquery.fancytree.clones.js");
                public static readonly string jquery_fancytree_columnview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.columnview.min.js") ? Url("jquery.fancytree.columnview.min.js") : Url("jquery.fancytree.columnview.js");
                public static readonly string jquery_fancytree_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.debug.min.js") ? Url("jquery.fancytree.debug.min.js") : Url("jquery.fancytree.debug.js");
                public static readonly string jquery_fancytree_dnd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.dnd.min.js") ? Url("jquery.fancytree.dnd.min.js") : Url("jquery.fancytree.dnd.js");
                public static readonly string jquery_fancytree_edit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.edit.min.js") ? Url("jquery.fancytree.edit.min.js") : Url("jquery.fancytree.edit.js");
                public static readonly string jquery_fancytree_filter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.filter.min.js") ? Url("jquery.fancytree.filter.min.js") : Url("jquery.fancytree.filter.js");
                public static readonly string jquery_fancytree_glyph_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.glyph.min.js") ? Url("jquery.fancytree.glyph.min.js") : Url("jquery.fancytree.glyph.js");
                public static readonly string jquery_fancytree_gridnav_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.gridnav.min.js") ? Url("jquery.fancytree.gridnav.min.js") : Url("jquery.fancytree.gridnav.js");
                public static readonly string jquery_fancytree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.min.js") ? Url("jquery.fancytree.min.js") : Url("jquery.fancytree.js");
                public static readonly string jquery_fancytree_menu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.menu.min.js") ? Url("jquery.fancytree.menu.min.js") : Url("jquery.fancytree.menu.js");
                public static readonly string jquery_fancytree_persist_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.persist.min.js") ? Url("jquery.fancytree.persist.min.js") : Url("jquery.fancytree.persist.js");
                public static readonly string jquery_fancytree_table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.table.min.js") ? Url("jquery.fancytree.table.min.js") : Url("jquery.fancytree.table.js");
                public static readonly string jquery_fancytree_themeroller_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.themeroller.min.js") ? Url("jquery.fancytree.themeroller.min.js") : Url("jquery.fancytree.themeroller.js");
                public static readonly string jquery_fancytree_wide_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancytree.wide.min.js") ? Url("jquery.fancytree.wide.min.js") : Url("jquery.fancytree.wide.js");
                public static readonly string skin_common_less = Url("skin-common.less");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _1_profile_hover_ru_png = Url("1-profile-hover-ru.png");
            public static readonly string _1_profile_menu_hover_ru_png = Url("1-profile-menu-hover-ru.png");
            public static readonly string _1_profile_menu_ru_png = Url("1-profile-menu-ru.png");
            public static readonly string _1_profile_ru_png = Url("1-profile-ru.png");
            public static readonly string _10_partners_hover_ru_png = Url("10-partners-hover-ru.png");
            public static readonly string _10_partners_menu_hover_ru_png = Url("10-partners-menu-hover-ru.png");
            public static readonly string _10_partners_menu_ru_png = Url("10-partners-menu-ru.png");
            public static readonly string _10_partners_ru_png = Url("10-partners-ru.png");
            public static readonly string _11_market_hover_ru_png = Url("11-market-hover-ru.png");
            public static readonly string _11_market_menu_hover_ru_png = Url("11-market-menu-hover-ru.png");
            public static readonly string _11_market_menu_ru_png = Url("11-market-menu-ru.png");
            public static readonly string _11_market_ru_png = Url("11-market-ru.png");
            public static readonly string _12_settings_hover_ru_png = Url("12-settings-hover-ru.png");
            public static readonly string _12_settings_menu_hover_ru_png = Url("12-settings-menu-hover-ru.png");
            public static readonly string _12_settings_menu_ru_png = Url("12-settings-menu-ru.png");
            public static readonly string _12_settings_ru_png = Url("12-settings-ru.png");
            public static readonly string _2_team_hover_ru_png = Url("2-team-hover-ru.png");
            public static readonly string _2_team_menu_hover_ru_png = Url("2-team-menu-hover-ru.png");
            public static readonly string _2_team_menu_ru_png = Url("2-team-menu-ru.png");
            public static readonly string _2_team_ru_png = Url("2-team-ru.png");
            public static readonly string _3_server_hover_ru_png = Url("3-server-hover-ru.png");
            public static readonly string _3_server_menu_hover_ru_png = Url("3-server-menu-hover-ru.png");
            public static readonly string _3_server_menu_ru_png = Url("3-server-menu-ru.png");
            public static readonly string _3_server_ru_png = Url("3-server-ru.png");
            public static readonly string _4_mail_hover_ru_png = Url("4-mail-hover-ru.png");
            public static readonly string _4_mail_menu_hover_ru_png = Url("4-mail-menu-hover-ru.png");
            public static readonly string _4_mail_menu_ru_png = Url("4-mail-menu-ru.png");
            public static readonly string _4_mail_ru_png = Url("4-mail-ru.png");
            public static readonly string _5_sites_hover_ru_png = Url("5-sites-hover-ru.png");
            public static readonly string _5_sites_menu_hover_ru_png = Url("5-sites-menu-hover-ru.png");
            public static readonly string _5_sites_menu_ru_png = Url("5-sites-menu-ru.png");
            public static readonly string _5_sites_ru_png = Url("5-sites-ru.png");
            public static readonly string _6_news_hover_ru_png = Url("6-news-hover-ru.png");
            public static readonly string _6_news_menu_hover_ru_png = Url("6-news-menu-hover-ru.png");
            public static readonly string _6_news_menu_ru_png = Url("6-news-menu-ru.png");
            public static readonly string _6_news_ru_png = Url("6-news-ru.png");
            public static readonly string _7_crm_hover_ru_png = Url("7-crm-hover-ru.png");
            public static readonly string _7_crm_menu_hover_ru_png = Url("7-crm-menu-hover-ru.png");
            public static readonly string _7_crm_menu_ru_png = Url("7-crm-menu-ru.png");
            public static readonly string _7_crm_ru_png = Url("7-crm-ru.png");
            public static readonly string _8_storage_hover_ru_png = Url("8-storage-hover-ru.png");
            public static readonly string _8_storage_menu_hover_ru_png = Url("8-storage-menu-hover-ru.png");
            public static readonly string _8_storage_menu_ru_png = Url("8-storage-menu-ru.png");
            public static readonly string _8_storage_ru_png = Url("8-storage-ru.png");
            public static readonly string _9_delivery_hover_ru_png = Url("9-delivery-hover-ru.png");
            public static readonly string _9_delivery_menu_hover_ru_png = Url("9-delivery-menu-hover-ru.png");
            public static readonly string _9_delivery_menu_ru_png = Url("9-delivery-menu-ru.png");
            public static readonly string _9_delivery_ru_png = Url("9-delivery-ru.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class AppLogo {
                private const string URLPATH = "~/Content/Images/AppLogo";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string app_ads_logo_png = Url("app-ads-logo.png");
                public static readonly string app_calendars_logo_png = Url("app-calendars-logo.png");
                public static readonly string app_cloud_logo_png = Url("app-cloud-logo.png");
                public static readonly string app_cms_logo_png = Url("app-cms-logo.png");
                public static readonly string app_communication_logo_png = Url("app-communication-logo.png");
                public static readonly string app_crm_logo_png = Url("app-crm-logo.png");
                public static readonly string app_docs_logo_png = Url("app-docs-logo.png");
                public static readonly string app_events_logo_png = Url("app-events-logo.png");
                public static readonly string app_ideas_logo_png = Url("app-ideas-logo.png");
                public static readonly string app_lists_logo_png = Url("app-lists-logo.png");
                public static readonly string app_loyalty_logo_png = Url("app-loyalty-logo.png");
                public static readonly string app_market_logo_png = Url("app-market-logo.png");
                public static readonly string app_news_logo_png = Url("app-news-logo.png");
                public static readonly string app_partner_logo_png = Url("app-partner-logo.png");
                public static readonly string app_partner_network_logo_png = Url("app-partner-network-logo.png");
                public static readonly string app_places_logo_png = Url("app-places-logo.png");
                public static readonly string app_plans_logo_png = Url("app-plans-logo.png");
                public static readonly string app_platform_logo_png = Url("app-platform-logo.png");
                public static readonly string app_postcards_logo_png = Url("app-postcards-logo.png");
                public static readonly string app_print_logo_png = Url("app-print-logo.png");
                public static readonly string app_profile_logo_png = Url("app-profile-logo.png");
                public static readonly string app_projects_logo_png = Url("app-projects-logo.png");
                public static readonly string app_research_logo_png = Url("app-research-logo.png");
                public static readonly string app_reserve_logo_png = Url("app-reserve-logo.png");
                public static readonly string app_tasks_logo_png = Url("app-tasks-logo.png");
                public static readonly string app_team_logo_png = Url("app-team-logo.png");
                public static readonly string app_transit_logo_png = Url("app-transit-logo.png");
                public static readonly string app_wms_logo_png = Url("app-wms-logo.png");
                public static readonly string app_work_logo_png = Url("app-work-logo.png");
            }
        
            public static readonly string bwp_png = Url("bwp.png");
            public static readonly string cloud_png = Url("cloud.png");
            public static readonly string crm_png = Url("crm.png");
            public static readonly string hrm_png = Url("hrm.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class MainMenu {
                private const string URLPATH = "~/Content/Images/MainMenu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string app_ads_png = Url("app-ads.png");
                public static readonly string app_calendar_png = Url("app-calendar.png");
                public static readonly string app_cloud_png = Url("app-cloud.png");
                public static readonly string app_cms_png = Url("app-cms.png");
                public static readonly string app_communication_png = Url("app-communication.png");
                public static readonly string app_crm_png = Url("app-crm.png");
                public static readonly string app_docs_png = Url("app-docs.png");
                public static readonly string app_events_png = Url("app-events.png");
                public static readonly string app_ideas_png = Url("app-ideas.png");
                public static readonly string app_lists_png = Url("app-lists.png");
                public static readonly string app_loyalty_png = Url("app-loyalty.png");
                public static readonly string app_market_png = Url("app-market.png");
                public static readonly string app_news_png = Url("app-news.png");
                public static readonly string app_partner_network_png = Url("app-partner-network.png");
                public static readonly string app_partner_png = Url("app-partner.png");
                public static readonly string app_places_png = Url("app-places.png");
                public static readonly string app_plans_png = Url("app-plans.png");
                public static readonly string app_platform_png = Url("app-platform.png");
                public static readonly string app_postcards_png = Url("app-postcards.png");
                public static readonly string app_print_png = Url("app-print.png");
                public static readonly string app_profile_png = Url("app-profile.png");
                public static readonly string app_projects_png = Url("app-projects.png");
                public static readonly string app_research_png = Url("app-research.png");
                public static readonly string app_reserve_png = Url("app-reserve.png");
                public static readonly string app_tasks_png = Url("app-tasks.png");
                public static readonly string app_team_png = Url("app-team.png");
                public static readonly string app_transit_png = Url("app-transit.png");
                public static readonly string app_wms_png = Url("app-wms.png");
                public static readonly string app_work_png = Url("app-work.png");
            }
        
            public static readonly string market_png = Url("market.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Panels {
                private const string URLPATH = "~/Content/Images/Panels";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class cloud {
                    private const string URLPATH = "~/Content/Images/Panels/cloud";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string cloud_WebUni_png = Url("cloud-WebUni.png");
                    public static readonly string cloud_backup_png = Url("cloud-backup.png");
                    public static readonly string cloud_server_png = Url("cloud-server.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class cms {
                    private const string URLPATH = "~/Content/Images/Panels/cms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string cms_actions_png = Url("cms-actions.png");
                    public static readonly string cms_cloud_png = Url("cms-cloud.png");
                    public static readonly string cms_elements_png = Url("cms-elements.png");
                    public static readonly string cms_feed_png = Url("cms-feed.png");
                    public static readonly string cms_filter_png = Url("cms-filter.png");
                    public static readonly string cms_fonts_png = Url("cms-fonts.png");
                    public static readonly string cms_goods_and_services_png = Url("cms-goods-and-services.png");
                    public static readonly string cms_layout_png = Url("cms-layout.png");
                    public static readonly string cms_seo_png = Url("cms-seo.png");
                    public static readonly string cms_short_links_png = Url("cms-short-links.png");
                    public static readonly string cms_sites_png = Url("cms-sites.png");
                    public static readonly string cms_solutions_png = Url("cms-solutions.png");
                    public static readonly string cms_speed_png = Url("cms-speed.png");
                    public static readonly string cms_statistics_png = Url("cms-statistics.png");
                    public static readonly string cms_vacancies_png = Url("cms-vacancies.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class communication {
                    private const string URLPATH = "~/Content/Images/Panels/communication";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string communication_chat_png = Url("communication-chat.png");
                    public static readonly string communication_mail_png = Url("communication-mail.png");
                    public static readonly string communication_notification_settings_png = Url("communication-notification-settings.png");
                    public static readonly string communication_notification_png = Url("communication-notification.png");
                    public static readonly string communication_phone_png = Url("communication-phone.png");
                    public static readonly string communication_social_png = Url("communication-social.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class crm {
                    private const string URLPATH = "~/Content/Images/Panels/crm";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string crm_clients_png = Url("crm-clients.png");
                    public static readonly string crm_orders_png = Url("crm-orders.png");
                    public static readonly string crm_pricelist_png = Url("crm-pricelist.png");
                    public static readonly string crm_sells_png = Url("crm-sells.png");
                    public static readonly string crm_statistics_png = Url("crm-statistics.png");
                }
            
                public static readonly string line_png = Url("line.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class market {
                    private const string URLPATH = "~/Content/Images/Panels/market";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string market_WebUni_png = Url("market-WebUni.png");
                    public static readonly string market_downloads_png = Url("market-downloads.png");
                    public static readonly string market_goods_and_services_png = Url("market-goods-and-services.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class partner {
                    private const string URLPATH = "~/Content/Images/Panels/partner";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string partner_add_png = Url("partner-add.png");
                    public static readonly string partner_list_png = Url("partner-list.png");
                    public static readonly string partner_search_png = Url("partner-search.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class profile {
                    private const string URLPATH = "~/Content/Images/Panels/profile";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string profile_account_security_png = Url("profile-account-security.png");
                    public static readonly string profile_account_settings_png = Url("profile-account-settings.png");
                    public static readonly string profile_change_password_png = Url("profile-change-password.png");
                    public static readonly string profile_license_png = Url("profile-license.png");
                    public static readonly string profile_purchases_png = Url("profile-purchases.png");
                }
            
                public static readonly string project_launch_png = Url("project-launch.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class team {
                    private const string URLPATH = "~/Content/Images/Panels/team";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string team_positions_png = Url("team-positions.png");
                    public static readonly string team_users_png = Url("team-users.png");
                    public static readonly string team_vacancies_png = Url("team-vacancies.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class transit {
                    private const string URLPATH = "~/Content/Images/Panels/transit";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string transit_connect_png = Url("transit-connect.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wms {
                    private const string URLPATH = "~/Content/Images/Panels/wms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string wms_availability_png = Url("wms-availability.png");
                    public static readonly string wms_city_png = Url("wms-city.png");
                    public static readonly string wms_country_png = Url("wms-country.png");
                    public static readonly string wms_info_png = Url("wms-info.png");
                    public static readonly string wms_location_png = Url("wms-location.png");
                    public static readonly string wms_statistics_png = Url("wms-statistics.png");
                }
            
            }
        
            public static readonly string profile_png = Url("profile.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Screens {
                private const string URLPATH = "~/Content/Images/Screens";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string screen_1_png = Url("screen-1.png");
                public static readonly string screen_2_png = Url("screen-2.png");
                public static readonly string screen_3_png = Url("screen-3.png");
                public static readonly string screen_4_png = Url("screen-4.png");
            }
        
            public static readonly string settings_png = Url("settings.png");
            public static readonly string support_png = Url("support.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class UniBlocks {
                private const string URLPATH = "~/Content/Images/UniBlocks";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string addresses_png = Url("addresses.png");
                public static readonly string caption_png = Url("caption.png");
                public static readonly string cart_png = Url("cart.png");
                public static readonly string cartlist_png = Url("cartlist.png");
                public static readonly string checkout_png = Url("checkout.png");
                public static readonly string checkoutwithoutregistration_png = Url("checkoutwithoutregistration.png");
                public static readonly string filter_png = Url("filter.png");
                public static readonly string forgotpassword_png = Url("forgotpassword.png");
                public static readonly string gallery_png = Url("gallery.png");
                public static readonly string graphics_png = Url("graphics.png");
                public static readonly string line_png = Url("line.png");
                public static readonly string list_png = Url("list.png");
                public static readonly string login_png = Url("login.png");
                public static readonly string menu_png = Url("menu.png");
                public static readonly string page_png = Url("page.png");
                public static readonly string pages_png = Url("pages.png");
                public static readonly string panels_png = Url("panels.png");
                public static readonly string photo_png = Url("photo.png");
                public static readonly string price_png = Url("price.png");
                public static readonly string profile_png = Url("profile.png");
                public static readonly string profilename_png = Url("profilename.png");
                public static readonly string registration_png = Url("registration.png");
                public static readonly string row_png = Url("row.png");
                public static readonly string searchfilter_png = Url("searchfilter.png");
                public static readonly string searchfiltergroup_png = Url("searchfiltergroup.png");
                public static readonly string switchers_png = Url("switchers.png");
                public static readonly string text_png = Url("text.png");
            }
        
        }
    
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string jquery_1_10_2_intellisense_js = "~/Scripts/jquery-1.10.2.intellisense.js"; 
                public const string jquery_1_10_2_js = "~/Scripts/jquery-1.10.2.js"; 
                public const string jquery_1_10_2_min_js = "~/Scripts/jquery-1.10.2.min.js"; 
                public const string jquery_signalR_2_2_0_js = "~/Scripts/jquery.signalR-2.2.0.js"; 
                public const string jquery_signalR_2_2_0_min_js = "~/Scripts/jquery.signalR-2.2.0.min.js"; 
                public const string jquery_unobtrusive_ajax_js = "~/Scripts/jquery.unobtrusive-ajax.js"; 
                public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jquery.unobtrusive-ajax.min.js"; 
                public const string modernizr_2_6_2_js = "~/Scripts/modernizr-2.6.2.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class ckeditor 
            {
                public static partial class adapters 
                {
                    public static class Assets
                    {
                        public const string jquery_js = "~/Content/ckeditor/adapters/jquery.js"; 
                    }
                }
                public static partial class lang 
                {
                    public static class Assets
                    {
                        public const string en_js = "~/Content/ckeditor/lang/en.js"; 
                        public const string ru_js = "~/Content/ckeditor/lang/ru.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static partial class a11yhelp 
                    {
                        public static partial class dialogs 
                        {
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string af_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/af.js"; 
                                    public const string ar_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ar.js"; 
                                    public const string bg_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/bg.js"; 
                                    public const string ca_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ca.js"; 
                                    public const string cs_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/cs.js"; 
                                    public const string cy_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/cy.js"; 
                                    public const string da_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/da.js"; 
                                    public const string de_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/de.js"; 
                                    public const string el_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/el.js"; 
                                    public const string en_gb_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/en-gb.js"; 
                                    public const string en_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/en.js"; 
                                    public const string eo_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/eo.js"; 
                                    public const string es_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/es.js"; 
                                    public const string et_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/et.js"; 
                                    public const string fa_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/fa.js"; 
                                    public const string fi_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/fi.js"; 
                                    public const string fr_ca_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/fr-ca.js"; 
                                    public const string fr_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/fr.js"; 
                                    public const string gl_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/gl.js"; 
                                    public const string gu_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/gu.js"; 
                                    public const string he_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/he.js"; 
                                    public const string hi_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/hi.js"; 
                                    public const string hr_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/hr.js"; 
                                    public const string hu_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/hu.js"; 
                                    public const string id_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/id.js"; 
                                    public const string it_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/it.js"; 
                                    public const string ja_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ja.js"; 
                                    public const string km_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/km.js"; 
                                    public const string ko_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ko.js"; 
                                    public const string ku_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ku.js"; 
                                    public const string lt_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/lt.js"; 
                                    public const string lv_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/lv.js"; 
                                    public const string mk_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/mk.js"; 
                                    public const string mn_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/mn.js"; 
                                    public const string nb_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/nb.js"; 
                                    public const string nl_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/nl.js"; 
                                    public const string no_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/no.js"; 
                                    public const string pl_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/pl.js"; 
                                    public const string pt_br_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/pt-br.js"; 
                                    public const string pt_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/pt.js"; 
                                    public const string ro_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ro.js"; 
                                    public const string ru_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ru.js"; 
                                    public const string si_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/si.js"; 
                                    public const string sk_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/sk.js"; 
                                    public const string sl_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/sl.js"; 
                                    public const string sq_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/sq.js"; 
                                    public const string sr_latn_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/sr-latn.js"; 
                                    public const string sr_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/sr.js"; 
                                    public const string sv_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/sv.js"; 
                                    public const string th_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/th.js"; 
                                    public const string tr_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/tr.js"; 
                                    public const string tt_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/tt.js"; 
                                    public const string ug_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/ug.js"; 
                                    public const string uk_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/uk.js"; 
                                    public const string vi_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/vi.js"; 
                                    public const string zh_cn_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/zh-cn.js"; 
                                    public const string zh_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/lang/zh.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string a11yhelp_js = "~/Content/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class about 
                    {
                        public static partial class dialogs 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string about_js = "~/Content/ckeditor/plugins/about/dialogs/about.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class ckeditor_gwf_plugin 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/ckeditor-gwf-plugin/plugin.js"; 
                            public const string style_css = "~/Content/ckeditor/plugins/ckeditor-gwf-plugin/style.css";
                        }
                    }
                    public static partial class clipboard 
                    {
                        public static partial class dev 
                        {
                            public static class Assets
                            {
                                public const string console_js = "~/Content/ckeditor/plugins/clipboard/dev/console.js"; 
                            }
                        }
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string paste_js = "~/Content/ckeditor/plugins/clipboard/dialogs/paste.js"; 
                            }
                        }
                        public static partial class icons 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string af_js = "~/Content/ckeditor/plugins/clipboard/lang/af.js"; 
                                public const string ar_js = "~/Content/ckeditor/plugins/clipboard/lang/ar.js"; 
                                public const string bg_js = "~/Content/ckeditor/plugins/clipboard/lang/bg.js"; 
                                public const string bn_js = "~/Content/ckeditor/plugins/clipboard/lang/bn.js"; 
                                public const string bs_js = "~/Content/ckeditor/plugins/clipboard/lang/bs.js"; 
                                public const string ca_js = "~/Content/ckeditor/plugins/clipboard/lang/ca.js"; 
                                public const string cs_js = "~/Content/ckeditor/plugins/clipboard/lang/cs.js"; 
                                public const string cy_js = "~/Content/ckeditor/plugins/clipboard/lang/cy.js"; 
                                public const string da_js = "~/Content/ckeditor/plugins/clipboard/lang/da.js"; 
                                public const string de_ch_js = "~/Content/ckeditor/plugins/clipboard/lang/de-ch.js"; 
                                public const string de_js = "~/Content/ckeditor/plugins/clipboard/lang/de.js"; 
                                public const string el_js = "~/Content/ckeditor/plugins/clipboard/lang/el.js"; 
                                public const string en_au_js = "~/Content/ckeditor/plugins/clipboard/lang/en-au.js"; 
                                public const string en_ca_js = "~/Content/ckeditor/plugins/clipboard/lang/en-ca.js"; 
                                public const string en_gb_js = "~/Content/ckeditor/plugins/clipboard/lang/en-gb.js"; 
                                public const string en_js = "~/Content/ckeditor/plugins/clipboard/lang/en.js"; 
                                public const string eo_js = "~/Content/ckeditor/plugins/clipboard/lang/eo.js"; 
                                public const string es_js = "~/Content/ckeditor/plugins/clipboard/lang/es.js"; 
                                public const string et_js = "~/Content/ckeditor/plugins/clipboard/lang/et.js"; 
                                public const string eu_js = "~/Content/ckeditor/plugins/clipboard/lang/eu.js"; 
                                public const string fa_js = "~/Content/ckeditor/plugins/clipboard/lang/fa.js"; 
                                public const string fi_js = "~/Content/ckeditor/plugins/clipboard/lang/fi.js"; 
                                public const string fo_js = "~/Content/ckeditor/plugins/clipboard/lang/fo.js"; 
                                public const string fr_ca_js = "~/Content/ckeditor/plugins/clipboard/lang/fr-ca.js"; 
                                public const string fr_js = "~/Content/ckeditor/plugins/clipboard/lang/fr.js"; 
                                public const string gl_js = "~/Content/ckeditor/plugins/clipboard/lang/gl.js"; 
                                public const string gu_js = "~/Content/ckeditor/plugins/clipboard/lang/gu.js"; 
                                public const string he_js = "~/Content/ckeditor/plugins/clipboard/lang/he.js"; 
                                public const string hi_js = "~/Content/ckeditor/plugins/clipboard/lang/hi.js"; 
                                public const string hr_js = "~/Content/ckeditor/plugins/clipboard/lang/hr.js"; 
                                public const string hu_js = "~/Content/ckeditor/plugins/clipboard/lang/hu.js"; 
                                public const string id_js = "~/Content/ckeditor/plugins/clipboard/lang/id.js"; 
                                public const string is_js = "~/Content/ckeditor/plugins/clipboard/lang/is.js"; 
                                public const string it_js = "~/Content/ckeditor/plugins/clipboard/lang/it.js"; 
                                public const string ja_js = "~/Content/ckeditor/plugins/clipboard/lang/ja.js"; 
                                public const string ka_js = "~/Content/ckeditor/plugins/clipboard/lang/ka.js"; 
                                public const string km_js = "~/Content/ckeditor/plugins/clipboard/lang/km.js"; 
                                public const string ko_js = "~/Content/ckeditor/plugins/clipboard/lang/ko.js"; 
                                public const string ku_js = "~/Content/ckeditor/plugins/clipboard/lang/ku.js"; 
                                public const string lt_js = "~/Content/ckeditor/plugins/clipboard/lang/lt.js"; 
                                public const string lv_js = "~/Content/ckeditor/plugins/clipboard/lang/lv.js"; 
                                public const string mk_js = "~/Content/ckeditor/plugins/clipboard/lang/mk.js"; 
                                public const string mn_js = "~/Content/ckeditor/plugins/clipboard/lang/mn.js"; 
                                public const string ms_js = "~/Content/ckeditor/plugins/clipboard/lang/ms.js"; 
                                public const string nb_js = "~/Content/ckeditor/plugins/clipboard/lang/nb.js"; 
                                public const string nl_js = "~/Content/ckeditor/plugins/clipboard/lang/nl.js"; 
                                public const string no_js = "~/Content/ckeditor/plugins/clipboard/lang/no.js"; 
                                public const string pl_js = "~/Content/ckeditor/plugins/clipboard/lang/pl.js"; 
                                public const string pt_br_js = "~/Content/ckeditor/plugins/clipboard/lang/pt-br.js"; 
                                public const string pt_js = "~/Content/ckeditor/plugins/clipboard/lang/pt.js"; 
                                public const string ro_js = "~/Content/ckeditor/plugins/clipboard/lang/ro.js"; 
                                public const string ru_js = "~/Content/ckeditor/plugins/clipboard/lang/ru.js"; 
                                public const string si_js = "~/Content/ckeditor/plugins/clipboard/lang/si.js"; 
                                public const string sk_js = "~/Content/ckeditor/plugins/clipboard/lang/sk.js"; 
                                public const string sl_js = "~/Content/ckeditor/plugins/clipboard/lang/sl.js"; 
                                public const string sq_js = "~/Content/ckeditor/plugins/clipboard/lang/sq.js"; 
                                public const string sr_latn_js = "~/Content/ckeditor/plugins/clipboard/lang/sr-latn.js"; 
                                public const string sr_js = "~/Content/ckeditor/plugins/clipboard/lang/sr.js"; 
                                public const string sv_js = "~/Content/ckeditor/plugins/clipboard/lang/sv.js"; 
                                public const string th_js = "~/Content/ckeditor/plugins/clipboard/lang/th.js"; 
                                public const string tr_js = "~/Content/ckeditor/plugins/clipboard/lang/tr.js"; 
                                public const string tt_js = "~/Content/ckeditor/plugins/clipboard/lang/tt.js"; 
                                public const string ug_js = "~/Content/ckeditor/plugins/clipboard/lang/ug.js"; 
                                public const string uk_js = "~/Content/ckeditor/plugins/clipboard/lang/uk.js"; 
                                public const string vi_js = "~/Content/ckeditor/plugins/clipboard/lang/vi.js"; 
                                public const string zh_cn_js = "~/Content/ckeditor/plugins/clipboard/lang/zh-cn.js"; 
                                public const string zh_js = "~/Content/ckeditor/plugins/clipboard/lang/zh.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/clipboard/plugin.js"; 
                        }
                    }
                    public static partial class codemirror 
                    {
                        public static partial class css 
                        {
                            public static class Assets
                            {
                                public const string codemirror_min_css = "~/Content/ckeditor/plugins/codemirror/css/codemirror.min.css";
                            }
                        }
                        public static partial class icons 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class js 
                        {
                            public static class Assets
                            {
                                public const string beautify_min_js = "~/Content/ckeditor/plugins/codemirror/js/beautify.min.js"; 
                                public const string codemirror_addons_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.addons.min.js"; 
                                public const string codemirror_addons_search_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.addons.search.min.js"; 
                                public const string codemirror_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.min.js"; 
                                public const string codemirror_mode_bbcode_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.mode.bbcode.min.js"; 
                                public const string codemirror_mode_bbcodemixed_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.mode.bbcodemixed.min.js"; 
                                public const string codemirror_mode_htmlmixed_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.mode.htmlmixed.min.js"; 
                                public const string codemirror_mode_javascript_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.mode.javascript.min.js"; 
                                public const string codemirror_mode_php_min_js = "~/Content/ckeditor/plugins/codemirror/js/codemirror.mode.php.min.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string af_js = "~/Content/ckeditor/plugins/codemirror/lang/af.js"; 
                                public const string ar_js = "~/Content/ckeditor/plugins/codemirror/lang/ar.js"; 
                                public const string bg_js = "~/Content/ckeditor/plugins/codemirror/lang/bg.js"; 
                                public const string bn_js = "~/Content/ckeditor/plugins/codemirror/lang/bn.js"; 
                                public const string bs_js = "~/Content/ckeditor/plugins/codemirror/lang/bs.js"; 
                                public const string ca_js = "~/Content/ckeditor/plugins/codemirror/lang/ca.js"; 
                                public const string cs_js = "~/Content/ckeditor/plugins/codemirror/lang/cs.js"; 
                                public const string cy_js = "~/Content/ckeditor/plugins/codemirror/lang/cy.js"; 
                                public const string da_js = "~/Content/ckeditor/plugins/codemirror/lang/da.js"; 
                                public const string de_js = "~/Content/ckeditor/plugins/codemirror/lang/de.js"; 
                                public const string el_js = "~/Content/ckeditor/plugins/codemirror/lang/el.js"; 
                                public const string en_au_js = "~/Content/ckeditor/plugins/codemirror/lang/en-au.js"; 
                                public const string en_ca_js = "~/Content/ckeditor/plugins/codemirror/lang/en-ca.js"; 
                                public const string en_gb_js = "~/Content/ckeditor/plugins/codemirror/lang/en-gb.js"; 
                                public const string en_js = "~/Content/ckeditor/plugins/codemirror/lang/en.js"; 
                                public const string eo_js = "~/Content/ckeditor/plugins/codemirror/lang/eo.js"; 
                                public const string es_js = "~/Content/ckeditor/plugins/codemirror/lang/es.js"; 
                                public const string et_js = "~/Content/ckeditor/plugins/codemirror/lang/et.js"; 
                                public const string eu_js = "~/Content/ckeditor/plugins/codemirror/lang/eu.js"; 
                                public const string fa_js = "~/Content/ckeditor/plugins/codemirror/lang/fa.js"; 
                                public const string fi_js = "~/Content/ckeditor/plugins/codemirror/lang/fi.js"; 
                                public const string fo_js = "~/Content/ckeditor/plugins/codemirror/lang/fo.js"; 
                                public const string fr_ca_js = "~/Content/ckeditor/plugins/codemirror/lang/fr-ca.js"; 
                                public const string fr_js = "~/Content/ckeditor/plugins/codemirror/lang/fr.js"; 
                                public const string gl_js = "~/Content/ckeditor/plugins/codemirror/lang/gl.js"; 
                                public const string gu_js = "~/Content/ckeditor/plugins/codemirror/lang/gu.js"; 
                                public const string he_js = "~/Content/ckeditor/plugins/codemirror/lang/he.js"; 
                                public const string hi_js = "~/Content/ckeditor/plugins/codemirror/lang/hi.js"; 
                                public const string hr_js = "~/Content/ckeditor/plugins/codemirror/lang/hr.js"; 
                                public const string hu_js = "~/Content/ckeditor/plugins/codemirror/lang/hu.js"; 
                                public const string is_js = "~/Content/ckeditor/plugins/codemirror/lang/is.js"; 
                                public const string it_js = "~/Content/ckeditor/plugins/codemirror/lang/it.js"; 
                                public const string ja_js = "~/Content/ckeditor/plugins/codemirror/lang/ja.js"; 
                                public const string ka_js = "~/Content/ckeditor/plugins/codemirror/lang/ka.js"; 
                                public const string km_js = "~/Content/ckeditor/plugins/codemirror/lang/km.js"; 
                                public const string ko_js = "~/Content/ckeditor/plugins/codemirror/lang/ko.js"; 
                                public const string ku_js = "~/Content/ckeditor/plugins/codemirror/lang/ku.js"; 
                                public const string lt_js = "~/Content/ckeditor/plugins/codemirror/lang/lt.js"; 
                                public const string lv_js = "~/Content/ckeditor/plugins/codemirror/lang/lv.js"; 
                                public const string mk_js = "~/Content/ckeditor/plugins/codemirror/lang/mk.js"; 
                                public const string mn_js = "~/Content/ckeditor/plugins/codemirror/lang/mn.js"; 
                                public const string ms_js = "~/Content/ckeditor/plugins/codemirror/lang/ms.js"; 
                                public const string nb_js = "~/Content/ckeditor/plugins/codemirror/lang/nb.js"; 
                                public const string nl_js = "~/Content/ckeditor/plugins/codemirror/lang/nl.js"; 
                                public const string no_js = "~/Content/ckeditor/plugins/codemirror/lang/no.js"; 
                                public const string pl_js = "~/Content/ckeditor/plugins/codemirror/lang/pl.js"; 
                                public const string pt_br_js = "~/Content/ckeditor/plugins/codemirror/lang/pt-br.js"; 
                                public const string pt_js = "~/Content/ckeditor/plugins/codemirror/lang/pt.js"; 
                                public const string ro_js = "~/Content/ckeditor/plugins/codemirror/lang/ro.js"; 
                                public const string ru_js = "~/Content/ckeditor/plugins/codemirror/lang/ru.js"; 
                                public const string sk_js = "~/Content/ckeditor/plugins/codemirror/lang/sk.js"; 
                                public const string sl_js = "~/Content/ckeditor/plugins/codemirror/lang/sl.js"; 
                                public const string sr_latn_js = "~/Content/ckeditor/plugins/codemirror/lang/sr-latn.js"; 
                                public const string sr_js = "~/Content/ckeditor/plugins/codemirror/lang/sr.js"; 
                                public const string sv_js = "~/Content/ckeditor/plugins/codemirror/lang/sv.js"; 
                                public const string th_js = "~/Content/ckeditor/plugins/codemirror/lang/th.js"; 
                                public const string tr_js = "~/Content/ckeditor/plugins/codemirror/lang/tr.js"; 
                                public const string ug_js = "~/Content/ckeditor/plugins/codemirror/lang/ug.js"; 
                                public const string uk_js = "~/Content/ckeditor/plugins/codemirror/lang/uk.js"; 
                                public const string vi_js = "~/Content/ckeditor/plugins/codemirror/lang/vi.js"; 
                                public const string zh_cn_js = "~/Content/ckeditor/plugins/codemirror/lang/zh-cn.js"; 
                                public const string zh_js = "~/Content/ckeditor/plugins/codemirror/lang/zh.js"; 
                            }
                        }
                        public static partial class theme 
                        {
                            public static class Assets
                            {
                                public const string _3024_day_css = "~/Content/ckeditor/plugins/codemirror/theme/3024-day.css";
                                public const string _3024_night_css = "~/Content/ckeditor/plugins/codemirror/theme/3024-night.css";
                                public const string ambiance_mobile_css = "~/Content/ckeditor/plugins/codemirror/theme/ambiance-mobile.css";
                                public const string ambiance_css = "~/Content/ckeditor/plugins/codemirror/theme/ambiance.css";
                                public const string base16_dark_css = "~/Content/ckeditor/plugins/codemirror/theme/base16-dark.css";
                                public const string base16_light_css = "~/Content/ckeditor/plugins/codemirror/theme/base16-light.css";
                                public const string blackboard_css = "~/Content/ckeditor/plugins/codemirror/theme/blackboard.css";
                                public const string cobalt_css = "~/Content/ckeditor/plugins/codemirror/theme/cobalt.css";
                                public const string eclipse_css = "~/Content/ckeditor/plugins/codemirror/theme/eclipse.css";
                                public const string elegant_css = "~/Content/ckeditor/plugins/codemirror/theme/elegant.css";
                                public const string erlang_dark_css = "~/Content/ckeditor/plugins/codemirror/theme/erlang-dark.css";
                                public const string lesser_dark_css = "~/Content/ckeditor/plugins/codemirror/theme/lesser-dark.css";
                                public const string mbo_css = "~/Content/ckeditor/plugins/codemirror/theme/mbo.css";
                                public const string mdn_like_css = "~/Content/ckeditor/plugins/codemirror/theme/mdn-like.css";
                                public const string midnight_css = "~/Content/ckeditor/plugins/codemirror/theme/midnight.css";
                                public const string monokai_css = "~/Content/ckeditor/plugins/codemirror/theme/monokai.css";
                                public const string neat_css = "~/Content/ckeditor/plugins/codemirror/theme/neat.css";
                                public const string neo_css = "~/Content/ckeditor/plugins/codemirror/theme/neo.css";
                                public const string night_css = "~/Content/ckeditor/plugins/codemirror/theme/night.css";
                                public const string paraiso_dark_css = "~/Content/ckeditor/plugins/codemirror/theme/paraiso-dark.css";
                                public const string paraiso_light_css = "~/Content/ckeditor/plugins/codemirror/theme/paraiso-light.css";
                                public const string pastel_on_dark_css = "~/Content/ckeditor/plugins/codemirror/theme/pastel-on-dark.css";
                                public const string rubyblue_css = "~/Content/ckeditor/plugins/codemirror/theme/rubyblue.css";
                                public const string solarized_css = "~/Content/ckeditor/plugins/codemirror/theme/solarized.css";
                                public const string the_matrix_css = "~/Content/ckeditor/plugins/codemirror/theme/the-matrix.css";
                                public const string tomorrow_night_eighties_css = "~/Content/ckeditor/plugins/codemirror/theme/tomorrow-night-eighties.css";
                                public const string twilight_css = "~/Content/ckeditor/plugins/codemirror/theme/twilight.css";
                                public const string vibrant_ink_css = "~/Content/ckeditor/plugins/codemirror/theme/vibrant-ink.css";
                                public const string xq_dark_css = "~/Content/ckeditor/plugins/codemirror/theme/xq-dark.css";
                                public const string xq_light_css = "~/Content/ckeditor/plugins/codemirror/theme/xq-light.css";
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/codemirror/plugin.js"; 
                        }
                    }
                    public static partial class colordialog 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string colordialog_js = "~/Content/ckeditor/plugins/colordialog/dialogs/colordialog.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class dialog 
                    {
                        public static class Assets
                        {
                            public const string dialogDefinition_js = "~/Content/ckeditor/plugins/dialog/dialogDefinition.js"; 
                        }
                    }
                    public static partial class div 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string div_js = "~/Content/ckeditor/plugins/div/dialogs/div.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class find 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string find_js = "~/Content/ckeditor/plugins/find/dialogs/find.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class flash 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string flash_js = "~/Content/ckeditor/plugins/flash/dialogs/flash.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string button_js = "~/Content/ckeditor/plugins/forms/dialogs/button.js"; 
                                public const string checkbox_js = "~/Content/ckeditor/plugins/forms/dialogs/checkbox.js"; 
                                public const string form_js = "~/Content/ckeditor/plugins/forms/dialogs/form.js"; 
                                public const string hiddenfield_js = "~/Content/ckeditor/plugins/forms/dialogs/hiddenfield.js"; 
                                public const string radio_js = "~/Content/ckeditor/plugins/forms/dialogs/radio.js"; 
                                public const string select_js = "~/Content/ckeditor/plugins/forms/dialogs/select.js"; 
                                public const string textarea_js = "~/Content/ckeditor/plugins/forms/dialogs/textarea.js"; 
                                public const string textfield_js = "~/Content/ckeditor/plugins/forms/dialogs/textfield.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class htmlwriter 
                    {
                        public static partial class samples 
                        {
                            public static partial class assets_ 
                            {
                                public static partial class outputforflash 
                                {
                                    public static class Assets
                                    {
                                        public const string swfobject_js = "~/Content/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/swfobject.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/htmlwriter/plugin.js"; 
                        }
                    }
                    public static partial class iframe 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string iframe_js = "~/Content/ckeditor/plugins/iframe/dialogs/iframe.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class image 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string image_js = "~/Content/ckeditor/plugins/image/dialogs/image.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class lineutils 
                    {
                        public static partial class dev 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/lineutils/plugin.js"; 
                        }
                    }
                    public static partial class link 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string anchor_js = "~/Content/ckeditor/plugins/link/dialogs/anchor.js"; 
                                public const string link_js = "~/Content/ckeditor/plugins/link/dialogs/link.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class liststyle 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string liststyle_js = "~/Content/ckeditor/plugins/liststyle/dialogs/liststyle.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class magicline 
                    {
                        public static partial class images 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pagebreak 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastefromword 
                    {
                        public static partial class filter 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Content/ckeditor/plugins/pastefromword/filter/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class placeholder 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string placeholder_js = "~/Content/ckeditor/plugins/placeholder/dialogs/placeholder.js"; 
                            }
                        }
                        public static partial class icons 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string en_js = "~/Content/ckeditor/plugins/placeholder/lang/en.js"; 
                                public const string ru_js = "~/Content/ckeditor/plugins/placeholder/lang/ru.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/placeholder/plugin.js"; 
                        }
                    }
                    public static partial class preview 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class removeformat 
                    {
                        public static partial class icons 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string af_js = "~/Content/ckeditor/plugins/removeformat/lang/af.js"; 
                                public const string ar_js = "~/Content/ckeditor/plugins/removeformat/lang/ar.js"; 
                                public const string bg_js = "~/Content/ckeditor/plugins/removeformat/lang/bg.js"; 
                                public const string bn_js = "~/Content/ckeditor/plugins/removeformat/lang/bn.js"; 
                                public const string bs_js = "~/Content/ckeditor/plugins/removeformat/lang/bs.js"; 
                                public const string ca_js = "~/Content/ckeditor/plugins/removeformat/lang/ca.js"; 
                                public const string cs_js = "~/Content/ckeditor/plugins/removeformat/lang/cs.js"; 
                                public const string cy_js = "~/Content/ckeditor/plugins/removeformat/lang/cy.js"; 
                                public const string da_js = "~/Content/ckeditor/plugins/removeformat/lang/da.js"; 
                                public const string de_js = "~/Content/ckeditor/plugins/removeformat/lang/de.js"; 
                                public const string el_js = "~/Content/ckeditor/plugins/removeformat/lang/el.js"; 
                                public const string en_au_js = "~/Content/ckeditor/plugins/removeformat/lang/en-au.js"; 
                                public const string en_ca_js = "~/Content/ckeditor/plugins/removeformat/lang/en-ca.js"; 
                                public const string en_gb_js = "~/Content/ckeditor/plugins/removeformat/lang/en-gb.js"; 
                                public const string en_js = "~/Content/ckeditor/plugins/removeformat/lang/en.js"; 
                                public const string eo_js = "~/Content/ckeditor/plugins/removeformat/lang/eo.js"; 
                                public const string es_js = "~/Content/ckeditor/plugins/removeformat/lang/es.js"; 
                                public const string et_js = "~/Content/ckeditor/plugins/removeformat/lang/et.js"; 
                                public const string eu_js = "~/Content/ckeditor/plugins/removeformat/lang/eu.js"; 
                                public const string fa_js = "~/Content/ckeditor/plugins/removeformat/lang/fa.js"; 
                                public const string fi_js = "~/Content/ckeditor/plugins/removeformat/lang/fi.js"; 
                                public const string fo_js = "~/Content/ckeditor/plugins/removeformat/lang/fo.js"; 
                                public const string fr_ca_js = "~/Content/ckeditor/plugins/removeformat/lang/fr-ca.js"; 
                                public const string fr_js = "~/Content/ckeditor/plugins/removeformat/lang/fr.js"; 
                                public const string gl_js = "~/Content/ckeditor/plugins/removeformat/lang/gl.js"; 
                                public const string gu_js = "~/Content/ckeditor/plugins/removeformat/lang/gu.js"; 
                                public const string he_js = "~/Content/ckeditor/plugins/removeformat/lang/he.js"; 
                                public const string hi_js = "~/Content/ckeditor/plugins/removeformat/lang/hi.js"; 
                                public const string hr_js = "~/Content/ckeditor/plugins/removeformat/lang/hr.js"; 
                                public const string hu_js = "~/Content/ckeditor/plugins/removeformat/lang/hu.js"; 
                                public const string id_js = "~/Content/ckeditor/plugins/removeformat/lang/id.js"; 
                                public const string is_js = "~/Content/ckeditor/plugins/removeformat/lang/is.js"; 
                                public const string it_js = "~/Content/ckeditor/plugins/removeformat/lang/it.js"; 
                                public const string ja_js = "~/Content/ckeditor/plugins/removeformat/lang/ja.js"; 
                                public const string ka_js = "~/Content/ckeditor/plugins/removeformat/lang/ka.js"; 
                                public const string km_js = "~/Content/ckeditor/plugins/removeformat/lang/km.js"; 
                                public const string ko_js = "~/Content/ckeditor/plugins/removeformat/lang/ko.js"; 
                                public const string ku_js = "~/Content/ckeditor/plugins/removeformat/lang/ku.js"; 
                                public const string lt_js = "~/Content/ckeditor/plugins/removeformat/lang/lt.js"; 
                                public const string lv_js = "~/Content/ckeditor/plugins/removeformat/lang/lv.js"; 
                                public const string mk_js = "~/Content/ckeditor/plugins/removeformat/lang/mk.js"; 
                                public const string mn_js = "~/Content/ckeditor/plugins/removeformat/lang/mn.js"; 
                                public const string ms_js = "~/Content/ckeditor/plugins/removeformat/lang/ms.js"; 
                                public const string nb_js = "~/Content/ckeditor/plugins/removeformat/lang/nb.js"; 
                                public const string nl_js = "~/Content/ckeditor/plugins/removeformat/lang/nl.js"; 
                                public const string no_js = "~/Content/ckeditor/plugins/removeformat/lang/no.js"; 
                                public const string pl_js = "~/Content/ckeditor/plugins/removeformat/lang/pl.js"; 
                                public const string pt_br_js = "~/Content/ckeditor/plugins/removeformat/lang/pt-br.js"; 
                                public const string pt_js = "~/Content/ckeditor/plugins/removeformat/lang/pt.js"; 
                                public const string ro_js = "~/Content/ckeditor/plugins/removeformat/lang/ro.js"; 
                                public const string ru_js = "~/Content/ckeditor/plugins/removeformat/lang/ru.js"; 
                                public const string si_js = "~/Content/ckeditor/plugins/removeformat/lang/si.js"; 
                                public const string sk_js = "~/Content/ckeditor/plugins/removeformat/lang/sk.js"; 
                                public const string sl_js = "~/Content/ckeditor/plugins/removeformat/lang/sl.js"; 
                                public const string sq_js = "~/Content/ckeditor/plugins/removeformat/lang/sq.js"; 
                                public const string sr_latn_js = "~/Content/ckeditor/plugins/removeformat/lang/sr-latn.js"; 
                                public const string sr_js = "~/Content/ckeditor/plugins/removeformat/lang/sr.js"; 
                                public const string sv_js = "~/Content/ckeditor/plugins/removeformat/lang/sv.js"; 
                                public const string th_js = "~/Content/ckeditor/plugins/removeformat/lang/th.js"; 
                                public const string tr_js = "~/Content/ckeditor/plugins/removeformat/lang/tr.js"; 
                                public const string tt_js = "~/Content/ckeditor/plugins/removeformat/lang/tt.js"; 
                                public const string ug_js = "~/Content/ckeditor/plugins/removeformat/lang/ug.js"; 
                                public const string uk_js = "~/Content/ckeditor/plugins/removeformat/lang/uk.js"; 
                                public const string vi_js = "~/Content/ckeditor/plugins/removeformat/lang/vi.js"; 
                                public const string zh_cn_js = "~/Content/ckeditor/plugins/removeformat/lang/zh-cn.js"; 
                                public const string zh_js = "~/Content/ckeditor/plugins/removeformat/lang/zh.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/removeformat/plugin.js"; 
                        }
                    }
                    public static partial class scayt 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string options_js = "~/Content/ckeditor/plugins/scayt/dialogs/options.js"; 
                                public const string toolbar_css = "~/Content/ckeditor/plugins/scayt/dialogs/toolbar.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class showblocks 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class smiley 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string smiley_js = "~/Content/ckeditor/plugins/smiley/dialogs/smiley.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class specialchar 
                    {
                        public static partial class dialogs 
                        {
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string af_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/af.js"; 
                                    public const string ar_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/ar.js"; 
                                    public const string bg_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/bg.js"; 
                                    public const string ca_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/ca.js"; 
                                    public const string cs_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/cs.js"; 
                                    public const string cy_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/cy.js"; 
                                    public const string da_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/da.js"; 
                                    public const string de_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/de.js"; 
                                    public const string el_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/el.js"; 
                                    public const string en_gb_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/en-gb.js"; 
                                    public const string en_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/en.js"; 
                                    public const string eo_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/eo.js"; 
                                    public const string es_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/es.js"; 
                                    public const string et_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/et.js"; 
                                    public const string fa_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/fa.js"; 
                                    public const string fi_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/fi.js"; 
                                    public const string fr_ca_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/fr-ca.js"; 
                                    public const string fr_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/fr.js"; 
                                    public const string gl_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/gl.js"; 
                                    public const string he_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/he.js"; 
                                    public const string hr_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/hr.js"; 
                                    public const string hu_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/hu.js"; 
                                    public const string id_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/id.js"; 
                                    public const string it_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/it.js"; 
                                    public const string ja_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/ja.js"; 
                                    public const string km_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/km.js"; 
                                    public const string ku_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/ku.js"; 
                                    public const string lt_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/lt.js"; 
                                    public const string lv_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/lv.js"; 
                                    public const string nb_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/nb.js"; 
                                    public const string nl_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/nl.js"; 
                                    public const string no_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/no.js"; 
                                    public const string pl_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/pl.js"; 
                                    public const string pt_br_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/pt-br.js"; 
                                    public const string pt_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/pt.js"; 
                                    public const string ru_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/ru.js"; 
                                    public const string si_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/si.js"; 
                                    public const string sk_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/sk.js"; 
                                    public const string sl_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/sl.js"; 
                                    public const string sq_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/sq.js"; 
                                    public const string sv_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/sv.js"; 
                                    public const string th_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/th.js"; 
                                    public const string tr_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/tr.js"; 
                                    public const string tt_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/tt.js"; 
                                    public const string ug_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/ug.js"; 
                                    public const string uk_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/uk.js"; 
                                    public const string vi_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/vi.js"; 
                                    public const string zh_cn_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/zh-cn.js"; 
                                    public const string zh_js = "~/Content/ckeditor/plugins/specialchar/dialogs/lang/zh.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string specialchar_js = "~/Content/ckeditor/plugins/specialchar/dialogs/specialchar.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class table 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string table_js = "~/Content/ckeditor/plugins/table/dialogs/table.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tabletools 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string tableCell_js = "~/Content/ckeditor/plugins/tabletools/dialogs/tableCell.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class templates 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string templates_css = "~/Content/ckeditor/plugins/templates/dialogs/templates.css";
                                public const string templates_js = "~/Content/ckeditor/plugins/templates/dialogs/templates.js"; 
                            }
                        }
                        public static partial class templates_ 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string default_js = "~/Content/ckeditor/plugins/templates/templates/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class webkit_span_fix 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/webkit-span-fix/plugin.js"; 
                        }
                    }
                    public static partial class widget 
                    {
                        public static partial class dev 
                        {
                            public static partial class assets_ 
                            {
                                public static partial class simplebox 
                                {
                                    public static partial class dialogs 
                                    {
                                        public static class Assets
                                        {
                                            public const string simplebox_js = "~/Content/ckeditor/plugins/widget/dev/assets/simplebox/dialogs/simplebox.js"; 
                                        }
                                    }
                                    public static partial class icons 
                                    {
                                        public static class Assets
                                        {
                                        }
                                    }
                                    public static class Assets
                                    {
                                        public const string contents_css = "~/Content/ckeditor/plugins/widget/dev/assets/simplebox/contents.css";
                                        public const string plugin_js = "~/Content/ckeditor/plugins/widget/dev/assets/simplebox/plugin.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                    public const string contents_css = "~/Content/ckeditor/plugins/widget/dev/assets/contents.css";
                                }
                            }
                            public static class Assets
                            {
                                public const string console_js = "~/Content/ckeditor/plugins/widget/dev/console.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string af_js = "~/Content/ckeditor/plugins/widget/lang/af.js"; 
                                public const string ar_js = "~/Content/ckeditor/plugins/widget/lang/ar.js"; 
                                public const string bg_js = "~/Content/ckeditor/plugins/widget/lang/bg.js"; 
                                public const string ca_js = "~/Content/ckeditor/plugins/widget/lang/ca.js"; 
                                public const string cs_js = "~/Content/ckeditor/plugins/widget/lang/cs.js"; 
                                public const string cy_js = "~/Content/ckeditor/plugins/widget/lang/cy.js"; 
                                public const string da_js = "~/Content/ckeditor/plugins/widget/lang/da.js"; 
                                public const string de_ch_js = "~/Content/ckeditor/plugins/widget/lang/de-ch.js"; 
                                public const string de_js = "~/Content/ckeditor/plugins/widget/lang/de.js"; 
                                public const string el_js = "~/Content/ckeditor/plugins/widget/lang/el.js"; 
                                public const string en_gb_js = "~/Content/ckeditor/plugins/widget/lang/en-gb.js"; 
                                public const string en_js = "~/Content/ckeditor/plugins/widget/lang/en.js"; 
                                public const string eo_js = "~/Content/ckeditor/plugins/widget/lang/eo.js"; 
                                public const string es_js = "~/Content/ckeditor/plugins/widget/lang/es.js"; 
                                public const string eu_js = "~/Content/ckeditor/plugins/widget/lang/eu.js"; 
                                public const string fa_js = "~/Content/ckeditor/plugins/widget/lang/fa.js"; 
                                public const string fi_js = "~/Content/ckeditor/plugins/widget/lang/fi.js"; 
                                public const string fr_js = "~/Content/ckeditor/plugins/widget/lang/fr.js"; 
                                public const string gl_js = "~/Content/ckeditor/plugins/widget/lang/gl.js"; 
                                public const string he_js = "~/Content/ckeditor/plugins/widget/lang/he.js"; 
                                public const string hr_js = "~/Content/ckeditor/plugins/widget/lang/hr.js"; 
                                public const string hu_js = "~/Content/ckeditor/plugins/widget/lang/hu.js"; 
                                public const string id_js = "~/Content/ckeditor/plugins/widget/lang/id.js"; 
                                public const string it_js = "~/Content/ckeditor/plugins/widget/lang/it.js"; 
                                public const string ja_js = "~/Content/ckeditor/plugins/widget/lang/ja.js"; 
                                public const string km_js = "~/Content/ckeditor/plugins/widget/lang/km.js"; 
                                public const string ko_js = "~/Content/ckeditor/plugins/widget/lang/ko.js"; 
                                public const string ku_js = "~/Content/ckeditor/plugins/widget/lang/ku.js"; 
                                public const string lv_js = "~/Content/ckeditor/plugins/widget/lang/lv.js"; 
                                public const string nb_js = "~/Content/ckeditor/plugins/widget/lang/nb.js"; 
                                public const string nl_js = "~/Content/ckeditor/plugins/widget/lang/nl.js"; 
                                public const string no_js = "~/Content/ckeditor/plugins/widget/lang/no.js"; 
                                public const string pl_js = "~/Content/ckeditor/plugins/widget/lang/pl.js"; 
                                public const string pt_br_js = "~/Content/ckeditor/plugins/widget/lang/pt-br.js"; 
                                public const string pt_js = "~/Content/ckeditor/plugins/widget/lang/pt.js"; 
                                public const string ru_js = "~/Content/ckeditor/plugins/widget/lang/ru.js"; 
                                public const string sk_js = "~/Content/ckeditor/plugins/widget/lang/sk.js"; 
                                public const string sl_js = "~/Content/ckeditor/plugins/widget/lang/sl.js"; 
                                public const string sq_js = "~/Content/ckeditor/plugins/widget/lang/sq.js"; 
                                public const string sv_js = "~/Content/ckeditor/plugins/widget/lang/sv.js"; 
                                public const string tr_js = "~/Content/ckeditor/plugins/widget/lang/tr.js"; 
                                public const string tt_js = "~/Content/ckeditor/plugins/widget/lang/tt.js"; 
                                public const string ug_js = "~/Content/ckeditor/plugins/widget/lang/ug.js"; 
                                public const string uk_js = "~/Content/ckeditor/plugins/widget/lang/uk.js"; 
                                public const string vi_js = "~/Content/ckeditor/plugins/widget/lang/vi.js"; 
                                public const string zh_cn_js = "~/Content/ckeditor/plugins/widget/lang/zh-cn.js"; 
                                public const string zh_js = "~/Content/ckeditor/plugins/widget/lang/zh.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Content/ckeditor/plugins/widget/plugin.js"; 
                        }
                    }
                    public static partial class wsc 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string wsc_css = "~/Content/ckeditor/plugins/wsc/dialogs/wsc.css";
                                public const string wsc_js = "~/Content/ckeditor/plugins/wsc/dialogs/wsc.js"; 
                                public const string wsc_ie_js = "~/Content/ckeditor/plugins/wsc/dialogs/wsc_ie.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class samples 
                {
                    public static partial class assets_ 
                    {
                        public static partial class inlineall 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class outputxhtml 
                        {
                            public static class Assets
                            {
                                public const string outputxhtml_css = "~/Content/ckeditor/samples/assets/outputxhtml/outputxhtml.css";
                            }
                        }
                        public static partial class uilanguages 
                        {
                            public static class Assets
                            {
                                public const string languages_js = "~/Content/ckeditor/samples/assets/uilanguages/languages.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class plugins 
                    {
                        public static partial class dialog 
                        {
                            public static partial class assets_ 
                            {
                                public static class Assets
                                {
                                    public const string my_dialog_js = "~/Content/ckeditor/samples/plugins/dialog/assets/my_dialog.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class enterkey 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class htmlwriter 
                        {
                            public static partial class assets_ 
                            {
                                public static partial class outputforflash 
                                {
                                    public static class Assets
                                    {
                                        public const string swfobject_js = "~/Content/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/swfobject.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class magicline 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class toolbar 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class wysiwygarea 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string sample_css = "~/Content/ckeditor/samples/sample.css";
                        public const string sample_js = "~/Content/ckeditor/samples/sample.js"; 
                    }
                }
                public static partial class skins 
                {
                    public static partial class office2013 
                    {
                        public static partial class images 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Content/ckeditor/skins/office2013/dialog.css";
                            public const string editor_css = "~/Content/ckeditor/skins/office2013/editor.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string build_config_js = "~/Content/ckeditor/build-config.js"; 
                    public const string ckeditor_js = "~/Content/ckeditor/ckeditor.js"; 
                    public const string config_js = "~/Content/ckeditor/config.js"; 
                    public const string contents_css = "~/Content/ckeditor/contents.css";
                    public const string styles_js = "~/Content/ckeditor/styles.js"; 
                }
            }
            public static partial class elfinder 
            {
                public static partial class css 
                {
                    public static partial class smoothness_1_8_23 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string jquery_ui_1_8_23_custom_css = "~/Content/elfinder/css/smoothness-1.8.23/jquery-ui-1.8.23.custom.css";
                        }
                    }
                    public static class Assets
                    {
                        public const string elfinder_full_css = "~/Content/elfinder/css/elfinder.full.css";
                        public const string elfinder_min_css = "~/Content/elfinder/css/elfinder.min.css";
                        public const string theme_css = "~/Content/elfinder/css/theme.css";
                    }
                }
                public static partial class img 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static partial class i18n 
                    {
                        public static class Assets
                        {
                            public const string elfinder_ar_js = "~/Content/elfinder/js/i18n/elfinder.ar.js"; 
                            public const string elfinder_bg_js = "~/Content/elfinder/js/i18n/elfinder.bg.js"; 
                            public const string elfinder_ca_js = "~/Content/elfinder/js/i18n/elfinder.ca.js"; 
                            public const string elfinder_cs_js = "~/Content/elfinder/js/i18n/elfinder.cs.js"; 
                            public const string elfinder_da_js = "~/Content/elfinder/js/i18n/elfinder.da.js"; 
                            public const string elfinder_de_js = "~/Content/elfinder/js/i18n/elfinder.de.js"; 
                            public const string elfinder_el_js = "~/Content/elfinder/js/i18n/elfinder.el.js"; 
                            public const string elfinder_en_js = "~/Content/elfinder/js/i18n/elfinder.en.js"; 
                            public const string elfinder_es_js = "~/Content/elfinder/js/i18n/elfinder.es.js"; 
                            public const string elfinder_fa_js = "~/Content/elfinder/js/i18n/elfinder.fa.js"; 
                            public const string elfinder_fr_js = "~/Content/elfinder/js/i18n/elfinder.fr.js"; 
                            public const string elfinder_hu_js = "~/Content/elfinder/js/i18n/elfinder.hu.js"; 
                            public const string elfinder_it_js = "~/Content/elfinder/js/i18n/elfinder.it.js"; 
                            public const string elfinder_jp_js = "~/Content/elfinder/js/i18n/elfinder.jp.js"; 
                            public const string elfinder_ko_js = "~/Content/elfinder/js/i18n/elfinder.ko.js"; 
                            public const string elfinder_LANG_js = "~/Content/elfinder/js/i18n/elfinder.LANG.js"; 
                            public const string elfinder_nl_js = "~/Content/elfinder/js/i18n/elfinder.nl.js"; 
                            public const string elfinder_no_js = "~/Content/elfinder/js/i18n/elfinder.no.js"; 
                            public const string elfinder_pl_js = "~/Content/elfinder/js/i18n/elfinder.pl.js"; 
                            public const string elfinder_pt_BR_js = "~/Content/elfinder/js/i18n/elfinder.pt_BR.js"; 
                            public const string elfinder_ru_js = "~/Content/elfinder/js/i18n/elfinder.ru.js"; 
                            public const string elfinder_sk_js = "~/Content/elfinder/js/i18n/elfinder.sk.js"; 
                            public const string elfinder_sl_js = "~/Content/elfinder/js/i18n/elfinder.sl.js"; 
                            public const string elfinder_sr_js = "~/Content/elfinder/js/i18n/elfinder.sr.js"; 
                            public const string elfinder_sv_js = "~/Content/elfinder/js/i18n/elfinder.sv.js"; 
                            public const string elfinder_tr_js = "~/Content/elfinder/js/i18n/elfinder.tr.js"; 
                            public const string elfinder_vi_js = "~/Content/elfinder/js/i18n/elfinder.vi.js"; 
                            public const string elfinder_zh_CN_js = "~/Content/elfinder/js/i18n/elfinder.zh_CN.js"; 
                            public const string elfinder_zh_TW_js = "~/Content/elfinder/js/i18n/elfinder.zh_TW.js"; 
                        }
                    }
                    public static class Assets
                    {
                        public const string elfinder_full_js = "~/Content/elfinder/js/elfinder.full.js"; 
                        public const string elfinder_min_js = "~/Content/elfinder/js/elfinder.min.js"; 
                        public const string jquery_1_7_1_min_js = "~/Content/elfinder/js/jquery-1.7.1.min.js"; 
                        public const string jquery_ui_1_8_11_min_js = "~/Content/elfinder/js/jquery-ui-1.8.11.min.js"; 
                    }
                }
                public static partial class sounds 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class fancytree 
            {
                public static partial class skin_awesome 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-awesome/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-awesome/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_bootstrap 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-bootstrap/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-bootstrap/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_bootstrap_n 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-bootstrap-n/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-bootstrap-n/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_lion 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-lion/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-lion/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_themeroller 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-themeroller/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-themeroller/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_vista 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-vista/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-vista/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_win7 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-win7/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-win7/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_win8 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-win8/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-win8/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_win8_n 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-win8-n/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-win8-n/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_win8_xxl 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-win8-xxl/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-win8-xxl/ui.fancytree.min.css";
                    }
                }
                public static partial class skin_xp 
                {
                    public static class Assets
                    {
                        public const string ui_fancytree_css = "~/Content/fancytree/skin-xp/ui.fancytree.css";
                        public const string ui_fancytree_min_css = "~/Content/fancytree/skin-xp/ui.fancytree.min.css";
                    }
                }
                public static partial class src 
                {
                    public static class Assets
                    {
                        public const string jquery_fancytree_childcounter_js = "~/Content/fancytree/src/jquery.fancytree.childcounter.js"; 
                        public const string jquery_fancytree_clones_js = "~/Content/fancytree/src/jquery.fancytree.clones.js"; 
                        public const string jquery_fancytree_columnview_js = "~/Content/fancytree/src/jquery.fancytree.columnview.js"; 
                        public const string jquery_fancytree_debug_js = "~/Content/fancytree/src/jquery.fancytree.debug.js"; 
                        public const string jquery_fancytree_dnd_js = "~/Content/fancytree/src/jquery.fancytree.dnd.js"; 
                        public const string jquery_fancytree_edit_js = "~/Content/fancytree/src/jquery.fancytree.edit.js"; 
                        public const string jquery_fancytree_filter_js = "~/Content/fancytree/src/jquery.fancytree.filter.js"; 
                        public const string jquery_fancytree_glyph_js = "~/Content/fancytree/src/jquery.fancytree.glyph.js"; 
                        public const string jquery_fancytree_gridnav_js = "~/Content/fancytree/src/jquery.fancytree.gridnav.js"; 
                        public const string jquery_fancytree_js = "~/Content/fancytree/src/jquery.fancytree.js"; 
                        public const string jquery_fancytree_menu_js = "~/Content/fancytree/src/jquery.fancytree.menu.js"; 
                        public const string jquery_fancytree_persist_js = "~/Content/fancytree/src/jquery.fancytree.persist.js"; 
                        public const string jquery_fancytree_table_js = "~/Content/fancytree/src/jquery.fancytree.table.js"; 
                        public const string jquery_fancytree_themeroller_js = "~/Content/fancytree/src/jquery.fancytree.themeroller.js"; 
                        public const string jquery_fancytree_wide_js = "~/Content/fancytree/src/jquery.fancytree.wide.js"; 
                    }
                }
                public static class Assets
                {
                    public const string jquery_fancytree_all_js = "~/Content/fancytree/jquery.fancytree-all.js"; 
                    public const string jquery_fancytree_all_min_js = "~/Content/fancytree/jquery.fancytree-all.min.js"; 
                    public const string jquery_fancytree_js = "~/Content/fancytree/jquery.fancytree.js"; 
                    public const string jquery_fancytree_min_js = "~/Content/fancytree/jquery.fancytree.min.js"; 
                }
            }
            public static partial class Images 
            {
                public static partial class AppLogo 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class MainMenu 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Panels 
                {
                    public static partial class cloud 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class cms 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class communication 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class crm 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class market 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class partner 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class profile 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class team 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class transit 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class wms 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class Screens 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class UniBlocks 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string Site_css = "~/Content/Site.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


