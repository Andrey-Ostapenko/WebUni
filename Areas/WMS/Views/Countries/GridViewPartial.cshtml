@using System.Data.Entity
@using System.Web.UI.WebControls
@using DevExpress.Web
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using livemenu.Areas.CRM.Controllers
@using livemenu.Areas.WMS.Controllers
@using livemenu.Helpers
@using livemenu.Kernel.CRM.Clients
@using livemenu.Kernel.CRM.Orders
@using livemenu.Kernel.CRM.PriceList
@using Microsoft.Practices.ServiceLocation

@{
    Layout = null;

}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}


@{

    Layout = null;

    var settings = (ViewContext.Controller as CountriesController).GetGridViewSettings();


    string name = settings.Name;


    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;

    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

    settings.CallbackRouteValues = new { Area = MVC.WMS.Name, Controller = MVC.WMS.Countries.Name, Action = MVC.WMS.Countries.ActionNames.GridViewPartial };


    settings.SettingsEditing.BatchUpdateRouteValues = new { Area = MVC.WMS.Name, Controller = MVC.WMS.Countries.Name, Action = MVC.WMS.Countries.ActionNames.GridViewBatchUpdatePartial };

    settings.SettingsBehavior.AllowDragDrop = true;

    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.SettingsPager.Visible = false;

    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;


    settings.Settings.ShowHeaderFilterButton = false;
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowFooter = true;


    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
    settings.EnableRowsCache = false;

    //settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
    //settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.ProcessFocusedRowChangedOnServer = false;
    settings.SettingsBehavior.AllowGroup = true;
    settings.SettingsBehavior.AllowSelectByRowClick = false;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsBehavior.AllowSort = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    //settings.SettingsContextMenu.Enabled = true;




    settings.CellEditorInitialize = (s, e) =>
    {
        ASPxEdit editor = (ASPxEdit) e.Editor;
        editor.ValidationSettings.Display = Display.None;
    };


    //settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Count, "ID");

    settings.Columns.Add(column =>
    {
        column.Width = new Unit(0000.5, UnitType.Percentage);
        column.SetDataItemTemplateContent(c =>
        {
            var index = c.Grid.FindVisibleIndexByKeyValue(DataBinder.Eval(c.DataItem, "ID"));

            ViewContext.Writer.Write(Html.DeleteButton(string.Format("{0}.DeleteRow({1})", name, index)));
        });
        column.SetHeaderCaptionTemplateContent(a => ViewContext.Writer.Write(Html.CreateButton(string.Format("{0}.AddNewRow()", name))));
        column.SetEditItemTemplateContent(c =>
        {
            var index = c.Grid.FindVisibleIndexByKeyValue(DataBinder.Eval(c.DataItem, "ID"));

            ViewContext.Writer.Write(Html.GridViewDeleteButton(name, index));
        });

    });
    


    @Html.DevExpress().GridView(settings).Bind(Model).GetHtml()

}