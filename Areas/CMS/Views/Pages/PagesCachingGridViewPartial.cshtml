@using System.Data.Entity
@using System.Web.UI.WebControls
@using DevExpress.Web
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using livemenu.Areas.CRM.Controllers
@using livemenu.Helpers
@using livemenu.Kernel.BWP.Pages
@using livemenu.Kernel.CRM.PriceList
@using Microsoft.Practices.ServiceLocation

@{
     Layout = null;
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var settings = new GridViewSettings();



    settings.Name = "PagesCachingGridView";
    settings.Width = new Unit(100, UnitType.Percentage);
    settings.Settings.ShowFilterRow = true;
    settings.KeyFieldName = "ID";



    //settings.Columns.Add(column =>
    //{
    //    column.FieldName = "ID";
    //    column.Caption = "ID";
    //    column.ReadOnly = true;
    //    //settings.Width = new Unit(1, UnitType.Percentage);
    //    //column.Settings.FilterMode = ColumnFilterMode.DisplayText;
    //    //column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    //});

    settings.Columns.Add(column =>
    {
        column.FieldName = "Name";
        column.Caption = "Название";
        //column.Settings.FilterMode = ColumnFilterMode.DisplayText;
        //column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });


    settings.Columns.Add(column =>
    {
        column.FieldName = "Code";
        column.Caption = "Код";
        //column.Settings.FilterMode = ColumnFilterMode.DisplayText;
        //column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "IsVisible";
        column.Caption = "Видимость";
        //settings.Width = new Unit(1, UnitType.Pixel);

        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        var prop = column.PropertiesEdit as CheckBoxProperties;

    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "ParentName";
        column.Caption = "Расположение";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "CreationDate";
        column.Caption = "Дата";
        //settings.Width = new Unit(1, UnitType.Pixel);

        column.ColumnType = MVCxGridViewColumnType.DateEdit;
        var prop = column.PropertiesEdit as DateEditProperties;
        prop.DisplayFormatString = "dd.MM.yyyy hh:mm:ss";
        

    });
    
    settings.Columns.Add(column =>
    {
        column.FieldName = "CacheExisted";
        column.Caption = "Кэш";
        //settings.Width = new Unit(1, UnitType.Pixel);

        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        var prop = column.PropertiesEdit as CheckBoxProperties;

    });


    settings.Columns.Add(column =>
    {
        column.SetDataItemTemplateContent((c) =>
        {
            var id = DataBinder.Eval(c.DataItem, "ID");
            var fullCode = DataBinder.Eval(c.DataItem, "FullCode");
            ViewContext.Writer.Write(string.Format(@"<button class='btn right-menu-btn right-menu-btn-pages btn-block' onclick=""RegeneratePage({0},'{1}')"" >Перегенерировать</button>", id, fullCode));
        });
    });

    settings.Columns.Add(column =>
    {
        column.SetDataItemTemplateContent((c) =>
        {
            var id = DataBinder.Eval(c.DataItem, "ID");
            var fullCode = DataBinder.Eval(c.DataItem, "FullCode");
            ViewContext.Writer.Write(string.Format(@"<button class='btn right-menu-btn right-menu-btn-pages btn-block' onclick=""ClearPageCache({0},'{1}')"" >Сбросить кэш</button>", id, fullCode));
        });
    });



    string name = settings.Name;


    settings.SettingsEditing.Mode = GridViewEditingMode.EditForm;

    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

    settings.CallbackRouteValues = new {Area = MVC.CMS.Name, Controller = MVC.CMS.Pages.Name, Action = MVC.CMS.Pages.ActionNames.PagesCachingGridViewPartial};


    settings.SettingsBehavior.AllowDragDrop = false;

    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsPager.Visible = true;
    settings.SettingsPager.PageSize = 50;
    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] {"10", "50", "100", "500", "1000"};

    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;


    settings.Settings.ShowHeaderFilterButton = false;
    settings.Settings.ShowGroupPanel = false;
    settings.Settings.ShowFooter = true;


    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
    settings.EnableRowsCache = false;


    settings.SettingsBehavior.AllowFocusedRow = false;
    settings.SettingsBehavior.ProcessFocusedRowChangedOnServer = false;
    settings.SettingsBehavior.AllowGroup = true;
    settings.SettingsBehavior.AllowSelectByRowClick = false;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsBehavior.AllowSort = true;
    //settings.SettingsBehavior.ConfirmDelete = true;


}
   @*@Html.DevExpress().GridView(settings).Bind(ServiceLocator.Current.GetInstance<IPageService>().GetAll()).GetHtml();*@


    @Html.DevExpress().GridView(settings).BindToLINQ(string.Empty, string.Empty, (s, e) =>
{
    e.KeyExpression = "ID";

    e.QueryableSource = ServiceLocator.Current.GetInstance<IPageService>().RawDataQueryable;
}).GetHtml()

