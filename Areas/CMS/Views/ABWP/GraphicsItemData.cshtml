@{
    Layout = null;
}
@using livemenu.Common.Entities
@using livemenu.Helpers
@model livemenu.Common.Entities.Entities.UniGraphicsItem

<div class="row" style="">
    <div style="margin-bottom: 20px;" class="col-sm-12 btn-group">
        <button href="#" onclick="WebUniUniBlockReload($(this).closest('.WebUni-reloadable'));" class="btn btn-default normal-font ">Назад</button>
    </div>
</div>

@using (Ajax.BeginForm(MVC.CMS.WebUni.GraphicsItemDataSave(), new AjaxOptions
{
    HttpMethod = "POST",
    //UpdateTargetId = "WebUniLine",
    //InsertionMode = InsertionMode.Replace,

   OnComplete = "OnCatalogItemFormCompleted" 
},

new
{
    @class = "form-horizontal ",
}))

{

    <div class="" id="">
        @Html.HiddenFor(m => m.ID)
        @Html.HiddenFor(m => m.UniGraphicsID)
        @Html.HiddenFor(m => m.UniGraphics.CatalogItemID)

        <div class="form-group WebUni-form-group">
            <label for="Height" class="col-sm-7 control-label">При наведении</label>
            <div class="col-sm-5" style="float: right;">
                <div class="checkbox WebUni-checkbox check-success ">
                    @{
                        var idr = "c" + Model.UniGraphicsID + "BackgroundHoverEnabled";
                    }
                    @Html.BasicCheckBoxFor(x => x.BackgroundHoverEnabled, new { id = idr })
                    <label for="@idr"></label>
                </div>
            </div>
        </div>

        <div class="form-group WebUni-form-group">
            <label for="Height" class="col-sm-7 control-label">При включении</label>
            <div class="col-sm-5" style="float: right;">
                <div class="checkbox WebUni-checkbox check-success ">
                    @{
                        idr = "c" + Model.UniGraphicsID + "BackgroundActiveEnabled";
                    }
                    @Html.BasicCheckBoxFor(x => x.BackgroundActiveEnabled, new { id = idr })
                    <label for="@idr"></label>
                </div>
            </div>
        </div>


        <ul class="nav nav-tabs nav-tabs-fillup WebUni-vg-tabs">
            <li class="active">
                <a data-toggle="tab" href="#@Model.UniGraphicsID-gritemdata-before"><span>до наведения</span></a>
            </li>
            <li>
                <a data-toggle="tab" href="#@Model.UniGraphicsID-gritemdata-after"><span>при наведении</span></a>
            </li>
            <li>
                <a data-toggle="tab" href="#@Model.UniGraphicsID-gritemdata-active"><span>при включении</span></a>
            </li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="@Model.UniGraphicsID-gritemdata-before">
                <div class="form-group WebUni-form-group">
                    <div class="col-sm-3 ">

                        @Html.DropDownListFor(m => m.BackgroundViewTypeID, new SelectList(
                new[]
                {
                    new {Value = ((long) BackgroundViewTypeValue.Filling).ToString(), Text = "Заполнение"},
                    new {Value = ((long) BackgroundViewTypeValue.BySize).ToString(), Text = "По размеру"},
                    new {Value = ((long) BackgroundViewTypeValue.Stretch).ToString(), Text = "Растянуть"},
                    new {Value = ((long) BackgroundViewTypeValue.Pave).ToString(), Text = "Замостить"},
                    new {Value = ((long) BackgroundViewTypeValue.Center).ToString(), Text = "По центру"},
                },
                "Value",
                "Text",
                Model.BackgroundViewTypeID),
                new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                )

                    </div>
                    <div class="col-sm-9" style="float: left;">
                        <div id="BackgroundViewTypeID-align">


                            @Html.DropDownListFor(m => m.BackgroundAlign, new SelectList(
                    new[]
                    {
                        new {Value = 0, Text = "Слева"},
                        new {Value = 1, Text = "По центру"},
                        new {Value = 2, Text = "Справа"},
                    },
                    "Value",
                    "Text",
                    Model.BackgroundAlign),
                    new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                    )
                        </div>
                    </div>
                </div>
                <div class="form-group WebUni-form-group">
                    <div class="col-sm-7 ">
                        @Html.DropDownListFor(m => m.BackgroundSourceType, new SelectList(
                            new[]
                            {
                                new {Value = 0, Text = "Из файлового менеджера"},
                                new {Value = 1, Text = "Из базы данных"},
                            },
                            "Value",
                            "Text",
                            Model.BackgroundSourceType),
                            new {@class = "cs-select cs-skin-slide", data_init_plugin = "cs-select", onchange = "onGraphicsItemSourceTypeChanged($(this), '" + @Model.UniGraphicsID + "-gritemdata-before')" }
                            )
                    </div>
                    <div class="col-sm-5" style="float: right;">

                    </div>
                </div>


                <div class="gritem-fm">
                    <div class="form-group WebUni-form-group WebUni-form-group-big">

                        <div class="row image-selector-wrapper">
                            <div class="col-sm-6 col-md-6" style="width: 150px; height: 100px; border-style: solid; border-width: 1px; border-color: #CCCCCC; border-radius: 0px; text-align: center; ">


                                <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)">
                                    @{
                                        var imageUrlModel = Model.BackgroundUrl;
                                        var imageUrl = string.IsNullOrEmpty(imageUrlModel) ? Url.Content("~/BWP/Resources/Images/empty_image.png") : Url.Content("~/" + imageUrlModel);
                                    }
                                    @Html.HiddenFor(m => m.BackgroundUrl, new { @class = "imgItem" })

                                    <img style="max-height: 98px; max-width: 148px;  " alt="нет" src="@imageUrl" />
                                </a>



                            </div>

                            <div class="col-sm-6 col-md-6">
                                <div class="row">
                                    <div class=" btn-group col-sm-9">
                                        <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)" class="btn btn-default">
                                            <i class="fa fa-pencil"></i>
                                        </a>
                                        <a onclick="imageEditDelete($(this))" class="btn btn-danger">
                                            <i class="fa fa-times"></i>
                                        </a>
                                    </div>
                                </div>
                                <div class="row sm-p-t-20">
                                    <p class="bold image-wrapper-text">@Model.BackgroundUrl</p>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="gritem-db">
                    
                    <div class="form-group WebUni-form-group WebUni-form-group-group WebUni-form-group-input">
                        <div class="">
                            <input type="hidden" class="select2-offscreen" id="BackgroundDynamicEntityComplexIDsStringH" style="width: 100%" value="@Model.BackgroundDynamicEntityComplexIDsString" />
                            <input type="text" id="BackgroundDynamicEntityComplexIDsString" class='tag-input full-width' name="BackgroundDynamicEntityComplexIDsString" value="@Model.BackgroundDynamicEntityComplexIDsString" />
                        </div>
                    </div>
                </div>


            
            </div>
            <div class="tab-pane" id="@Model.UniGraphicsID-gritemdata-after">
                <div class="form-group WebUni-form-group">
                    <div class="col-sm-3 ">

                        @Html.DropDownListFor(m => m.BackgroundHoverViewTypeID, new SelectList(
                new[]
                {
                    new {Value = ((long) BackgroundViewTypeValue.Filling).ToString(), Text = "Заполнение"},
                    new {Value = ((long) BackgroundViewTypeValue.BySize).ToString(), Text = "По размеру"},
                    new {Value = ((long) BackgroundViewTypeValue.Stretch).ToString(), Text = "Растянуть"},
                    new {Value = ((long) BackgroundViewTypeValue.Pave).ToString(), Text = "Замостить"},
                    new {Value = ((long) BackgroundViewTypeValue.Center).ToString(), Text = "По центру"},
                },
                "Value",
                "Text",
                Model.BackgroundHoverViewTypeID),
                new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                )

                    </div>
                    <div class="col-sm-9" style="float: right;">
                        <div id="BackgroundHoverViewTypeID-align">


                            @Html.DropDownListFor(m => m.BackgroundHoverAlign, new SelectList(
                    new[]
                    {
                        new {Value = 0, Text = "Слева"},
                        new {Value = 1, Text = "По центру"},
                        new {Value = 2, Text = "Справа"},
                    },
                    "Value",
                    "Text",
                    Model.BackgroundHoverAlign),
                    new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                    )
                        </div>
                    </div>
                </div>

                <div class="form-group WebUni-form-group">
                    <div class="col-sm-7 ">
                        @Html.DropDownListFor(m => m.BackgroundHoverSourceType, new SelectList(
                            new[]
                            {
                                new {Value = 0, Text = "Из файлового менеджера"},
                                new {Value = 1, Text = "Из базы данных"},
                            },
                            "Value",
                            "Text",
                            Model.BackgroundHoverSourceType),
                            new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select", onchange = "onGraphicsItemSourceTypeChanged($(this), '" + @Model.UniGraphicsID + "-gritemdata-after')" }
                            )
                    </div>
                    <div class="col-sm-5" style="float: right;">

                    </div>
                </div>


                <div class="gritem-fm">
                    <div class="form-group WebUni-form-group WebUni-form-group-big">

                        <div class="row image-selector-wrapper">
                            <div class="col-sm-6 col-md-6" style="width: 150px; height: 100px; border-style: solid; border-width: 1px; border-color: #CCCCCC; border-radius: 0px; text-align: center; ">


                                <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)">
                                    @{
                                        imageUrlModel = Model.BackgroundHoverUrl;
                                        imageUrl = string.IsNullOrEmpty(imageUrlModel) ? Url.Content("~/BWP/Resources/Images/empty_image.png") : Url.Content("~/" + imageUrlModel);
                                    }
                                    @Html.HiddenFor(m => m.BackgroundHoverUrl, new { @class = "imgItem" })

                                    <img style="max-height: 98px; max-width: 148px;  " alt="нет" src="@imageUrl" />
                                </a>



                            </div>

                            <div class="col-sm-6 col-md-6">
                                <div class="row">
                                    <div class=" btn-group col-sm-9">
                                        <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)" class="btn btn-default">
                                            <i class="fa fa-pencil"></i>
                                        </a>
                                        <a onclick="imageEditDelete($(this))" class="btn btn-danger">
                                            <i class="fa fa-times"></i>
                                        </a>
                                    </div>
                                </div>
                                <div class="row sm-p-t-20">
                                    <p class="bold image-wrapper-text">@Model.BackgroundHoverUrl</p>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="gritem-db">

                    <div class="form-group WebUni-form-group WebUni-form-group-group WebUni-form-group-input">
                        <div class="">
                            <input type="hidden" class="select2-offscreen" id="BackgroundHoverDynamicEntityComplexIDsStringH" style="width: 100%" value="@Model.BackgroundHoverDynamicEntityComplexIDsString" />
                            <input type="text" id="BackgroundHoverDynamicEntityComplexIDsString" class='tag-input full-width' name="BackgroundHoverDynamicEntityComplexIDsString" value="@Model.BackgroundHoverDynamicEntityComplexIDsString" />
                        </div>
                    </div>
                </div>

            
            </div>
            <div class="tab-pane" id="@Model.UniGraphicsID-gritemdata-active">
                <div class="form-group WebUni-form-group">
                    <div class="col-sm-3 ">

                        @Html.DropDownListFor(m => m.BackgroundActiveViewTypeID, new SelectList(
                new[]
                {
                    new {Value = ((long) BackgroundViewTypeValue.Filling).ToString(), Text = "Заполнение"},
                    new {Value = ((long) BackgroundViewTypeValue.BySize).ToString(), Text = "По размеру"},
                    new {Value = ((long) BackgroundViewTypeValue.Stretch).ToString(), Text = "Растянуть"},
                    new {Value = ((long) BackgroundViewTypeValue.Pave).ToString(), Text = "Замостить"},
                    new {Value = ((long) BackgroundViewTypeValue.Center).ToString(), Text = "По центру"},
                },
                "Value",
                "Text",
                Model.BackgroundActiveViewTypeID),
                new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                )

                    </div>
                    <div class="col-sm-9" style="float: right;">
                        <div id="BackgroundActiveViewTypeID-align">


                            @Html.DropDownListFor(m => m.BackgroundActiveAlign, new SelectList(
                    new[]
                    {
                        new {Value = 0, Text = "Слева"},
                        new {Value = 1, Text = "По центру"},
                        new {Value = 2, Text = "Справа"},
                    },
                    "Value",
                    "Text",
                    Model.BackgroundActiveAlign),
                    new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                    )
                        </div>
                    </div>
                </div>

                <div class="form-group WebUni-form-group">
                    <div class="col-sm-7 ">
                        @Html.DropDownListFor(m => m.BackgroundActiveSourceType, new SelectList(
                            new[]
                            {
                                new {Value = 0, Text = "Из файлового менеджера"},
                                new {Value = 1, Text = "Из базы данных"},
                            },
                            "Value",
                            "Text",
                            Model.BackgroundActiveSourceType),
                            new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select", onchange = "onGraphicsItemSourceTypeChanged($(this), '" + @Model.UniGraphicsID + "-gritemdata-active')" }
                            )
                    </div>
                    <div class="col-sm-5" style="float: right;">

                    </div>
                </div>


                <div class="gritem-fm">
                    <div class="form-group WebUni-form-group WebUni-form-group-big">

                        <div class="row image-selector-wrapper">
                            <div class="col-sm-6 col-md-6" style="width: 150px; height: 100px; border-style: solid; border-width: 1px; border-color: #CCCCCC; border-radius: 0px; text-align: center; ">


                                <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)">
                                    @{
                                        imageUrlModel = Model.BackgroundActiveUrl;
                                        imageUrl = string.IsNullOrEmpty(imageUrlModel) ? Url.Content("~/BWP/Resources/Images/empty_image.png") : Url.Content("~/" + imageUrlModel);
                                    }
                                    @Html.HiddenFor(m => m.BackgroundActiveUrl, new { @class = "imgItem" })

                                    <img style="max-height: 98px; max-width: 148px;  " alt="нет" src="@imageUrl" />
                                </a>



                            </div>

                            <div class="col-sm-6 col-md-6">
                                <div class="row">
                                    <div class=" btn-group col-sm-9">
                                        <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)" class="btn btn-default">
                                            <i class="fa fa-pencil"></i>
                                        </a>
                                        <a onclick="imageEditDelete($(this))" class="btn btn-danger">
                                            <i class="fa fa-times"></i>
                                        </a>
                                    </div>
                                </div>
                                <div class="row sm-p-t-20">
                                    <p class="bold image-wrapper-text">@Model.BackgroundActiveUrl</p>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="gritem-db">

                    <div class="form-group WebUni-form-group WebUni-form-group-group WebUni-form-group-input">
                        <div class="">
                            <input type="hidden" class="select2-offscreen" id="BackgroundActiveDynamicEntityComplexIDsStringH" style="width: 100%" value="@Model.BackgroundActiveDynamicEntityComplexIDsString" />
                            <input type="text" id="BackgroundActiveDynamicEntityComplexIDsString" class='tag-input full-width' name="BackgroundActiveDynamicEntityComplexIDsString" value="@Model.BackgroundActiveDynamicEntityComplexIDsString" />
                        </div>
                    </div>
                </div>
             
            </div>
        </div>





        <div class="form-group WebUni-form-group WebUni-form-group-group">
            <label for="Height" class="col-sm-7 control-label">Ссылка</label>
            <div class="col-sm-5" style="float: right;">
                <div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                    @Html.BasicCheckBoxFor(x => x.LinkEnabled, new {data_init_plugin = "switchery_internal"})
                </div>
            </div>
        </div>
    </div>

    <div class="form-group WebUni-form-group">
        <div class="col-sm-7">
            @Html.DropDownListFor(m => m.OpeningType, new SelectList(
                new[]
                {
                    new {Value = 0, Text = "В этом окне"},
                    new {Value = 1, Text = "В новом окне"}
                },
                "Value",
                "Text",
                Model.OpeningType),
                new {@class = "cs-select cs-skin-slide", data_init_plugin = "cs-select"})
        </div>
    </div>
    <div>
        @Html.TextBoxFor(m => m.Link, new
        {
            @class = "input-sm form-control WebUni-form-element",
            placeholder = "не задано"
        })
    </div>

    <div class="form-group WebUni-form-group ">
        <label for="Height" class="col-sm-7 control-label">Альтернативный текст</label>
    </div>
    <div>
        @Html.TextBoxFor(m => m.AlternativeText, new
        {
            @class = "input-sm form-control WebUni-form-element",
            placeholder = "нет изображения"
        })
    </div>

    
}
