
@{
    Layout = null;


    var confs = Model.CatalogItem.CatalogItemViewGroupConfiguration;
    var groups = confs.ToDictionary(x => (CatalogItemViewGroup)x.ViewGroup, x => x);

    var pagesizegroup = groups.GetConfigurationSafe(CatalogItemViewGroup.PageDesignSizeAndPadding);
    var pagesizeVisible = pagesizegroup.IsVisible ? string.Empty : "hidden";
    var pagesizecollapsed = pagesizegroup.IsCollapse ? "collapsed" : string.Empty;
    var pagesizecollapsein = !pagesizegroup.IsCollapse ? "in" : string.Empty;


    var pagebackgoundgroup = groups.GetConfigurationSafe(CatalogItemViewGroup.PageDesignBackground);
    var pagebackgoundVisible = pagebackgoundgroup.IsVisible ? string.Empty : "hidden";
    var pagebackgoundcollapsed = pagebackgoundgroup.IsCollapse ? "collapsed" : string.Empty;
    var pagebackgoundcollapsein = !pagebackgoundgroup.IsCollapse ? "in" : string.Empty;
    var pagebackgoundDisabled = !Model.BackgroundColorEnabled ? "vg-disabled" : string.Empty;

    var pagegraphbackgoundgroup = groups.GetConfigurationSafe(CatalogItemViewGroup.PageDesignGraphicsBackground);
    var pagegraphbackgoundVisible = pagegraphbackgoundgroup.IsVisible ? string.Empty : "hidden";
    var pagegraphbackgoundcollapsed = pagegraphbackgoundgroup.IsCollapse ? "collapsed" : string.Empty;
    var pagegraphbackgoundcollapsein = !pagegraphbackgoundgroup.IsCollapse ? "in" : string.Empty;

}
@using livemenu.Common.Entities
@using livemenu.Helpers
@using livemenu.Kernel.BWP
@using livemenu.Kernel.CMS
@model livemenu.Common.Entities.Entities.UniPage

@using (Ajax.BeginForm(MVC.CMS.WebUni.PageDesignSave(), new AjaxOptions
{
    HttpMethod = "POST",
    //UpdateTargetId = "WebUniLine",
    //InsertionMode = InsertionMode.Replace,

   OnComplete = "OnCatalogItemFormCompleted"
},

            new
            {
                @class = "form-horizontal ",
            }))

{

    <div class="" id="">
        @Html.HiddenFor(m => m.ID)
        @Html.HiddenFor(m => m.CatalogItemID)



        <div class="@pagesizeVisible vg-view vg-elements flat-panel-group">
            <div class="panel-group vg-panel" data-ciid="@Model.CatalogItemID" data-vg="@CatalogItemViewGroup.PageDesignSizeAndPadding">
                <div class="panel-heading" role="tab" id="headingOne1">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-target="#vg-@Model.CatalogItemID-size-acc" href="#" aria-expanded="false" aria-controls="collapseOne" class="@pagesizecollapsed">
                            @UniBlockServiceHelper.CatalogItemViewGroupNames[CatalogItemViewGroup.PageDesignSizeAndPadding]
                        </a>
                    </h4>
                </div>
                <div id="vg-@Model.CatalogItemID-size-acc" class="vg-acc-content collapse @pagesizecollapsein" role="tabpanel" aria-labelledby="headingOne1" aria-expanded="false" style="">
                    <div class="panel-body">

                        <div class="form-group WebUni-form-group WebUni-form-group-big">
                            <label for="Height" class="col-sm-7 control-label">Местоположение</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                                    @Html.BasicCheckBoxFor(x => x.WidthEnabled, new { data_init_plugin = "switchery_internal" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group WebUni-form-group">
                            <div class="col-sm-7 ">
                                @Html.DropDownListFor(m => m.Align, new SelectList(
                    new[]
                    {
                        new { Value = 0, Text = "Слева" },
                        new { Value = 1, Text = "По центру" },
                        new { Value = 2, Text = "Справа" },
                    },
                    "Value",
                    "Text",
                    Model.Align),
                    new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                    )
                            </div>

                        </div>

                        <div class="form-group WebUni-form-group WebUni-form-group-big">
                            <label for="Height" class="col-sm-7 control-label">Ширина</label>
                            <div class="col-sm-5" style="float: right;">
                                @*<div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                    @Html.BasicCheckBoxFor(x => x.PaddingEnabled, new { data_init_plugin = "switchery_internal" })
                </div>*@
                            </div>
                        </div>


                        <div class="form-group WebUni-form-group ">
                            <div class="col-sm-7 ">
                                @Html.DropDownListFor(m => m.IsWidthInPixel, new SelectList(
        new[]
        {
            new { Value = "true", Text = "Ширина (в px)" },
            new { Value = "false", Text = "Ширина (в %)" },
        },
        "Value",
        "Text",
        Model.IsWidthInPixel),
        new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
        )
                            </div>
                            <div class="col-sm-5" style="float: right;">
                                @Html.TextBoxFor(m => m.MaxWidth, new
           {
               @class = "spin-fe_width input-sm form-control WebUni-form-element",
               placeholder = "авто"
           })
                            </div>
                        </div>



                        <div class="form-group WebUni-form-group">

                            <div class="col-sm-7 ">
                                @Html.DropDownListFor(m => m.IsMarginLeftInPixel, new SelectList(
                    new[]
                    {
                        new { Value = "true", Text = "Отступ слева (px)" },
                        new { Value = "false", Text = "Отступ слева (%)" },
                    },
                    "Value",
                    "Text",
                    Model.IsMarginLeftInPixel),
                    new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                    )
                            </div>

                            <div class="col-sm-5" style="float: right;">
                                @Html.TextBoxFor(m => m.MarginLeft, new
           {
               @class = "spin-fe_padding input-sm form-control WebUni-form-element",
               placeholder = "авто"
           })
                            </div>
                        </div>


                        <div class="form-group WebUni-form-group">
                            <div class="col-sm-7 ">
                                @Html.DropDownListFor(m => m.IsMarginRightInPixel, new SelectList(
                    new[]
                    {
                        new { Value = "true", Text = "Отступ справа (px)" },
                        new { Value = "false", Text = "Отступ справа (%)" },
                    },
                    "Value",
                    "Text",
                    Model.IsMarginRightInPixel),
                    new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                    )
                            </div>

                            <div class="col-sm-5" style="float: right;">
                                @Html.TextBoxFor(m => m.MarginRight, new
           {
               @class = "spin-fe_padding input-sm form-control WebUni-form-element",
               placeholder = "авто"
           })
                            </div>
                        </div>




                    </div>
                </div>
            </div>

        </div>


        <div class="@pagebackgoundVisible @pagebackgoundDisabled vg-view vg-elements flat-panel-group">
            <div class="panel-group vg-panel" data-ciid="@Model.CatalogItemID" data-vg="@CatalogItemViewGroup.PageDesignBackground">
                <div class="panel-heading" role="tab" id="headingOne1">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-target="#vg-@Model.CatalogItemID-backgound-acc" href="#" aria-expanded="false" aria-controls="collapseOne" class="@pagebackgoundcollapsed">
                            @UniBlockServiceHelper.CatalogItemViewGroupNames[CatalogItemViewGroup.PageDesignBackground]
                        </a>
                    </h4>
                </div>
                <div id="vg-@Model.CatalogItemID-backgound-acc" class="vg-acc-content collapse @pagebackgoundcollapsein" role="tabpanel" aria-labelledby="headingOne1" aria-expanded="false" style="">
                    <div class="panel-body">


                        <div class="form-group WebUni-form-group WebUni-form-group-big">
                            <label for="Height" class="col-sm-7 control-label">Фон</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundColorEnabled, new { data_init_plugin = "switchery_internal", onchange = "onVGElementsEnabledChanged($(this))", })
                                </div>
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group">
                            <label for="Height" class="col-sm-7 control-label">Цвет фона</label>
                            @{
                                var item = Model.BackgroundColor;
                                if (string.IsNullOrEmpty(item))
                                {
                                    Model.BackgroundColor = "rgb(0, 0, 0)";
                                }
                            }
                            <div class="col-sm-5" style="float: right;">
                                @Html.TextBoxFor(m => m.BackgroundColor, new
           {
               @class = "color-picker-fe_internal form-control WebUni-form-element"
           })
                            </div>
                        </div>



                        <div class="form-group WebUni-form-group">
                            <label for="Height" class="col-sm-7 control-label">Цвет фона при наведении</label>
                            @{
                                item = Model.BackgroundHoverColor;
                                if (string.IsNullOrEmpty(item))
                                {
                                    Model.BackgroundHoverColor = "rgb(0, 0, 0)";
                                }
                            }
                            <div class="col-sm-5" style="float: right;">
                                @Html.TextBoxFor(m => m.BackgroundHoverColor, new
           {
               @class = "color-picker-fe_internal form-control WebUni-form-element"
           })
                            </div>
                        </div>



                    </div>
                </div>
            </div>

        </div>



        <div class="@pagegraphbackgoundVisible vg-view vg-elements flat-panel-group">
            <div class="panel-group vg-panel" data-ciid="@Model.CatalogItemID" data-vg="@CatalogItemViewGroup.PageDesignGraphicsBackground">
                <div class="panel-heading" role="tab" id="headingOne1">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-target="#vg-@Model.CatalogItemID-graphbackgound-acc" href="#" aria-expanded="false" aria-controls="collapseOne" class="@pagegraphbackgoundcollapsed">
                            @UniBlockServiceHelper.CatalogItemViewGroupNames[CatalogItemViewGroup.PageDesignGraphicsBackground]
                        </a>
                    </h4>
                </div>
                <div id="vg-@Model.CatalogItemID-graphbackgound-acc" class="vg-acc-content collapse @pagegraphbackgoundcollapsein" role="tabpanel" aria-labelledby="headingOne1" aria-expanded="false" style="">
                    <div class="panel-body">


                        <div class="form-group WebUni-form-group WebUni-form-group-group">
                            <label for="Height" class="col-sm-7 control-label">Фоновое изображение</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundEnabled, new { data_init_plugin = "switchery_internal", onchange = "onVGElementsEnabledChanged($(this))", })
                                </div>
                            </div>
                        </div>


                        <div class="form-group WebUni-form-group">
                            <div class="col-sm-7 ">

                                @Html.DropDownListFor(m => m.BackgroundViewTypeID, new SelectList(
                new[]
                {
                    new {Value = ((long) BackgroundViewTypeValue.Filling).ToString(), Text = "Заполнение"},
                    new {Value = ((long) BackgroundViewTypeValue.BySize).ToString(), Text = "По размеру"},
                    new {Value = ((long) BackgroundViewTypeValue.Stretch).ToString(), Text = "Растянуть"},
                    new {Value = ((long) BackgroundViewTypeValue.Pave).ToString(), Text = "Замостить"},
                    new {Value = ((long) BackgroundViewTypeValue.Center).ToString(), Text = "По центру"},
                },
                "Value",
                "Text",
                Model.BackgroundViewTypeID),
                new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                )

                            </div>
                            <div class="col-sm-5" style="float: right;">
                                @*<div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                    <input class="BackgroundViewTypeVariant" data-eid="1" id="BackgroundFilling" name="BackgroundFilling" type="checkbox" value="false">
                    <label for="BackgroundFilling"></label>
                </div>*@
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group">
                            <label for="BackgroundFixed" class="col-sm-7 control-label">Зафиксировать</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundFixed)
                                    <label for="BackgroundFixed"></label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group WebUni-form-group-big">

                            <div class="row image-selector-wrapper">
                                <div class="col-sm-6 col-md-6" style="width: 150px; height: 100px; border-style: solid; border-width: 1px; border-color: #CCCCCC; border-radius: 0px; text-align: center; ">


                                    <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)">
                                        @{
                                            var imageUrlModel = Model.BackgroundUrl;
                                            var imageUrl = string.IsNullOrEmpty(imageUrlModel) ? Url.Content("~/BWP/Resources/Images/empty_image.png") : Url.Content("~/" + imageUrlModel);
                                        }
                                        @Html.HiddenFor(m => m.BackgroundUrl, new { @class = "imgItem" })

                                        <img style="max-height: 98px; max-width: 148px;  " alt="нет" src="@imageUrl" />
                                    </a>



                                </div>

                                <div class="col-sm-6 col-md-6">
                                    <div class="row">
                                        <div class=" btn-group col-sm-9">
                                            <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)" class="btn btn-default">
                                                <i class="fa fa-pencil"></i>
                                            </a>
                                            <a onclick="imageEditDelete($(this))" class="btn btn-danger">
                                                <i class="fa fa-times"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="row sm-p-t-20">
                                        <p class="bold image-wrapper-text">@Model.BackgroundUrl</p>
                                    </div>
                                </div>
                            </div>

                        </div>


                        <div class="form-group WebUni-form-group WebUni-form-group-group">
                            <label for="Height" class="col-sm-7 control-label">Фоновое изображение при наведении</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundHoverEnabled, new { data_init_plugin = "switchery_internal" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group WebUni-form-group">
                            <div class="col-sm-7 ">

                                @Html.DropDownListFor(m => m.BackgroundHoverViewTypeID, new SelectList(
                    new[]
                    {
                        new { Value = ((long)BackgroundViewTypeValue.Filling).ToString(), Text = "Заполнение" },
                        new { Value = ((long)BackgroundViewTypeValue.BySize).ToString(), Text = "По размеру" },
                        new { Value = ((long)BackgroundViewTypeValue.Stretch).ToString(), Text = "Растянуть" },
                        new { Value = ((long)BackgroundViewTypeValue.Pave).ToString(), Text = "Замостить" },
                        new { Value = ((long)BackgroundViewTypeValue.Center).ToString(), Text = "По центру" },
                    },
                    "Value",
                    "Text",
                    Model.BackgroundHoverViewTypeID),
                    new { @class = "cs-select cs-skin-slide", data_init_plugin = "cs-select" }
                    )

                            </div>
                            <div class="col-sm-5" style="float: right;">
                                @*<div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                    <input class="BackgroundViewTypeVariant" data-eid="1" id="BackgroundFilling" name="BackgroundFilling" type="checkbox" value="false">
                    <label for="BackgroundFilling"></label>
                </div>*@
                            </div>
                        </div>
                        <div class="form-group WebUni-form-group">
                            <label for="BackgroundHoverFixed" class="col-sm-7 control-label">Зафиксировать</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundHoverFixed)
                                    <label for="BackgroundHoverFixed"></label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group WebUni-form-group-big">

                            <div class="row image-selector-wrapper">
                                <div class="col-sm-6 col-md-6" style="width: 150px; height: 100px; border-style: solid; border-width: 1px; border-color: #CCCCCC; border-radius: 0px; text-align: center; ">


                                    <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)">
                                        @{
                                            imageUrlModel = Model.BackgroundHoverUrl;
                                            imageUrl = string.IsNullOrEmpty(imageUrlModel) ? Url.Content("~/BWP/Resources/Images/empty_image.png") : Url.Content("~/" + imageUrlModel);
                                        }
                                        @Html.HiddenFor(m => m.BackgroundHoverUrl, new { @class = "imgItem" })

                                        <img style="max-height: 98px; max-width: 148px;  " alt="нет" src="@imageUrl" />
                                    </a>



                                </div>

                                <div class="col-sm-6 col-md-6">
                                    <div class="row">
                                        <div class=" btn-group col-sm-9">
                                            <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)" class="btn btn-default">
                                                <i class="fa fa-pencil"></i>
                                            </a>
                                            <a onclick="imageEditDelete($(this))" class="btn btn-danger">
                                                <i class="fa fa-times"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="row sm-p-t-20">
                                        <p class="bold image-wrapper-text">@Model.BackgroundHoverUrl</p>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="form-group WebUni-form-group WebUni-form-group-group">
                            <label for="Height" class="col-sm-7 control-label">Фоновое видео</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success checkbox-circle ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundVideoEnabled, new { data_init_plugin = "switchery_internal" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group WebUni-form-group">
                            <label for="BackgroundVideoIsLooped" class="col-sm-7 control-label">Зациклить</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundVideoIsLooped)
                                    <label for="BackgroundVideoIsLooped"></label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group">
                            <label for="BackgroundVideoIsAutoplay" class="col-sm-7 control-label">Включить автоматически</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundVideoIsAutoplay)
                                    <label for="BackgroundVideoIsAutoplay"></label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group">
                            <label for="BackgroundVideoIsMuted" class="col-sm-7 control-label">Выключить звук</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundVideoIsMuted)
                                    <label for="BackgroundVideoIsMuted"></label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group">
                            <label for="BackgroundVideoIsShowControls" class="col-sm-7 control-label">Показывать кнопки</label>
                            <div class="col-sm-5" style="float: right;">
                                <div class="checkbox WebUni-checkbox check-success ">
                                    @Html.BasicCheckBoxFor(x => x.BackgroundVideoIsShowControls)
                                    <label for="BackgroundVideoIsShowControls"></label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group WebUni-form-group WebUni-form-group-big">

                            <div class="row image-selector-wrapper">
                                <div class="col-sm-6 col-md-6" style="width: 150px; height: 100px; border-style: solid; border-width: 1px; border-color: #CCCCCC; border-radius: 0px; text-align: center; ">


                                    <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)">
                                        @{
                                            imageUrlModel = Model.BackgroundVideoUrl;
                                            imageUrl = string.IsNullOrEmpty(imageUrlModel) ? Url.Content("~/BWP/Resources/Images/empty_image.png") : Url.Content("~/" + imageUrlModel);
                                        }
                                        @Html.HiddenFor(m => m.BackgroundVideoUrl, new { @class = "imgItem" })

                                        <img style="max-height: 98px; max-width: 148px;  " alt="нет" src="@imageUrl" />
                                    </a>



                                </div>

                                <div class="col-sm-6 col-md-6">
                                    <div class="row">
                                        <div class=" btn-group col-sm-9">
                                            <a onclick="OpenFM('@Url.Action(MVC.FileManager.Modal())', $(this), onImageSelected)" class="btn btn-default">
                                                <i class="fa fa-pencil"></i>
                                            </a>
                                            <a onclick="imageEditDelete($(this))" class="btn btn-danger">
                                                <i class="fa fa-times"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="row sm-p-t-20">
                                        <p class="bold image-wrapper-text">@Model.BackgroundVideoUrl</p>
                                    </div>
                                </div>
                            </div>

                        </div>


                    </div>
                </div>
            </div>

        </div>





    </div>

}

