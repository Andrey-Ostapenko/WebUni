@using System.Data.Entity
@using System.Linq
@using System.Web.UI.WebControls
@using DevExpress.Web
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using livemenu.Areas.CMS.Controllers

@using livemenu.Areas.CRM.Controllers
@using livemenu.Common.Entities.Entities
@using livemenu.Helpers
@using livemenu.Kernel.Catalog
@using livemenu.Kernel.CRM.Clients
@using livemenu.Kernel.CRM.Orders
@using livemenu.Kernel.CRM.PriceList
@using livemenu.Kernel.CRM.Storages
@using Microsoft.Practices.ServiceLocation
@using Unit = System.Web.UI.WebControls.Unit

@{
    Layout = null;

}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}


@{

    Layout = null;

    var settings = (ViewContext.Controller as AdminController).GetCatalogsGridViewSettings();



    settings.Settings.ShowFooter = true;


    settings.Name = "AdminCatalogsGridView";
    settings.Width = new Unit(100, UnitType.Percentage);
    settings.Settings.ShowFilterRow = true;
    settings.KeyFieldName = "ID";





    string name = settings.Name;


    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;

    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

    settings.CallbackRouteValues = new { Area = MVC.CMS.Name, Controller = MVC.CMS.Admin.Name, Action = MVC.CMS.Admin.ActionNames.CatalogsGridViewPartial };


    settings.SettingsEditing.BatchUpdateRouteValues = new { Area = MVC.CMS.Name, Controller = MVC.CMS.Admin.Name, Action = MVC.CMS.Admin.ActionNames.CatalogsGridViewBatchUpdatePartial };

    settings.SettingsBehavior.AllowDragDrop = true;

    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsPager.Visible = true;
    settings.SettingsPager.PageSize = 50;
    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "50", "100", "500", "1000" };

    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;


    settings.Settings.ShowHeaderFilterButton = false;
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowFooter = true;

    //settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
    //settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

    settings.SettingsBehavior.AllowFocusedRow = false;
    settings.SettingsBehavior.ProcessFocusedRowChangedOnServer = false;
    settings.SettingsBehavior.AllowGroup = true;
    settings.SettingsBehavior.AllowSelectByRowClick = false;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsBehavior.AllowSort = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.SettingsContextMenu.Enabled = true;

    settings.CustomJSProperties = (s, e) =>
    {
        ASPxGridView grid = (ASPxGridView)s;
        e.Properties["cpGridFilterExpression"] = grid.FilterExpression;
    };
    //var propCol = (MVCxGridViewColumn)settings.Columns["Code"];
    //propCol.SetDataItemTemplateContent(a =>
    //{
    //    var typeID = (long?)DataBinder.Eval(a.DataItem, "CatalogItemTypeID");
    //    if (typeID == 1)
    //    {
    //        ViewContext.Writer.Write(DataBinder.Eval(a.DataItem, "CustomCode"));
    //    }
    //    else
    //    {
    //        ViewContext.Writer.Write(DataBinder.Eval(a.DataItem, "Code"));
    //    }

    //});

    //settings.CellEditorInitialize = (s, e) =>
    //{
    //    ASPxEdit editor = (ASPxEdit)e.Editor;
    //    editor.ValidationSettings.Display = Display.None;
    //};


    //settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Count, "ID");

    //settings.Columns.Add(column =>
    //{
    //    column.Width = new Unit(0000.5, UnitType.Percentage);
    //    column.SetDataItemTemplateContent(c =>
    //    {
    //        var index = c.Grid.FindVisibleIndexByKeyValue(DataBinder.Eval(c.DataItem, "ID"));

    //        ViewContext.Writer.Write(Html.DeleteButton(string.Format("{0}.DeleteRow({1})", name, index)));
    //    });
    //    column.SetHeaderCaptionTemplateContent(a => ViewContext.Writer.Write(Html.CreateButton(string.Format("{0}.AddNewRow()", name))));
    //    column.SetEditItemTemplateContent(c =>
    //    {
    //        var index = c.Grid.FindVisibleIndexByKeyValue(DataBinder.Eval(c.DataItem, "ID"));

    //        ViewContext.Writer.Write(Html.GridViewDeleteButton(name, index));
    //    });

    //});



    @Html.DevExpress().GridView(settings).BindToLINQ(string.Empty, string.Empty, (s, e) =>
    {
        e.KeyExpression = "ID";
       
        e.QueryableSource = ServiceLocator.Current.GetInstance<ICatalogItemService>().RawDataQueryable;
    }).GetHtml()

}