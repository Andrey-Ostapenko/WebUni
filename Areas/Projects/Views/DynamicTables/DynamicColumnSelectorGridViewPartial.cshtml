@using System.Data.Entity
@using System.Web.UI.WebControls
@using DevExpress.Web
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using livemenu.Areas.Projects.Controllers
@using livemenu.Kernel.BWP.DynamicTables
@using Microsoft.Practices.ServiceLocation
@using livemenu.Helpers
@using livemenu.Common.Entities.Entities
@using livemenu.Common.Kernel.DynamicTables

@{
    Layout = null;

}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@model DynamicTable

@{

    Layout = null;

    var settings = (ViewContext.Controller as DynamicTablesController).GetGridViewEditTableStructureSettings();

    settings.Name = "DCSelectorGridView";
    string name = settings.Name;

    settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

    settings.CallbackRouteValues = new { Area = MVC.Projects.Name, Controller = MVC.Projects.DynamicTables.Name, Action = MVC.Projects.DynamicTables.ActionNames.DynamicColumnSelectorGridViewPartial, dynamicTableID = Model.ID, editstructure = true };



    settings.SettingsBehavior.AllowDragDrop = true;
    settings.Height = new System.Web.UI.WebControls.Unit(500, UnitType.Pixel);
    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsPager.Visible = true;
    settings.SettingsPager.PageSize = 5;
    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = false;
    settings.SettingsPager.LastPageButton.Visible = false;
    settings.SettingsPager.PageSizeItemSettings.Visible = false;
    //settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "50", "100" };

    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;


    settings.Settings.ShowHeaderFilterButton = false;
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowFooter = true;


    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
    settings.EnableRowsCache = false;
    settings.SettingsBehavior.AllowGroup = true;
    settings.SettingsBehavior.AllowSort = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;

    settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.None;
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowSelectCheckbox = true;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;

    settings.ClientSideEvents.SelectionChanged = "DCSelectorSelectionChanged";
}


@Html.DevExpress().GridView(settings).BindToLINQ(string.Empty, string.Empty, (s, e) =>
{
    e.KeyExpression = "ID";

    e.QueryableSource = ServiceLocator.Current.GetInstance<IDynamicColumnService>().RawDataQueryable.Where(col => col.DynamicTableID == Model.ID);
}).GetHtml()