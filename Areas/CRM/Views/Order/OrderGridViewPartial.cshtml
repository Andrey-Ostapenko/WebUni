@using System.Data.Entity
@using System.Web.UI.WebControls
@using DevExpress.Web
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using livemenu.Areas.CRM.Controllers
@using livemenu.Helpers
@using livemenu.Kernel.CRM.Orders
@using livemenu.Kernel.CRM.PriceList
@using Microsoft.Practices.ServiceLocation

@{
    Layout = null;
   
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}


@{

    Layout = null;

    var settings = (ViewContext.Controller as OrderController).GetGridViewSettings();


    string name = settings.Name;


    settings.SettingsEditing.Mode = GridViewEditingMode.EditForm;


    settings.CallbackRouteValues = new { Area = MVC.CRM.Name, Controller = MVC.CRM.Order.Name, Action = MVC.CRM.Order.ActionNames.OrderGridViewPartial};

    settings.SettingsEditing.DeleteRowRouteValues = new { Area = MVC.CRM.Name, Controller = MVC.CRM.Order.Name, Action = MVC.CRM.Order.ActionNames.GridViewDeletePartial };


    settings.SettingsEditing.BatchUpdateRouteValues = new { Area = MVC.CRM.Name, Controller = MVC.CRM.PriceList.Name, Action = MVC.CRM.PriceList.ActionNames.GridViewBatchUpdatePartial };
    
    settings.SettingsBehavior.AllowDragDrop = true;

    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsPager.Visible = true;
    settings.SettingsPager.PageSize = 50;
    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "50", "100", "500", "1000" };

    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;


    settings.Settings.ShowHeaderFilterButton = false;
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowFooter = true;


    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
    settings.EnableRowsCache = false;

    //settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
    //settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.ProcessFocusedRowChangedOnServer = false;
    settings.SettingsBehavior.AllowGroup = true;
    settings.SettingsBehavior.AllowSelectByRowClick = false;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsBehavior.AllowSort = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.SettingsBehavior.ConfirmDelete = true;

    //settings.SettingsContextMenu.Enabled = true;

    //settings.Styles.Row.CssClass = "draggable";
    
   
    
    //settings.HtmlRowPrepared = (s, e) =>
    //{
    //    if (e.RowType == GridViewRowType.Data)
    //    {
    //        object displayIndex = e.GetValue("DisplayIndex");
    //        if (displayIndex != null)
    //            e.Row.Attributes.Add("displayIndex", displayIndex.ToString());
    //    }
    //};

    //settings.BeforeGetCallbackResult = (s, e) =>
    //{
    //    if (ViewBag.VisibleIndex == null)
    //        return;
    //    var gridView = (MVCxGridView)s;
    //    gridView.FocusedRowIndex = ViewBag.VisibleIndex;
    //};

    //settings.ClientSideEvents.ColumnSorting = "GetSortedColumnIndex";


    //settings.ClientSideEvents.BatchEditStartEditing = "gridView_BatchEditStartEditing";

    //settings.CommandColumn.Visible = true;
    //settings.CommandColumn.ShowDeleteButton = true;
    //settings.CommandColumn.ShowNewButtonInHeader = true;


    settings.Columns.Add(column =>
    {
        column.Width = new Unit(50, UnitType.Pixel);
        column.SetDataItemTemplateContent(c =>
        {
            var d = DataBinder.Eval(c.DataItem, "ID");
            if (d != null)
            {
                var id = (long)DataBinder.Eval(c.DataItem, "ID");
                ViewContext.Writer.Write(Html.StartEditButton(string.Format("openOrderCard('{0}');", Url.Action(MVC.CRM.Order.Card(id)))));
            }
        });
        column.SetHeaderCaptionTemplateContent(a => ViewContext.Writer.Write(Html.CreateButton(string.Format("openOrderCard('{0}');", Url.Action(MVC.CRM.Order.Card())))));
        column.SetEditItemTemplateContent(c => ViewContext.Writer.Write(Html.GridViewSaveButton(name)));

    });

    settings.Columns.Add(column =>
    {
        column.Width = new Unit(1, UnitType.Percentage);

        column.SetEditItemTemplateContent(c => ViewContext.Writer.Write(Html.GridViewCancelEditButton(name)));
        column.SetDataItemTemplateContent(c =>
        {
            var index = c.Grid.FindVisibleIndexByKeyValue(DataBinder.Eval(c.DataItem, "ID"));

            ViewContext.Writer.Write(Html.GridViewDeleteButton(name, index));
        });
    });

  
}




@{
    //var dCol = settings.Columns["DisplayIndex"];

    //var dCola = (MVCxGridViewColumn)dCol;
    //dCola.SetEditItemTemplateContent(a =>
    //{
    //    var d = (long?)DataBinder.Eval(a.DataItem, "DisplayIndex");
    //    d = d ?? 0;
    //    ViewContext.Writer.Write(string.Format("<input type='hidden' name='DisplayIndex' id='DisplayIndex' value='{0}'></input>", d));
    //});
}




@Html.DevExpress().GridView(settings).BindToLINQ(string.Empty, string.Empty, (s, e) =>
{
    e.KeyExpression = "ID";

    e.QueryableSource = ServiceLocator.Current.GetInstance<IOrderListService>().RawDataQueryable;
}).GetHtml()


