// <auto-generated /> 
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.
 
// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC
 
using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace livemenu.Areas.Projects.Controllers
{
    public partial class DynamicColumnCodeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DynamicColumnCodeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GridViewBatchUpdatePartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewBatchUpdatePartial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportTo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportTo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Import()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Import);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DynamicColumnCodeController Actions { get { return MVC.Projects.DynamicColumnCode; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Projects";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "DynamicColumnCode";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "DynamicColumnCode";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GridViewPartial = "GridViewPartial";
            public readonly string GridViewBatchUpdatePartial = "GridViewBatchUpdatePartial";
            public readonly string ExportTo = "ExportTo";
            public readonly string Import = "Import";
            public readonly string DataBase = "DataBase";
            public readonly string Codes = "Codes";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GridViewPartial = "GridViewPartial";
            public const string GridViewBatchUpdatePartial = "GridViewBatchUpdatePartial";
            public const string ExportTo = "ExportTo";
            public const string Import = "Import";
            public const string DataBase = "DataBase";
            public const string Codes = "Codes";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string appID = "appID";
        }
        static readonly ActionParamsClass_GridViewPartial s_params_GridViewPartial = new ActionParamsClass_GridViewPartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GridViewPartial GridViewPartialParams { get { return s_params_GridViewPartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GridViewPartial
        {
            public readonly string appID = "appID";
            public readonly string draggingIndex = "draggingIndex";
            public readonly string targetIndex = "targetIndex";
            public readonly string command = "command";
        }
        static readonly ActionParamsClass_GridViewBatchUpdatePartial s_params_GridViewBatchUpdatePartial = new ActionParamsClass_GridViewBatchUpdatePartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GridViewBatchUpdatePartial GridViewBatchUpdatePartialParams { get { return s_params_GridViewBatchUpdatePartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GridViewBatchUpdatePartial
        {
            public readonly string updateValues = "updateValues";
            public readonly string appID = "appID";
        }
        static readonly ActionParamsClass_ExportTo s_params_ExportTo = new ActionParamsClass_ExportTo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportTo ExportToParams { get { return s_params_ExportTo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportTo
        {
            public readonly string applicationID = "applicationID";
        }
        static readonly ActionParamsClass_Import s_params_Import = new ActionParamsClass_Import();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Import ImportParams { get { return s_params_Import; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Import
        {
            public readonly string file = "file";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string GridViewPartial = "GridViewPartial";
                public readonly string Index = "Index";
            }
            public readonly string GridViewPartial = "~/Areas/Projects/Views/DynamicColumnCode/GridViewPartial.cshtml";
            public readonly string Index = "~/Areas/Projects/Views/DynamicColumnCode/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DynamicColumnCodeController : livemenu.Areas.Projects.Controllers.DynamicColumnCodeController
    {
        public T4MVC_DynamicColumnCodeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? appID);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(long? appID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            IndexOverride(callInfo, appID);
            return callInfo;
        }

        [NonAction]
        partial void GridViewPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? appID, int? draggingIndex, int? targetIndex, string command);

        [NonAction]
        public override System.Web.Mvc.ActionResult GridViewPartial(long? appID, int? draggingIndex, int? targetIndex, string command)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewPartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "draggingIndex", draggingIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "targetIndex", targetIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            GridViewPartialOverride(callInfo, appID, draggingIndex, targetIndex, command);
            return callInfo;
        }

        [NonAction]
        partial void GridViewBatchUpdatePartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVCxGridViewBatchUpdateValues<DynamicColumnCodeList, int> updateValues, long? appID);

        [NonAction]
        public override System.Web.Mvc.ActionResult GridViewBatchUpdatePartial(MVCxGridViewBatchUpdateValues<DynamicColumnCodeList, int> updateValues, long? appID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewBatchUpdatePartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "updateValues", updateValues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            GridViewBatchUpdatePartialOverride(callInfo, updateValues, appID);
            return callInfo;
        }

        [NonAction]
        partial void ExportToOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? applicationID);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportTo(long? applicationID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "applicationID", applicationID);
            ExportToOverride(callInfo, applicationID);
            return callInfo;
        }

        [NonAction]
        partial void ImportOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string file);

        [NonAction]
        public override System.Web.Mvc.JsonResult Import(string file)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Import);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            ImportOverride(callInfo, file);
            return callInfo;
        }

        [NonAction]
        partial void DataBaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DataBase()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DataBase);
            DataBaseOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CodesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Codes()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Codes);
            CodesOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
