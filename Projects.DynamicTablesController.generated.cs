// <auto-generated /> 
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.
 
// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC
 
using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace livemenu.Areas.Projects.Controllers
{
    public partial class DynamicTablesController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DynamicTablesController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GridViewBatchUpdatePartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewBatchUpdatePartial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GridViewEditTableStructureBatchUpdatePartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewEditTableStructureBatchUpdatePartial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GridViewEditTableBatchUpdatePartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewEditTableBatchUpdatePartial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DynamicEntitySelectorGridViewPartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DynamicEntitySelectorGridViewPartial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DynamicColumnSelectorGridViewPartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DynamicColumnSelectorGridViewPartial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDynamicEntityDescription()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicEntityDescription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDynamicEntityWithColumnDescription()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicEntityWithColumnDescription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDynamicEntityFullDescription()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicEntityFullDescription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDynamicColumnDescription()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicColumnDescription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetDynamicEntitiesOverview()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetDynamicEntitiesOverview);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportTo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportTo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Import()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Import);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDynamicTableVersions()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicTableVersions);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDynamicTableVersion()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicTableVersion);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CreateDynamicTableVersion()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateDynamicTableVersion);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult DeleteDynamicTableVersion()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteDynamicTableVersion);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DynamicTablesController Actions { get { return MVC.Projects.DynamicTables; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Projects";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "DynamicTables";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "DynamicTables";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GridViewPartial = "GridViewPartial";
            public readonly string GridViewBatchUpdatePartial = "GridViewBatchUpdatePartial";
            public readonly string GridViewEditTableStructureBatchUpdatePartial = "GridViewEditTableStructureBatchUpdatePartial";
            public readonly string GridViewEditTableBatchUpdatePartial = "GridViewEditTableBatchUpdatePartial";
            public readonly string GetTablesList = "GetTablesList";
            public readonly string DynamicEntitySelectorGridViewPartial = "DynamicEntitySelectorGridViewPartial";
            public readonly string DynamicColumnSelectorGridViewPartial = "DynamicColumnSelectorGridViewPartial";
            public readonly string GetDynamicEntityDescription = "GetDynamicEntityDescription";
            public readonly string GetDynamicEntityWithColumnDescription = "GetDynamicEntityWithColumnDescription";
            public readonly string GetDynamicEntityFullDescription = "GetDynamicEntityFullDescription";
            public readonly string GetDynamicColumnDescription = "GetDynamicColumnDescription";
            public readonly string GetDynamicEntitiesOverview = "GetDynamicEntitiesOverview";
            public readonly string ExportTo = "ExportTo";
            public readonly string Import = "Import";
            public readonly string GetDynamicTableVersions = "GetDynamicTableVersions";
            public readonly string GetDynamicTableVersion = "GetDynamicTableVersion";
            public readonly string CreateDynamicTableVersion = "CreateDynamicTableVersion";
            public readonly string DeleteDynamicTableVersion = "DeleteDynamicTableVersion";
            public readonly string DataBase = "DataBase";
            public readonly string Codes = "Codes";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GridViewPartial = "GridViewPartial";
            public const string GridViewBatchUpdatePartial = "GridViewBatchUpdatePartial";
            public const string GridViewEditTableStructureBatchUpdatePartial = "GridViewEditTableStructureBatchUpdatePartial";
            public const string GridViewEditTableBatchUpdatePartial = "GridViewEditTableBatchUpdatePartial";
            public const string GetTablesList = "GetTablesList";
            public const string DynamicEntitySelectorGridViewPartial = "DynamicEntitySelectorGridViewPartial";
            public const string DynamicColumnSelectorGridViewPartial = "DynamicColumnSelectorGridViewPartial";
            public const string GetDynamicEntityDescription = "GetDynamicEntityDescription";
            public const string GetDynamicEntityWithColumnDescription = "GetDynamicEntityWithColumnDescription";
            public const string GetDynamicEntityFullDescription = "GetDynamicEntityFullDescription";
            public const string GetDynamicColumnDescription = "GetDynamicColumnDescription";
            public const string GetDynamicEntitiesOverview = "GetDynamicEntitiesOverview";
            public const string ExportTo = "ExportTo";
            public const string Import = "Import";
            public const string GetDynamicTableVersions = "GetDynamicTableVersions";
            public const string GetDynamicTableVersion = "GetDynamicTableVersion";
            public const string CreateDynamicTableVersion = "CreateDynamicTableVersion";
            public const string DeleteDynamicTableVersion = "DeleteDynamicTableVersion";
            public const string DataBase = "DataBase";
            public const string Codes = "Codes";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string appID = "appID";
        }
        static readonly ActionParamsClass_GridViewPartial s_params_GridViewPartial = new ActionParamsClass_GridViewPartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GridViewPartial GridViewPartialParams { get { return s_params_GridViewPartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GridViewPartial
        {
            public readonly string appID = "appID";
            public readonly string dynamicTableID = "dynamicTableID";
            public readonly string editstructure = "editstructure";
            public readonly string focusedRowIndex = "focusedRowIndex";
            public readonly string draggingIndex = "draggingIndex";
            public readonly string targetIndex = "targetIndex";
            public readonly string command = "command";
        }
        static readonly ActionParamsClass_GridViewBatchUpdatePartial s_params_GridViewBatchUpdatePartial = new ActionParamsClass_GridViewBatchUpdatePartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GridViewBatchUpdatePartial GridViewBatchUpdatePartialParams { get { return s_params_GridViewBatchUpdatePartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GridViewBatchUpdatePartial
        {
            public readonly string updateValues = "updateValues";
            public readonly string appID = "appID";
        }
        static readonly ActionParamsClass_GridViewEditTableStructureBatchUpdatePartial s_params_GridViewEditTableStructureBatchUpdatePartial = new ActionParamsClass_GridViewEditTableStructureBatchUpdatePartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GridViewEditTableStructureBatchUpdatePartial GridViewEditTableStructureBatchUpdatePartialParams { get { return s_params_GridViewEditTableStructureBatchUpdatePartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GridViewEditTableStructureBatchUpdatePartial
        {
            public readonly string appID = "appID";
            public readonly string dynamicTableID = "dynamicTableID";
            public readonly string updateValues = "updateValues";
        }
        static readonly ActionParamsClass_GridViewEditTableBatchUpdatePartial s_params_GridViewEditTableBatchUpdatePartial = new ActionParamsClass_GridViewEditTableBatchUpdatePartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GridViewEditTableBatchUpdatePartial GridViewEditTableBatchUpdatePartialParams { get { return s_params_GridViewEditTableBatchUpdatePartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GridViewEditTableBatchUpdatePartial
        {
            public readonly string dynamicTableID = "dynamicTableID";
            public readonly string dynamicTableVersionID = "dynamicTableVersionID";
            public readonly string updateValues = "updateValues";
            public readonly string appID = "appID";
        }
        static readonly ActionParamsClass_DynamicEntitySelectorGridViewPartial s_params_DynamicEntitySelectorGridViewPartial = new ActionParamsClass_DynamicEntitySelectorGridViewPartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DynamicEntitySelectorGridViewPartial DynamicEntitySelectorGridViewPartialParams { get { return s_params_DynamicEntitySelectorGridViewPartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DynamicEntitySelectorGridViewPartial
        {
            public readonly string dynamicTableID = "dynamicTableID";
            public readonly string dynamicTableVersionID = "dynamicTableVersionID";
            public readonly string isSingle = "isSingle";
        }
        static readonly ActionParamsClass_DynamicColumnSelectorGridViewPartial s_params_DynamicColumnSelectorGridViewPartial = new ActionParamsClass_DynamicColumnSelectorGridViewPartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DynamicColumnSelectorGridViewPartial DynamicColumnSelectorGridViewPartialParams { get { return s_params_DynamicColumnSelectorGridViewPartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DynamicColumnSelectorGridViewPartial
        {
            public readonly string dynamicTableID = "dynamicTableID";
        }
        static readonly ActionParamsClass_GetDynamicEntityDescription s_params_GetDynamicEntityDescription = new ActionParamsClass_GetDynamicEntityDescription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDynamicEntityDescription GetDynamicEntityDescriptionParams { get { return s_params_GetDynamicEntityDescription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDynamicEntityDescription
        {
            public readonly string ids = "ids";
        }
        static readonly ActionParamsClass_GetDynamicEntityWithColumnDescription s_params_GetDynamicEntityWithColumnDescription = new ActionParamsClass_GetDynamicEntityWithColumnDescription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDynamicEntityWithColumnDescription GetDynamicEntityWithColumnDescriptionParams { get { return s_params_GetDynamicEntityWithColumnDescription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDynamicEntityWithColumnDescription
        {
            public readonly string ids = "ids";
            public readonly string columnID = "columnID";
        }
        static readonly ActionParamsClass_GetDynamicEntityFullDescription s_params_GetDynamicEntityFullDescription = new ActionParamsClass_GetDynamicEntityFullDescription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDynamicEntityFullDescription GetDynamicEntityFullDescriptionParams { get { return s_params_GetDynamicEntityFullDescription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDynamicEntityFullDescription
        {
            public readonly string ids = "ids";
        }
        static readonly ActionParamsClass_GetDynamicColumnDescription s_params_GetDynamicColumnDescription = new ActionParamsClass_GetDynamicColumnDescription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDynamicColumnDescription GetDynamicColumnDescriptionParams { get { return s_params_GetDynamicColumnDescription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDynamicColumnDescription
        {
            public readonly string ids = "ids";
        }
        static readonly ActionParamsClass_GetDynamicEntitiesOverview s_params_GetDynamicEntitiesOverview = new ActionParamsClass_GetDynamicEntitiesOverview();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDynamicEntitiesOverview GetDynamicEntitiesOverviewParams { get { return s_params_GetDynamicEntitiesOverview; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDynamicEntitiesOverview
        {
            public readonly string ids = "ids";
        }
        static readonly ActionParamsClass_ExportTo s_params_ExportTo = new ActionParamsClass_ExportTo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportTo ExportToParams { get { return s_params_ExportTo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportTo
        {
            public readonly string EditingDynamicTableID = "EditingDynamicTableID";
            public readonly string DynamicTableVersionID = "DynamicTableVersionID";
        }
        static readonly ActionParamsClass_Import s_params_Import = new ActionParamsClass_Import();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Import ImportParams { get { return s_params_Import; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Import
        {
            public readonly string dynamicTableID = "dynamicTableID";
            public readonly string file = "file";
            public readonly string DynamicTableVersionID = "DynamicTableVersionID";
        }
        static readonly ActionParamsClass_GetDynamicTableVersions s_params_GetDynamicTableVersions = new ActionParamsClass_GetDynamicTableVersions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDynamicTableVersions GetDynamicTableVersionsParams { get { return s_params_GetDynamicTableVersions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDynamicTableVersions
        {
            public readonly string tableID = "tableID";
        }
        static readonly ActionParamsClass_GetDynamicTableVersion s_params_GetDynamicTableVersion = new ActionParamsClass_GetDynamicTableVersion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDynamicTableVersion GetDynamicTableVersionParams { get { return s_params_GetDynamicTableVersion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDynamicTableVersion
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CreateDynamicTableVersion s_params_CreateDynamicTableVersion = new ActionParamsClass_CreateDynamicTableVersion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateDynamicTableVersion CreateDynamicTableVersionParams { get { return s_params_CreateDynamicTableVersion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateDynamicTableVersion
        {
            public readonly string tableID = "tableID";
            public readonly string name = "name";
        }
        static readonly ActionParamsClass_DeleteDynamicTableVersion s_params_DeleteDynamicTableVersion = new ActionParamsClass_DeleteDynamicTableVersion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteDynamicTableVersion DeleteDynamicTableVersionParams { get { return s_params_DeleteDynamicTableVersion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteDynamicTableVersion
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string DynamicColumnSelectorGridViewPartial = "DynamicColumnSelectorGridViewPartial";
                public readonly string DynamicEntitySelectorGridViewPartial = "DynamicEntitySelectorGridViewPartial";
                public readonly string GetDynamicEntitiesOverview = "GetDynamicEntitiesOverview";
                public readonly string GridViewEditTablePartial = "GridViewEditTablePartial";
                public readonly string GridViewEditTableStructurePartial = "GridViewEditTableStructurePartial";
                public readonly string GridViewPartial = "GridViewPartial";
                public readonly string Index = "Index";
            }
            public readonly string DynamicColumnSelectorGridViewPartial = "~/Areas/Projects/Views/DynamicTables/DynamicColumnSelectorGridViewPartial.cshtml";
            public readonly string DynamicEntitySelectorGridViewPartial = "~/Areas/Projects/Views/DynamicTables/DynamicEntitySelectorGridViewPartial.cshtml";
            public readonly string GetDynamicEntitiesOverview = "~/Areas/Projects/Views/DynamicTables/GetDynamicEntitiesOverview.cshtml";
            public readonly string GridViewEditTablePartial = "~/Areas/Projects/Views/DynamicTables/GridViewEditTablePartial.cshtml";
            public readonly string GridViewEditTableStructurePartial = "~/Areas/Projects/Views/DynamicTables/GridViewEditTableStructurePartial.cshtml";
            public readonly string GridViewPartial = "~/Areas/Projects/Views/DynamicTables/GridViewPartial.cshtml";
            public readonly string Index = "~/Areas/Projects/Views/DynamicTables/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DynamicTablesController : livemenu.Areas.Projects.Controllers.DynamicTablesController
    {
        public T4MVC_DynamicTablesController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? appID);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(long? appID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            IndexOverride(callInfo, appID);
            return callInfo;
        }

        [NonAction]
        partial void GridViewPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? appID, long? dynamicTableID, bool? editstructure, int? focusedRowIndex, int? draggingIndex, int? targetIndex, string command);

        [NonAction]
        public override System.Web.Mvc.ActionResult GridViewPartial(long? appID, long? dynamicTableID, bool? editstructure, int? focusedRowIndex, int? draggingIndex, int? targetIndex, string command)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewPartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableID", dynamicTableID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "editstructure", editstructure);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "focusedRowIndex", focusedRowIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "draggingIndex", draggingIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "targetIndex", targetIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            GridViewPartialOverride(callInfo, appID, dynamicTableID, editstructure, focusedRowIndex, draggingIndex, targetIndex, command);
            return callInfo;
        }

        [NonAction]
        partial void GridViewBatchUpdatePartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVCxGridViewBatchUpdateValues<DynamicTable, int> updateValues, long? appID);

        [NonAction]
        public override System.Web.Mvc.ActionResult GridViewBatchUpdatePartial(MVCxGridViewBatchUpdateValues<DynamicTable, int> updateValues, long? appID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewBatchUpdatePartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "updateValues", updateValues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            GridViewBatchUpdatePartialOverride(callInfo, updateValues, appID);
            return callInfo;
        }

        [NonAction]
        partial void GridViewEditTableStructureBatchUpdatePartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? appID, long dynamicTableID, MVCxGridViewBatchUpdateValues<DynamicColumn, int> updateValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult GridViewEditTableStructureBatchUpdatePartial(long? appID, long dynamicTableID, MVCxGridViewBatchUpdateValues<DynamicColumn, int> updateValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewEditTableStructureBatchUpdatePartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableID", dynamicTableID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "updateValues", updateValues);
            GridViewEditTableStructureBatchUpdatePartialOverride(callInfo, appID, dynamicTableID, updateValues);
            return callInfo;
        }

        [NonAction]
        partial void GridViewEditTableBatchUpdatePartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long dynamicTableID, long? dynamicTableVersionID, MVCxGridViewBatchUpdateValues<BaseDynamicEntity, int> updateValues, long? appID);

        [NonAction]
        public override System.Web.Mvc.ActionResult GridViewEditTableBatchUpdatePartial(long dynamicTableID, long? dynamicTableVersionID, MVCxGridViewBatchUpdateValues<BaseDynamicEntity, int> updateValues, long? appID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GridViewEditTableBatchUpdatePartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableID", dynamicTableID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableVersionID", dynamicTableVersionID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "updateValues", updateValues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appID", appID);
            GridViewEditTableBatchUpdatePartialOverride(callInfo, dynamicTableID, dynamicTableVersionID, updateValues, appID);
            return callInfo;
        }

        [NonAction]
        partial void GetTablesListOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetTablesList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetTablesList);
            GetTablesListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DynamicEntitySelectorGridViewPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long dynamicTableID, long? dynamicTableVersionID, bool isSingle);

        [NonAction]
        public override System.Web.Mvc.ActionResult DynamicEntitySelectorGridViewPartial(long dynamicTableID, long? dynamicTableVersionID, bool isSingle)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DynamicEntitySelectorGridViewPartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableID", dynamicTableID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableVersionID", dynamicTableVersionID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isSingle", isSingle);
            DynamicEntitySelectorGridViewPartialOverride(callInfo, dynamicTableID, dynamicTableVersionID, isSingle);
            return callInfo;
        }

        [NonAction]
        partial void DynamicColumnSelectorGridViewPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long dynamicTableID);

        [NonAction]
        public override System.Web.Mvc.ActionResult DynamicColumnSelectorGridViewPartial(long dynamicTableID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DynamicColumnSelectorGridViewPartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableID", dynamicTableID);
            DynamicColumnSelectorGridViewPartialOverride(callInfo, dynamicTableID);
            return callInfo;
        }

        [NonAction]
        partial void GetDynamicEntityDescriptionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string ids);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDynamicEntityDescription(string ids)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicEntityDescription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ids", ids);
            GetDynamicEntityDescriptionOverride(callInfo, ids);
            return callInfo;
        }

        [NonAction]
        partial void GetDynamicEntityWithColumnDescriptionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string ids, long columnID);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDynamicEntityWithColumnDescription(string ids, long columnID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicEntityWithColumnDescription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ids", ids);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "columnID", columnID);
            GetDynamicEntityWithColumnDescriptionOverride(callInfo, ids, columnID);
            return callInfo;
        }

        [NonAction]
        partial void GetDynamicEntityFullDescriptionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string ids);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDynamicEntityFullDescription(string ids)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicEntityFullDescription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ids", ids);
            GetDynamicEntityFullDescriptionOverride(callInfo, ids);
            return callInfo;
        }

        [NonAction]
        partial void GetDynamicColumnDescriptionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string ids);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDynamicColumnDescription(string ids)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicColumnDescription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ids", ids);
            GetDynamicColumnDescriptionOverride(callInfo, ids);
            return callInfo;
        }

        [NonAction]
        partial void GetDynamicEntitiesOverviewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ids);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetDynamicEntitiesOverview(string ids)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetDynamicEntitiesOverview);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ids", ids);
            GetDynamicEntitiesOverviewOverride(callInfo, ids);
            return callInfo;
        }

        [NonAction]
        partial void ExportToOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long EditingDynamicTableID, long? DynamicTableVersionID);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportTo(long EditingDynamicTableID, long? DynamicTableVersionID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EditingDynamicTableID", EditingDynamicTableID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DynamicTableVersionID", DynamicTableVersionID);
            ExportToOverride(callInfo, EditingDynamicTableID, DynamicTableVersionID);
            return callInfo;
        }

        [NonAction]
        partial void ImportOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, long dynamicTableID, string file, long? DynamicTableVersionID);

        [NonAction]
        public override System.Web.Mvc.JsonResult Import(long dynamicTableID, string file, long? DynamicTableVersionID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Import);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dynamicTableID", dynamicTableID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DynamicTableVersionID", DynamicTableVersionID);
            ImportOverride(callInfo, dynamicTableID, file, DynamicTableVersionID);
            return callInfo;
        }

        [NonAction]
        partial void GetDynamicTableVersionsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, long tableID);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDynamicTableVersions(long tableID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicTableVersions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tableID", tableID);
            GetDynamicTableVersionsOverride(callInfo, tableID);
            return callInfo;
        }

        [NonAction]
        partial void GetDynamicTableVersionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDynamicTableVersion(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDynamicTableVersion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetDynamicTableVersionOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CreateDynamicTableVersionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, long tableID, string name);

        [NonAction]
        public override System.Web.Mvc.JsonResult CreateDynamicTableVersion(long tableID, string name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateDynamicTableVersion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tableID", tableID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            CreateDynamicTableVersionOverride(callInfo, tableID, name);
            return callInfo;
        }

        [NonAction]
        partial void DeleteDynamicTableVersionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.JsonResult DeleteDynamicTableVersion(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteDynamicTableVersion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteDynamicTableVersionOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DataBaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DataBase()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DataBase);
            DataBaseOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CodesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Codes()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Codes);
            CodesOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
