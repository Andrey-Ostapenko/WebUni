// <auto-generated /> 
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.
 
// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC
 
using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace livemenu.Areas.Payment.Controllers
{
    public partial class RobokassaController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RobokassaController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Confirm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Confirm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Success()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Success);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public RobokassaController Actions { get { return MVC.PaymentArea.Robokassa; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Payment";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Robokassa";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Robokassa";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Confirm = "Confirm";
            public readonly string Success = "Success";
            public readonly string Fail = "Fail";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Confirm = "Confirm";
            public const string Success = "Success";
            public const string Fail = "Fail";
        }


        static readonly ActionParamsClass_Confirm s_params_Confirm = new ActionParamsClass_Confirm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Confirm ConfirmParams { get { return s_params_Confirm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Confirm
        {
            public readonly string confirmationRequest = "confirmationRequest";
        }
        static readonly ActionParamsClass_Success s_params_Success = new ActionParamsClass_Success();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Success SuccessParams { get { return s_params_Success; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Success
        {
            public readonly string confirmationRequest = "confirmationRequest";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_RobokassaController : livemenu.Areas.Payment.Controllers.RobokassaController
    {
        public T4MVC_RobokassaController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ConfirmOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, RobokassaConfirmationRequest confirmationRequest);

        [NonAction]
        public override System.Web.Mvc.ActionResult Confirm(RobokassaConfirmationRequest confirmationRequest)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Confirm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "confirmationRequest", confirmationRequest);
            ConfirmOverride(callInfo, confirmationRequest);
            return callInfo;
        }

        [NonAction]
        partial void SuccessOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, RobokassaConfirmationRequest confirmationRequest);

        [NonAction]
        public override System.Web.Mvc.ActionResult Success(RobokassaConfirmationRequest confirmationRequest)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Success);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "confirmationRequest", confirmationRequest);
            SuccessOverride(callInfo, confirmationRequest);
            return callInfo;
        }

        [NonAction]
        partial void FailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Fail()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Fail);
            FailOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
