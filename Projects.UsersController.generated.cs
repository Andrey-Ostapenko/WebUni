// <auto-generated /> 
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.
 
// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC
 
using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace livemenu.Areas.Projects.Controllers
{
    public partial class UsersController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected UsersController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SearchByClientRole()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SearchByClientRole);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetByClientRole()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetByClientRole);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SearchByClientRoleStatus()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SearchByClientRoleStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetByClientRoleStatus()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetByClientRoleStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RolesGridViewBatchUpdatePartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RolesGridViewBatchUpdatePartial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult StatusesGridViewBatchUpdatePartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StatusesGridViewBatchUpdatePartial);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public UsersController Actions { get { return MVC.Projects.Users; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Projects";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Users";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Users";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string SearchByClientRole = "SearchByClientRole";
            public readonly string GetByClientRole = "GetByClientRole";
            public readonly string SearchByClientRoleStatus = "SearchByClientRoleStatus";
            public readonly string GetByClientRoleStatus = "GetByClientRoleStatus";
            public readonly string Roles = "Roles";
            public readonly string RolesGridViewPartial = "RolesGridViewPartial";
            public readonly string RolesGridViewBatchUpdatePartial = "RolesGridViewBatchUpdatePartial";
            public readonly string Statuses = "Statuses";
            public readonly string StatusesGridViewPartial = "StatusesGridViewPartial";
            public readonly string StatusesGridViewBatchUpdatePartial = "StatusesGridViewBatchUpdatePartial";
            public readonly string DataBase = "DataBase";
            public readonly string Codes = "Codes";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string SearchByClientRole = "SearchByClientRole";
            public const string GetByClientRole = "GetByClientRole";
            public const string SearchByClientRoleStatus = "SearchByClientRoleStatus";
            public const string GetByClientRoleStatus = "GetByClientRoleStatus";
            public const string Roles = "Roles";
            public const string RolesGridViewPartial = "RolesGridViewPartial";
            public const string RolesGridViewBatchUpdatePartial = "RolesGridViewBatchUpdatePartial";
            public const string Statuses = "Statuses";
            public const string StatusesGridViewPartial = "StatusesGridViewPartial";
            public const string StatusesGridViewBatchUpdatePartial = "StatusesGridViewBatchUpdatePartial";
            public const string DataBase = "DataBase";
            public const string Codes = "Codes";
        }


        static readonly ActionParamsClass_SearchByClientRole s_params_SearchByClientRole = new ActionParamsClass_SearchByClientRole();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SearchByClientRole SearchByClientRoleParams { get { return s_params_SearchByClientRole; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SearchByClientRole
        {
            public readonly string id = "id";
            public readonly string page = "page";
            public readonly string pagelimit = "pagelimit";
        }
        static readonly ActionParamsClass_GetByClientRole s_params_GetByClientRole = new ActionParamsClass_GetByClientRole();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetByClientRole GetByClientRoleParams { get { return s_params_GetByClientRole; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetByClientRole
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SearchByClientRoleStatus s_params_SearchByClientRoleStatus = new ActionParamsClass_SearchByClientRoleStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SearchByClientRoleStatus SearchByClientRoleStatusParams { get { return s_params_SearchByClientRoleStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SearchByClientRoleStatus
        {
            public readonly string id = "id";
            public readonly string page = "page";
            public readonly string pagelimit = "pagelimit";
        }
        static readonly ActionParamsClass_GetByClientRoleStatus s_params_GetByClientRoleStatus = new ActionParamsClass_GetByClientRoleStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetByClientRoleStatus GetByClientRoleStatusParams { get { return s_params_GetByClientRoleStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetByClientRoleStatus
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_RolesGridViewBatchUpdatePartial s_params_RolesGridViewBatchUpdatePartial = new ActionParamsClass_RolesGridViewBatchUpdatePartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RolesGridViewBatchUpdatePartial RolesGridViewBatchUpdatePartialParams { get { return s_params_RolesGridViewBatchUpdatePartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RolesGridViewBatchUpdatePartial
        {
            public readonly string updateValues = "updateValues";
        }
        static readonly ActionParamsClass_StatusesGridViewBatchUpdatePartial s_params_StatusesGridViewBatchUpdatePartial = new ActionParamsClass_StatusesGridViewBatchUpdatePartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_StatusesGridViewBatchUpdatePartial StatusesGridViewBatchUpdatePartialParams { get { return s_params_StatusesGridViewBatchUpdatePartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_StatusesGridViewBatchUpdatePartial
        {
            public readonly string updateValues = "updateValues";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string Roles = "Roles";
                public readonly string RolesGridViewPartial = "RolesGridViewPartial";
                public readonly string Statuses = "Statuses";
                public readonly string StatusesGridViewPartial = "StatusesGridViewPartial";
            }
            public readonly string Index = "~/Areas/Projects/Views/Users/Index.cshtml";
            public readonly string Roles = "~/Areas/Projects/Views/Users/Roles.cshtml";
            public readonly string RolesGridViewPartial = "~/Areas/Projects/Views/Users/RolesGridViewPartial.cshtml";
            public readonly string Statuses = "~/Areas/Projects/Views/Users/Statuses.cshtml";
            public readonly string StatusesGridViewPartial = "~/Areas/Projects/Views/Users/StatusesGridViewPartial.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_UsersController : livemenu.Areas.Projects.Controllers.UsersController
    {
        public T4MVC_UsersController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SearchByClientRoleOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id, int page, int pagelimit);

        [NonAction]
        public override System.Web.Mvc.JsonResult SearchByClientRole(string id, int page, int pagelimit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SearchByClientRole);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pagelimit", pagelimit);
            SearchByClientRoleOverride(callInfo, id, page, pagelimit);
            return callInfo;
        }

        [NonAction]
        partial void GetByClientRoleOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetByClientRole(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetByClientRole);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetByClientRoleOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SearchByClientRoleStatusOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id, int page, int pagelimit);

        [NonAction]
        public override System.Web.Mvc.JsonResult SearchByClientRoleStatus(string id, int page, int pagelimit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SearchByClientRoleStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pagelimit", pagelimit);
            SearchByClientRoleStatusOverride(callInfo, id, page, pagelimit);
            return callInfo;
        }

        [NonAction]
        partial void GetByClientRoleStatusOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetByClientRoleStatus(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetByClientRoleStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetByClientRoleStatusOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void RolesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Roles()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Roles);
            RolesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RolesGridViewPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RolesGridViewPartial()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RolesGridViewPartial);
            RolesGridViewPartialOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RolesGridViewBatchUpdatePartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVCxGridViewBatchUpdateValues<ClientRole, int> updateValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult RolesGridViewBatchUpdatePartial(MVCxGridViewBatchUpdateValues<ClientRole, int> updateValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RolesGridViewBatchUpdatePartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "updateValues", updateValues);
            RolesGridViewBatchUpdatePartialOverride(callInfo, updateValues);
            return callInfo;
        }

        [NonAction]
        partial void StatusesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Statuses()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Statuses);
            StatusesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void StatusesGridViewPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult StatusesGridViewPartial()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StatusesGridViewPartial);
            StatusesGridViewPartialOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void StatusesGridViewBatchUpdatePartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVCxGridViewBatchUpdateValues<ClientRoleStatus, int> updateValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult StatusesGridViewBatchUpdatePartial(MVCxGridViewBatchUpdateValues<ClientRoleStatus, int> updateValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StatusesGridViewBatchUpdatePartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "updateValues", updateValues);
            StatusesGridViewBatchUpdatePartialOverride(callInfo, updateValues);
            return callInfo;
        }

        [NonAction]
        partial void DataBaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DataBase()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DataBase);
            DataBaseOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CodesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Codes()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Codes);
            CodesOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
